# ! [doc = " Input of the LLVM bitcode format."] use llvm_sys :: prelude :: * ; # [doc = " Build a module from the bitcode in the specified memory buffer."] # [doc = ""] # [doc = " Returns 0 on success and the generated module in `OutModule`."] # [doc = " Optionally returns a human-readable error message in `OutMessage`."] # [deprecated (since = "3.8" , note = "Use LLVMParseBitcode2")] # [no_mangle] pub unsafe extern "C" fn LLVMParseBitcode (MemBuf : LLVMMemoryBufferRef , OutModule : * mut LLVMModuleRef , OutMessage : * mut * mut :: libc :: c_char ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMParseBitcode (MemBuf , OutModule , OutMessage) } # [doc = " Build a module from the bitcode in the specified memory buffer."] # [doc = ""] # [doc = " Returns the created module in OutModule, returns 0 on success."] # [no_mangle] pub unsafe extern "C" fn LLVMParseBitcode2 (MemBuf : LLVMMemoryBufferRef , OutModule : * mut LLVMModuleRef ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMParseBitcode2 (MemBuf , OutModule) } # [deprecated (since = "3.8" , note = "Use LLVMParseBitcodeInContext2")] # [no_mangle] pub unsafe extern "C" fn LLVMParseBitcodeInContext (ContextRef : LLVMContextRef , MemBuf : LLVMMemoryBufferRef , OutModule : * mut LLVMModuleRef , OutMessage : * mut * mut :: libc :: c_char ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMParseBitcodeInContext (ContextRef , MemBuf , OutModule , OutMessage) } # [no_mangle] pub unsafe extern "C" fn LLVMParseBitcodeInContext2 (ContextRef : LLVMContextRef , MemBuf : LLVMMemoryBufferRef , OutModule : * mut LLVMModuleRef ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMParseBitcodeInContext2 (ContextRef , MemBuf , OutModule) } # [doc = " Read a module from the specified path, returning a module provider"] # [doc = " performing lazy deserialization."] # [doc = ""] # [doc = " Returns 0 on success and an optional error message."] # [deprecated (since = "3.8" , note = "Use LLVMGetBitcodeModuleInContext2")] # [no_mangle] pub unsafe extern "C" fn LLVMGetBitcodeModuleInContext (ContextRef : LLVMContextRef , MemBuf : LLVMMemoryBufferRef , OutM : * mut LLVMModuleRef , OutMessage : * mut * mut :: libc :: c_char ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMGetBitcodeModuleInContext (ContextRef , MemBuf , OutM , OutMessage) } # [doc = " Read a module from the specified path, returning a module provider"] # [doc = " performing lazy deserialization."] # [doc = ""] # [doc = " Returns 0 on success."] # [no_mangle] pub unsafe extern "C" fn LLVMGetBitcodeModuleInContext2 (ContextRef : LLVMContextRef , MemBuf : LLVMMemoryBufferRef , OutM : * mut LLVMModuleRef ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMGetBitcodeModuleInContext2 (ContextRef , MemBuf , OutM) } # [deprecated (since = "3.8" , note = "Use LLVMGetBitcodeModule2")] # [no_mangle] pub unsafe extern "C" fn LLVMGetBitcodeModule (MemBuf : LLVMMemoryBufferRef , OutM : * mut LLVMModuleRef , OutMessage : * mut * mut :: libc :: c_char ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMGetBitcodeModule (MemBuf , OutM , OutMessage) } # [doc = " Read a module from the specified path."] # [doc = ""] # [doc = " Outputs a module provider which performs lazy deserialization."] # [doc = " Returns 0 on success."] # [no_mangle] pub unsafe extern "C" fn LLVMGetBitcodeModule2 (MemBuf : LLVMMemoryBufferRef , OutM : * mut LLVMModuleRef ,) -> LLVMBool { llvm_sys :: bit_reader :: LLVMGetBitcodeModule2 (MemBuf , OutM) }