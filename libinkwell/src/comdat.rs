# ! [doc = " COMDAT"] pub use llvm_sys :: comdat :: LLVMComdatSelectionKind ; use llvm_sys :: prelude :: * ; # [doc = " Return the Comdat in the module with the specified name. It is created if it didn't already exist."] # [no_mangle] pub unsafe extern "C" fn LLVMGetOrInsertComdat (M : LLVMModuleRef , Name : * const :: libc :: c_char ,) -> LLVMComdatRef { llvm_sys :: comdat :: LLVMGetOrInsertComdat (M , Name) } # [doc = " Get the Comdat assigned to the given global object."] # [no_mangle] pub unsafe extern "C" fn LLVMGetComdat (V : LLVMValueRef) -> LLVMComdatRef { llvm_sys :: comdat :: LLVMGetComdat (V) } # [doc = " Assign the Comdat to the given global object."] # [no_mangle] pub unsafe extern "C" fn LLVMSetComdat (V : LLVMValueRef , C : LLVMComdatRef) { llvm_sys :: comdat :: LLVMSetComdat (V , C) } # [doc = " Get the conflict resolution selection kind for the Comdat."] # [no_mangle] pub unsafe extern "C" fn LLVMGetComdatSelectionKind (C : LLVMComdatRef) -> LLVMComdatSelectionKind { llvm_sys :: comdat :: LLVMGetComdatSelectionKind (C) } # [doc = " Set the conflict resolution selection kind for the Comdat."] # [no_mangle] pub unsafe extern "C" fn LLVMSetComdatSelectionKind (C : LLVMComdatRef , Kind : LLVMComdatSelectionKind ,) { llvm_sys :: comdat :: LLVMSetComdatSelectionKind (C , Kind) }