# ! [doc = " Initialization routines which must be called before using library features."] use llvm_sys :: prelude :: * ; # [no_mangle] pub unsafe extern "C" fn LLVMInitializeCore (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeCore (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeTransformUtils (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeTransformUtils (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeScalarOpts (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeScalarOpts (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeObjCARCOpts (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeObjCARCOpts (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeVectorization (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeVectorization (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeInstCombine (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeInstCombine (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeAggressiveInstCombiner (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeAggressiveInstCombiner (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeIPO (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeIPO (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeInstrumentation (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeInstrumentation (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeAnalysis (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeAnalysis (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeIPA (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeIPA (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeCodeGen (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeCodeGen (R) } # [no_mangle] pub unsafe extern "C" fn LLVMInitializeTarget (R : LLVMPassRegistryRef) { llvm_sys :: initialization :: LLVMInitializeTarget (R) }