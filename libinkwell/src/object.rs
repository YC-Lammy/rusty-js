# ! [doc = " Object file reading and writing"] pub use llvm_sys :: object :: * ; use llvm_sys :: prelude :: * ; # [doc = " Create a binary file from the given memory buffer."] # [no_mangle] pub unsafe extern "C" fn LLVMCreateBinary (MemBuf : LLVMMemoryBufferRef , Context : LLVMContextRef , ErrorMessage : * mut * mut :: libc :: c_char ,) -> LLVMBinaryRef { llvm_sys :: object :: LLVMCreateBinary (MemBuf , Context , ErrorMessage) } # [doc = " Dispose of a binary file"] # [no_mangle] pub unsafe extern "C" fn LLVMDisposeBinary (BR : LLVMBinaryRef) { llvm_sys :: object :: LLVMDisposeBinary (BR) } # [no_mangle] pub unsafe extern "C" fn LLVMBinaryCopyMemoryBuffer (BR : LLVMBinaryRef) -> LLVMMemoryBufferRef { llvm_sys :: object :: LLVMBinaryCopyMemoryBuffer (BR) } # [no_mangle] pub unsafe extern "C" fn LLVMBinaryGetType (BR : LLVMBinaryRef) -> LLVMBinaryType { llvm_sys :: object :: LLVMBinaryGetType (BR) } # [no_mangle] pub unsafe extern "C" fn LLVMMachOUniversalBinaryCopyObjectForArch (BR : LLVMBinaryRef , Arch : * const :: libc :: c_char , ArchLen : :: libc :: size_t , ErrorMessage : * mut * mut :: libc :: c_char ,) -> LLVMBinaryRef { llvm_sys :: object :: LLVMMachOUniversalBinaryCopyObjectForArch (BR , Arch , ArchLen , ErrorMessage) } # [no_mangle] pub unsafe extern "C" fn LLVMObjectFileCopySectionIterator (BR : LLVMBinaryRef ,) -> LLVMSectionIteratorRef { llvm_sys :: object :: LLVMObjectFileCopySectionIterator (BR) } # [no_mangle] pub unsafe extern "C" fn LLVMObjectFileIsSectionIteratorAtEnd (BR : LLVMBinaryRef , SI : LLVMSectionIteratorRef ,) -> LLVMBool { llvm_sys :: object :: LLVMObjectFileIsSectionIteratorAtEnd (BR , SI) } # [no_mangle] pub unsafe extern "C" fn LLVMObjectFileCopySymbolIterator (BR : LLVMBinaryRef ,) -> LLVMSymbolIteratorRef { llvm_sys :: object :: LLVMObjectFileCopySymbolIterator (BR) } # [no_mangle] pub unsafe extern "C" fn LLVMObjectFileIsSymbolIteratorAtEnd (BR : LLVMBinaryRef , SI : LLVMSymbolIteratorRef ,) -> LLVMBool { llvm_sys :: object :: LLVMObjectFileIsSymbolIteratorAtEnd (BR , SI) } # [no_mangle] pub unsafe extern "C" fn LLVMDisposeSectionIterator (SI : LLVMSectionIteratorRef) { llvm_sys :: object :: LLVMDisposeSectionIterator (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMMoveToNextSection (SI : LLVMSectionIteratorRef) { llvm_sys :: object :: LLVMMoveToNextSection (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMMoveToContainingSection (Sect : LLVMSectionIteratorRef , Sym : LLVMSymbolIteratorRef ,) { llvm_sys :: object :: LLVMMoveToContainingSection (Sect , Sym) } # [no_mangle] pub unsafe extern "C" fn LLVMDisposeSymbolIterator (SI : LLVMSymbolIteratorRef) { llvm_sys :: object :: LLVMDisposeSymbolIterator (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMMoveToNextSymbol (SI : LLVMSymbolIteratorRef) { llvm_sys :: object :: LLVMMoveToNextSymbol (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSectionName (SI : LLVMSectionIteratorRef) -> * const :: libc :: c_char { llvm_sys :: object :: LLVMGetSectionName (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSectionSize (SI : LLVMSectionIteratorRef) -> u64 { llvm_sys :: object :: LLVMGetSectionSize (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSectionContents (SI : LLVMSectionIteratorRef ,) -> * const :: libc :: c_char { llvm_sys :: object :: LLVMGetSectionContents (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSectionAddress (SI : LLVMSectionIteratorRef) -> u64 { llvm_sys :: object :: LLVMGetSectionAddress (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSectionContainsSymbol (SI : LLVMSectionIteratorRef , Sym : LLVMSymbolIteratorRef ,) -> LLVMBool { llvm_sys :: object :: LLVMGetSectionContainsSymbol (SI , Sym) } # [no_mangle] pub unsafe extern "C" fn LLVMGetRelocations (Section : LLVMSectionIteratorRef ,) -> LLVMRelocationIteratorRef { llvm_sys :: object :: LLVMGetRelocations (Section) } # [no_mangle] pub unsafe extern "C" fn LLVMDisposeRelocationIterator (RI : LLVMRelocationIteratorRef) { llvm_sys :: object :: LLVMDisposeRelocationIterator (RI) } # [no_mangle] pub unsafe extern "C" fn LLVMIsRelocationIteratorAtEnd (Section : LLVMSectionIteratorRef , RI : LLVMRelocationIteratorRef ,) -> LLVMBool { llvm_sys :: object :: LLVMIsRelocationIteratorAtEnd (Section , RI) } # [no_mangle] pub unsafe extern "C" fn LLVMMoveToNextRelocation (RI : LLVMRelocationIteratorRef) { llvm_sys :: object :: LLVMMoveToNextRelocation (RI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSymbolName (SI : LLVMSymbolIteratorRef) -> * const :: libc :: c_char { llvm_sys :: object :: LLVMGetSymbolName (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSymbolAddress (SI : LLVMSymbolIteratorRef) -> u64 { llvm_sys :: object :: LLVMGetSymbolAddress (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetSymbolSize (SI : LLVMSymbolIteratorRef) -> u64 { llvm_sys :: object :: LLVMGetSymbolSize (SI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetRelocationOffset (RI : LLVMRelocationIteratorRef) -> u64 { llvm_sys :: object :: LLVMGetRelocationOffset (RI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetRelocationSymbol (RI : LLVMRelocationIteratorRef ,) -> LLVMSymbolIteratorRef { llvm_sys :: object :: LLVMGetRelocationSymbol (RI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetRelocationType (RI : LLVMRelocationIteratorRef) -> u64 { llvm_sys :: object :: LLVMGetRelocationType (RI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetRelocationTypeName (RI : LLVMRelocationIteratorRef ,) -> * const :: libc :: c_char { llvm_sys :: object :: LLVMGetRelocationTypeName (RI) } # [no_mangle] pub unsafe extern "C" fn LLVMGetRelocationValueString (RI : LLVMRelocationIteratorRef ,) -> * const :: libc :: c_char { llvm_sys :: object :: LLVMGetRelocationValueString (RI) } # [allow (deprecated)] # [deprecated (since = "LLVM 9.0" , note = "Use LLVMCreateBinary instead")] # [no_mangle] pub unsafe extern "C" fn LLVMCreateObjectFile (MemBuf : LLVMMemoryBufferRef) -> LLVMObjectFileRef { llvm_sys :: object :: LLVMCreateObjectFile (MemBuf) } # [allow (deprecated)] # [deprecated (since = "LLVM 9.0" , note = "Use LLVMDisposeBinary instead")] # [no_mangle] pub unsafe extern "C" fn LLVMDisposeObjectFile (ObjectFile : LLVMObjectFileRef) { llvm_sys :: object :: LLVMDisposeObjectFile (ObjectFile) } # [allow (deprecated)] # [deprecated (since = "LLVM 9.0" , note = "Use LLVMObjectFileCopySectionIterator instead")] # [no_mangle] pub unsafe extern "C" fn LLVMGetSections (ObjectFile : LLVMObjectFileRef) -> LLVMSectionIteratorRef { llvm_sys :: object :: LLVMGetSections (ObjectFile) } # [allow (deprecated)] # [deprecated (since = "LLVM 9.0" , note = "Use LLVMObjectFileIsSectionIteratorAtEnd instead")] # [no_mangle] pub unsafe extern "C" fn LLVMIsSectionIteratorAtEnd (ObjectFile : LLVMObjectFileRef , SI : LLVMSectionIteratorRef ,) -> LLVMBool { llvm_sys :: object :: LLVMIsSectionIteratorAtEnd (ObjectFile , SI) } # [allow (deprecated)] # [deprecated (since = "LLVM 9.0" , note = "Use LLVMObjectFileCopySymbolIterator instead")] # [no_mangle] pub unsafe extern "C" fn LLVMGetSymbols (ObjectFile : LLVMObjectFileRef) -> LLVMSymbolIteratorRef { llvm_sys :: object :: LLVMGetSymbols (ObjectFile) } # [allow (deprecated)] # [deprecated (since = "LLVM 9.0" , note = "Use LLVMObjectFileIsSymbolIteratorAtEnd instead")] # [no_mangle] pub unsafe extern "C" fn LLVMIsSymbolIteratorAtEnd (ObjectFile : LLVMObjectFileRef , SI : LLVMSymbolIteratorRef ,) -> LLVMBool { llvm_sys :: object :: LLVMIsSymbolIteratorAtEnd (ObjectFile , SI) }