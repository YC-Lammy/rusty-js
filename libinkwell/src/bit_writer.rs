# ! [doc = " Output of the LLVM bitcode format."] use llvm_sys :: prelude :: * ; # [doc = " Write a module to the specified path."] # [doc = ""] # [doc = " Returns 0 on success."] # [no_mangle] pub unsafe extern "C" fn LLVMWriteBitcodeToFile (M : LLVMModuleRef , Path : * const :: libc :: c_char ,) -> :: libc :: c_int { llvm_sys :: bit_writer :: LLVMWriteBitcodeToFile (M , Path) } # [doc = " Write a module to an open file descriptor."] # [doc = ""] # [doc = " Returns 0 on success."] # [no_mangle] pub unsafe extern "C" fn LLVMWriteBitcodeToFD (M : LLVMModuleRef , FD : :: libc :: c_int , ShouldClose : :: libc :: c_int , Unbuffered : :: libc :: c_int ,) -> :: libc :: c_int { llvm_sys :: bit_writer :: LLVMWriteBitcodeToFD (M , FD , ShouldClose , Unbuffered) } # [doc = " Deprecated: use LLVMWriteBitcodeToFD"] # [no_mangle] pub unsafe extern "C" fn LLVMWriteBitcodeToFileHandle (M : LLVMModuleRef , Handle : :: libc :: c_int ,) -> :: libc :: c_int { llvm_sys :: bit_writer :: LLVMWriteBitcodeToFileHandle (M , Handle) } # [doc = " Writes a module to a new memory buffer."] # [no_mangle] pub unsafe extern "C" fn LLVMWriteBitcodeToMemoryBuffer (M : LLVMModuleRef) -> LLVMMemoryBufferRef { llvm_sys :: bit_writer :: LLVMWriteBitcodeToMemoryBuffer (M) }