<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="1343"><g><title>`0x1F9E5880000 (1 samples, 0.07%)</title><rect x="0.0000%" y="965" width="0.0745%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>`0x1F9E5880121 (1 samples, 0.07%)</title><rect x="0.0745%" y="965" width="0.0745%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3245%" y="975.50"></text></g><g><title>`0x1F9E588014E (1 samples, 0.07%)</title><rect x="0.1489%" y="965" width="0.0745%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.3989%" y="975.50"></text></g><g><title>`0x1F9E588016E (1 samples, 0.07%)</title><rect x="0.2234%" y="965" width="0.0745%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.4734%" y="975.50"></text></g><g><title>`0x1F9E58801A9 (1 samples, 0.07%)</title><rect x="0.2978%" y="965" width="0.0745%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.5478%" y="975.50"></text></g><g><title>`0x1F9E58801C1 (10 samples, 0.74%)</title><rect x="0.3723%" y="965" width="0.7446%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="10"/><text x="0.6223%" y="975.50"></text></g><g><title>`0x1F9E58801DD (1 samples, 0.07%)</title><rect x="1.1169%" y="965" width="0.0745%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="1"/><text x="1.3669%" y="975.50"></text></g><g><title>`0x1F9E58801E0 (2 samples, 0.15%)</title><rect x="1.1914%" y="965" width="0.1489%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="2"/><text x="1.4414%" y="975.50"></text></g><g><title>`0x1F9E58801F0 (6 samples, 0.45%)</title><rect x="1.3403%" y="965" width="0.4468%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="6"/><text x="1.5903%" y="975.50"></text></g><g><title>`0x1F9E588020D (1 samples, 0.07%)</title><rect x="1.7870%" y="965" width="0.0745%" height="15" fill="rgb(220,122,19)" fg:x="24" fg:w="1"/><text x="2.0370%" y="975.50"></text></g><g><title>`0x1F9E588021A (6 samples, 0.45%)</title><rect x="1.8615%" y="965" width="0.4468%" height="15" fill="rgb(250,228,42)" fg:x="25" fg:w="6"/><text x="2.1115%" y="975.50"></text></g><g><title>`0x1F9E588022D (1 samples, 0.07%)</title><rect x="2.3083%" y="965" width="0.0745%" height="15" fill="rgb(240,193,28)" fg:x="31" fg:w="1"/><text x="2.5583%" y="975.50"></text></g><g><title>`0x1F9E5880280 (8 samples, 0.60%)</title><rect x="2.3827%" y="965" width="0.5957%" height="15" fill="rgb(216,20,37)" fg:x="32" fg:w="8"/><text x="2.6327%" y="975.50"></text></g><g><title>`0x1F9E58802B5 (10 samples, 0.74%)</title><rect x="2.9784%" y="965" width="0.7446%" height="15" fill="rgb(206,188,39)" fg:x="40" fg:w="10"/><text x="3.2284%" y="975.50"></text></g><g><title>`0x1F9E58802E9 (8 samples, 0.60%)</title><rect x="3.7230%" y="965" width="0.5957%" height="15" fill="rgb(217,207,13)" fg:x="50" fg:w="8"/><text x="3.9730%" y="975.50"></text></g><g><title>`0x1F9E58802EC (1 samples, 0.07%)</title><rect x="4.3187%" y="965" width="0.0745%" height="15" fill="rgb(231,73,38)" fg:x="58" fg:w="1"/><text x="4.5687%" y="975.50"></text></g><g><title>`0x1F9E5880306 (1 samples, 0.07%)</title><rect x="4.3931%" y="965" width="0.0745%" height="15" fill="rgb(225,20,46)" fg:x="59" fg:w="1"/><text x="4.6431%" y="975.50"></text></g><g><title>`0x1F9E588030B (5 samples, 0.37%)</title><rect x="4.4676%" y="965" width="0.3723%" height="15" fill="rgb(210,31,41)" fg:x="60" fg:w="5"/><text x="4.7176%" y="975.50"></text></g><g><title>`0x1F9E5880323 (1 samples, 0.07%)</title><rect x="4.8399%" y="965" width="0.0745%" height="15" fill="rgb(221,200,47)" fg:x="65" fg:w="1"/><text x="5.0899%" y="975.50"></text></g><g><title>`0x1F9E5880379 (6 samples, 0.45%)</title><rect x="4.9144%" y="965" width="0.4468%" height="15" fill="rgb(226,26,5)" fg:x="66" fg:w="6"/><text x="5.1644%" y="975.50"></text></g><g><title>`0x1F9E588037D (1 samples, 0.07%)</title><rect x="5.3611%" y="965" width="0.0745%" height="15" fill="rgb(249,33,26)" fg:x="72" fg:w="1"/><text x="5.6111%" y="975.50"></text></g><g><title>`0x1F9E58803A1 (5 samples, 0.37%)</title><rect x="5.4356%" y="965" width="0.3723%" height="15" fill="rgb(235,183,28)" fg:x="73" fg:w="5"/><text x="5.6856%" y="975.50"></text></g><g><title>`0x1F9E58803BC (1 samples, 0.07%)</title><rect x="5.8079%" y="965" width="0.0745%" height="15" fill="rgb(221,5,38)" fg:x="78" fg:w="1"/><text x="6.0579%" y="975.50"></text></g><g><title>`0x1F9E58803D8 (4 samples, 0.30%)</title><rect x="5.8824%" y="965" width="0.2978%" height="15" fill="rgb(247,18,42)" fg:x="79" fg:w="4"/><text x="6.1324%" y="975.50"></text></g><g><title>`0x1F9E5880405 (4 samples, 0.30%)</title><rect x="6.1802%" y="965" width="0.2978%" height="15" fill="rgb(241,131,45)" fg:x="83" fg:w="4"/><text x="6.4302%" y="975.50"></text></g><g><title>`0x1F9E5880408 (1 samples, 0.07%)</title><rect x="6.4780%" y="965" width="0.0745%" height="15" fill="rgb(249,31,29)" fg:x="87" fg:w="1"/><text x="6.7280%" y="975.50"></text></g><g><title>`0x1F9E5880413 (1 samples, 0.07%)</title><rect x="6.5525%" y="965" width="0.0745%" height="15" fill="rgb(225,111,53)" fg:x="88" fg:w="1"/><text x="6.8025%" y="975.50"></text></g><g><title>`0x1F9E588044E (8 samples, 0.60%)</title><rect x="6.6270%" y="965" width="0.5957%" height="15" fill="rgb(238,160,17)" fg:x="89" fg:w="8"/><text x="6.8770%" y="975.50"></text></g><g><title>`0x1F9E5880468 (1 samples, 0.07%)</title><rect x="7.2226%" y="965" width="0.0745%" height="15" fill="rgb(214,148,48)" fg:x="97" fg:w="1"/><text x="7.4726%" y="975.50"></text></g><g><title>`0x1F9E588049E (5 samples, 0.37%)</title><rect x="7.2971%" y="965" width="0.3723%" height="15" fill="rgb(232,36,49)" fg:x="98" fg:w="5"/><text x="7.5471%" y="975.50"></text></g><g><title>`0x1F9E58804A0 (253 samples, 18.84%)</title><rect x="7.6694%" y="965" width="18.8384%" height="15" fill="rgb(209,103,24)" fg:x="103" fg:w="253"/><text x="7.9194%" y="975.50">`0x1F9E58804A0</text></g><g><title>ucrtbased`fmod (253 samples, 18.84%)</title><rect x="7.6694%" y="949" width="18.8384%" height="15" fill="rgb(229,88,8)" fg:x="103" fg:w="253"/><text x="7.9194%" y="959.50">ucrtbased`fmod</text></g><g><title>`0x1F9E58804AD (9 samples, 0.67%)</title><rect x="26.5078%" y="965" width="0.6701%" height="15" fill="rgb(213,181,19)" fg:x="356" fg:w="9"/><text x="26.7578%" y="975.50"></text></g><g><title>`0x1F9E58804F3 (2 samples, 0.15%)</title><rect x="27.1780%" y="965" width="0.1489%" height="15" fill="rgb(254,191,54)" fg:x="365" fg:w="2"/><text x="27.4280%" y="975.50"></text></g><g><title>`0x1F9E5880514 (1 samples, 0.07%)</title><rect x="27.3269%" y="965" width="0.0745%" height="15" fill="rgb(241,83,37)" fg:x="367" fg:w="1"/><text x="27.5769%" y="975.50"></text></g><g><title>`0x1F9E5880519 (6 samples, 0.45%)</title><rect x="27.4013%" y="965" width="0.4468%" height="15" fill="rgb(233,36,39)" fg:x="368" fg:w="6"/><text x="27.6513%" y="975.50"></text></g><g><title>`0x1F9E5880535 (10 samples, 0.74%)</title><rect x="27.8481%" y="965" width="0.7446%" height="15" fill="rgb(226,3,54)" fg:x="374" fg:w="10"/><text x="28.0981%" y="975.50"></text></g><g><title>`0x1F9E5880539 (6 samples, 0.45%)</title><rect x="28.5927%" y="965" width="0.4468%" height="15" fill="rgb(245,192,40)" fg:x="384" fg:w="6"/><text x="28.8427%" y="975.50"></text></g><g><title>`0x1F9E588053D (8 samples, 0.60%)</title><rect x="29.0395%" y="965" width="0.5957%" height="15" fill="rgb(238,167,29)" fg:x="390" fg:w="8"/><text x="29.2895%" y="975.50"></text></g><g><title>`0x1F9E5880543 (9 samples, 0.67%)</title><rect x="29.6351%" y="965" width="0.6701%" height="15" fill="rgb(232,182,51)" fg:x="398" fg:w="9"/><text x="29.8851%" y="975.50"></text></g><g><title>`0x1F9E5880547 (5 samples, 0.37%)</title><rect x="30.3053%" y="965" width="0.3723%" height="15" fill="rgb(231,60,39)" fg:x="407" fg:w="5"/><text x="30.5553%" y="975.50"></text></g><g><title>`0x1F9E588054F (7 samples, 0.52%)</title><rect x="30.6776%" y="965" width="0.5212%" height="15" fill="rgb(208,69,12)" fg:x="412" fg:w="7"/><text x="30.9276%" y="975.50"></text></g><g><title>`0x1F9E58805B1 (7 samples, 0.52%)</title><rect x="31.1988%" y="965" width="0.5212%" height="15" fill="rgb(235,93,37)" fg:x="419" fg:w="7"/><text x="31.4488%" y="975.50"></text></g><g><title>`0x1F9E5880623 (6 samples, 0.45%)</title><rect x="31.7200%" y="965" width="0.4468%" height="15" fill="rgb(213,116,39)" fg:x="426" fg:w="6"/><text x="31.9700%" y="975.50"></text></g><g><title>KernelBase`TlsGetValue (1 samples, 0.07%)</title><rect x="32.2413%" y="901" width="0.0745%" height="15" fill="rgb(222,207,29)" fg:x="433" fg:w="1"/><text x="32.4913%" y="911.50"></text></g><g><title>KernelBase`SetCurrentDirectoryA (1 samples, 0.07%)</title><rect x="32.2413%" y="885" width="0.0745%" height="15" fill="rgb(206,96,30)" fg:x="433" fg:w="1"/><text x="32.4913%" y="895.50"></text></g><g><title>ntdll`NtQueryValueKey (1 samples, 0.07%)</title><rect x="32.2413%" y="869" width="0.0745%" height="15" fill="rgb(218,138,4)" fg:x="433" fg:w="1"/><text x="32.4913%" y="879.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="32.3157%" y="901" width="0.0745%" height="15" fill="rgb(250,191,14)" fg:x="434" fg:w="1"/><text x="32.5657%" y="911.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.07%)</title><rect x="32.3157%" y="885" width="0.0745%" height="15" fill="rgb(239,60,40)" fg:x="434" fg:w="1"/><text x="32.5657%" y="895.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="32.3157%" y="869" width="0.0745%" height="15" fill="rgb(206,27,48)" fg:x="434" fg:w="1"/><text x="32.5657%" y="879.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="32.3157%" y="853" width="0.0745%" height="15" fill="rgb(225,35,8)" fg:x="434" fg:w="1"/><text x="32.5657%" y="863.50"></text></g><g><title>ucrtbase`fegetenv (1 samples, 0.07%)</title><rect x="32.3902%" y="773" width="0.0745%" height="15" fill="rgb(250,213,24)" fg:x="435" fg:w="1"/><text x="32.6402%" y="783.50"></text></g><g><title>ucrtbase`fegetenv (1 samples, 0.07%)</title><rect x="32.3902%" y="757" width="0.0745%" height="15" fill="rgb(247,123,22)" fg:x="435" fg:w="1"/><text x="32.6402%" y="767.50"></text></g><g><title>ucrtbase`fegetenv (1 samples, 0.07%)</title><rect x="32.3902%" y="741" width="0.0745%" height="15" fill="rgb(231,138,38)" fg:x="435" fg:w="1"/><text x="32.6402%" y="751.50"></text></g><g><title>ucrtbase`atof (1 samples, 0.07%)</title><rect x="32.3902%" y="725" width="0.0745%" height="15" fill="rgb(231,145,46)" fg:x="435" fg:w="1"/><text x="32.6402%" y="735.50"></text></g><g><title>ucrtbase`atof (1 samples, 0.07%)</title><rect x="32.3902%" y="709" width="0.0745%" height="15" fill="rgb(251,118,11)" fg:x="435" fg:w="1"/><text x="32.6402%" y="719.50"></text></g><g><title>ucrtbase`atof (1 samples, 0.07%)</title><rect x="32.3902%" y="693" width="0.0745%" height="15" fill="rgb(217,147,25)" fg:x="435" fg:w="1"/><text x="32.6402%" y="703.50"></text></g><g><title>ucrtbase`atof (1 samples, 0.07%)</title><rect x="32.3902%" y="677" width="0.0745%" height="15" fill="rgb(247,81,37)" fg:x="435" fg:w="1"/><text x="32.6402%" y="687.50"></text></g><g><title>KernelBase`LCMapStringEx (1 samples, 0.07%)</title><rect x="32.3902%" y="661" width="0.0745%" height="15" fill="rgb(209,12,38)" fg:x="435" fg:w="1"/><text x="32.6402%" y="671.50"></text></g><g><title>KernelBase`GetApplicationUserModelIdFromToken (1 samples, 0.07%)</title><rect x="32.3902%" y="645" width="0.0745%" height="15" fill="rgb(227,1,9)" fg:x="435" fg:w="1"/><text x="32.6402%" y="655.50"></text></g><g><title>KernelBase`GetApplicationUserModelIdFromToken (1 samples, 0.07%)</title><rect x="32.3902%" y="629" width="0.0745%" height="15" fill="rgb(248,47,43)" fg:x="435" fg:w="1"/><text x="32.6402%" y="639.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.07%)</title><rect x="32.3902%" y="613" width="0.0745%" height="15" fill="rgb(221,10,30)" fg:x="435" fg:w="1"/><text x="32.6402%" y="623.50"></text></g><g><title>ucrtbase`msize (2 samples, 0.15%)</title><rect x="32.3902%" y="805" width="0.1489%" height="15" fill="rgb(210,229,1)" fg:x="435" fg:w="2"/><text x="32.6402%" y="815.50"></text></g><g><title>ucrtbase`o__recalloc (2 samples, 0.15%)</title><rect x="32.3902%" y="789" width="0.1489%" height="15" fill="rgb(222,148,37)" fg:x="435" fg:w="2"/><text x="32.6402%" y="799.50"></text></g><g><title>ucrtbase`wcsstr (1 samples, 0.07%)</title><rect x="32.4646%" y="773" width="0.0745%" height="15" fill="rgb(234,67,33)" fg:x="436" fg:w="1"/><text x="32.7146%" y="783.50"></text></g><g><title>ucrtbase`_report_gsfailure (1 samples, 0.07%)</title><rect x="32.4646%" y="757" width="0.0745%" height="15" fill="rgb(247,98,35)" fg:x="436" fg:w="1"/><text x="32.7146%" y="767.50"></text></g><g><title>ucrtbased`filelengthi64 (1 samples, 0.07%)</title><rect x="32.7625%" y="725" width="0.0745%" height="15" fill="rgb(247,138,52)" fg:x="440" fg:w="1"/><text x="33.0125%" y="735.50"></text></g><g><title>ucrtbased`Exit (1 samples, 0.07%)</title><rect x="32.8369%" y="709" width="0.0745%" height="15" fill="rgb(213,79,30)" fg:x="441" fg:w="1"/><text x="33.0869%" y="719.50"></text></g><g><title>ucrtbased`asctime_s (1 samples, 0.07%)</title><rect x="32.9114%" y="693" width="0.0745%" height="15" fill="rgb(246,177,23)" fg:x="442" fg:w="1"/><text x="33.1614%" y="703.50"></text></g><g><title>ucrtbased`initterm_e (2 samples, 0.15%)</title><rect x="32.9114%" y="709" width="0.1489%" height="15" fill="rgb(230,62,27)" fg:x="442" fg:w="2"/><text x="33.1614%" y="719.50"></text></g><g><title>ucrtbased`telli64 (1 samples, 0.07%)</title><rect x="32.9859%" y="693" width="0.0745%" height="15" fill="rgb(216,154,8)" fg:x="443" fg:w="1"/><text x="33.2359%" y="703.50"></text></g><g><title>ucrtbased`recalloc (4 samples, 0.30%)</title><rect x="32.8369%" y="725" width="0.2978%" height="15" fill="rgb(244,35,45)" fg:x="441" fg:w="4"/><text x="33.0869%" y="735.50"></text></g><g><title>ucrtbased`lroundl (1 samples, 0.07%)</title><rect x="33.0603%" y="709" width="0.0745%" height="15" fill="rgb(251,115,12)" fg:x="444" fg:w="1"/><text x="33.3103%" y="719.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="33.1348%" y="725" width="0.0745%" height="15" fill="rgb(240,54,50)" fg:x="445" fg:w="1"/><text x="33.3848%" y="735.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="33.1348%" y="709" width="0.0745%" height="15" fill="rgb(233,84,52)" fg:x="445" fg:w="1"/><text x="33.3848%" y="719.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="33.1348%" y="693" width="0.0745%" height="15" fill="rgb(207,117,47)" fg:x="445" fg:w="1"/><text x="33.3848%" y="703.50"></text></g><g><title>ucrtbased`cgetws (1 samples, 0.07%)</title><rect x="33.1348%" y="677" width="0.0745%" height="15" fill="rgb(249,43,39)" fg:x="445" fg:w="1"/><text x="33.3848%" y="687.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (13 samples, 0.97%)</title><rect x="32.3902%" y="837" width="0.9680%" height="15" fill="rgb(209,38,44)" fg:x="435" fg:w="13"/><text x="32.6402%" y="847.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (13 samples, 0.97%)</title><rect x="32.3902%" y="821" width="0.9680%" height="15" fill="rgb(236,212,23)" fg:x="435" fg:w="13"/><text x="32.6402%" y="831.50"></text></g><g><title>ucrtbased`setsystime (11 samples, 0.82%)</title><rect x="32.5391%" y="805" width="0.8191%" height="15" fill="rgb(242,79,21)" fg:x="437" fg:w="11"/><text x="32.7891%" y="815.50"></text></g><g><title>ucrtbased`setsystime (10 samples, 0.74%)</title><rect x="32.6136%" y="789" width="0.7446%" height="15" fill="rgb(211,96,35)" fg:x="438" fg:w="10"/><text x="32.8636%" y="799.50"></text></g><g><title>ucrtbased`setsystime (10 samples, 0.74%)</title><rect x="32.6136%" y="773" width="0.7446%" height="15" fill="rgb(253,215,40)" fg:x="438" fg:w="10"/><text x="32.8636%" y="783.50"></text></g><g><title>ucrtbased`recalloc (10 samples, 0.74%)</title><rect x="32.6136%" y="757" width="0.7446%" height="15" fill="rgb(211,81,21)" fg:x="438" fg:w="10"/><text x="32.8636%" y="767.50"></text></g><g><title>ucrtbased`set_app_type (9 samples, 0.67%)</title><rect x="32.6880%" y="741" width="0.6701%" height="15" fill="rgb(208,190,38)" fg:x="439" fg:w="9"/><text x="32.9380%" y="751.50"></text></g><g><title>ucrtbased`wsetlocale (2 samples, 0.15%)</title><rect x="33.2092%" y="725" width="0.1489%" height="15" fill="rgb(235,213,38)" fg:x="446" fg:w="2"/><text x="33.4592%" y="735.50"></text></g><g><title>ucrtbased`wsetlocale (2 samples, 0.15%)</title><rect x="33.2092%" y="709" width="0.1489%" height="15" fill="rgb(237,122,38)" fg:x="446" fg:w="2"/><text x="33.4592%" y="719.50"></text></g><g><title>ucrtbased`setmbcp (1 samples, 0.07%)</title><rect x="33.2837%" y="693" width="0.0745%" height="15" fill="rgb(244,218,35)" fg:x="447" fg:w="1"/><text x="33.5337%" y="703.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="33.2837%" y="677" width="0.0745%" height="15" fill="rgb(240,68,47)" fg:x="447" fg:w="1"/><text x="33.5337%" y="687.50"></text></g><g><title>ucrtbased`_pwctype_func (1 samples, 0.07%)</title><rect x="33.2837%" y="661" width="0.0745%" height="15" fill="rgb(210,16,53)" fg:x="447" fg:w="1"/><text x="33.5337%" y="671.50"></text></g><g><title>ucrtbased`_conio_common_vcwscanf (1 samples, 0.07%)</title><rect x="33.2837%" y="645" width="0.0745%" height="15" fill="rgb(235,124,12)" fg:x="447" fg:w="1"/><text x="33.5337%" y="655.50"></text></g><g><title>combase`CoCopyProxy (1 samples, 0.07%)</title><rect x="33.3582%" y="789" width="0.0745%" height="15" fill="rgb(224,169,11)" fg:x="448" fg:w="1"/><text x="33.6082%" y="799.50"></text></g><g><title>combase`CoCopyProxy (1 samples, 0.07%)</title><rect x="33.3582%" y="773" width="0.0745%" height="15" fill="rgb(250,166,2)" fg:x="448" fg:w="1"/><text x="33.6082%" y="783.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="33.3582%" y="757" width="0.0745%" height="15" fill="rgb(242,216,29)" fg:x="448" fg:w="1"/><text x="33.6082%" y="767.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.07%)</title><rect x="33.3582%" y="741" width="0.0745%" height="15" fill="rgb(230,116,27)" fg:x="448" fg:w="1"/><text x="33.6082%" y="751.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="33.3582%" y="725" width="0.0745%" height="15" fill="rgb(228,99,48)" fg:x="448" fg:w="1"/><text x="33.6082%" y="735.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="33.3582%" y="709" width="0.0745%" height="15" fill="rgb(253,11,6)" fg:x="448" fg:w="1"/><text x="33.6082%" y="719.50"></text></g><g><title>combase`CoTaskMemRealloc (1 samples, 0.07%)</title><rect x="33.4326%" y="789" width="0.0745%" height="15" fill="rgb(247,143,39)" fg:x="449" fg:w="1"/><text x="33.6826%" y="799.50"></text></g><g><title>combase`CoDisableCallCancellation (1 samples, 0.07%)</title><rect x="33.4326%" y="773" width="0.0745%" height="15" fill="rgb(236,97,10)" fg:x="449" fg:w="1"/><text x="33.6826%" y="783.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="33.4326%" y="757" width="0.0745%" height="15" fill="rgb(233,208,19)" fg:x="449" fg:w="1"/><text x="33.6826%" y="767.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.07%)</title><rect x="33.4326%" y="741" width="0.0745%" height="15" fill="rgb(216,164,2)" fg:x="449" fg:w="1"/><text x="33.6826%" y="751.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="33.4326%" y="725" width="0.0745%" height="15" fill="rgb(220,129,5)" fg:x="449" fg:w="1"/><text x="33.6826%" y="735.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="33.4326%" y="709" width="0.0745%" height="15" fill="rgb(242,17,10)" fg:x="449" fg:w="1"/><text x="33.6826%" y="719.50"></text></g><g><title>combase`SetErrorInfo (1 samples, 0.07%)</title><rect x="33.5071%" y="789" width="0.0745%" height="15" fill="rgb(242,107,0)" fg:x="450" fg:w="1"/><text x="33.7571%" y="799.50"></text></g><g><title>combase`RoOriginateErrorW (1 samples, 0.07%)</title><rect x="33.5071%" y="773" width="0.0745%" height="15" fill="rgb(251,28,31)" fg:x="450" fg:w="1"/><text x="33.7571%" y="783.50"></text></g><g><title>combase`RoOriginateErrorW (1 samples, 0.07%)</title><rect x="33.5071%" y="757" width="0.0745%" height="15" fill="rgb(233,223,10)" fg:x="450" fg:w="1"/><text x="33.7571%" y="767.50"></text></g><g><title>combase`HSTRING_UserUnmarshal (1 samples, 0.07%)</title><rect x="33.5071%" y="741" width="0.0745%" height="15" fill="rgb(215,21,27)" fg:x="450" fg:w="1"/><text x="33.7571%" y="751.50"></text></g><g><title>combase`HSTRING_UserUnmarshal (1 samples, 0.07%)</title><rect x="33.5071%" y="725" width="0.0745%" height="15" fill="rgb(232,23,21)" fg:x="450" fg:w="1"/><text x="33.7571%" y="735.50"></text></g><g><title>combase`SetErrorInfo (1 samples, 0.07%)</title><rect x="33.5071%" y="709" width="0.0745%" height="15" fill="rgb(244,5,23)" fg:x="450" fg:w="1"/><text x="33.7571%" y="719.50"></text></g><g><title>KernelBase`RegNotifyChangeKeyValue (1 samples, 0.07%)</title><rect x="33.5071%" y="693" width="0.0745%" height="15" fill="rgb(226,81,46)" fg:x="450" fg:w="1"/><text x="33.7571%" y="703.50"></text></g><g><title>ntdll`ZwNotifyChangeKey (1 samples, 0.07%)</title><rect x="33.5071%" y="677" width="0.0745%" height="15" fill="rgb(247,70,30)" fg:x="450" fg:w="1"/><text x="33.7571%" y="687.50"></text></g><g><title>combase`InternalDoATClassCreate (4 samples, 0.30%)</title><rect x="33.3582%" y="821" width="0.2978%" height="15" fill="rgb(212,68,19)" fg:x="448" fg:w="4"/><text x="33.6082%" y="831.50"></text></g><g><title>combase`InternalDoATClassCreate (4 samples, 0.30%)</title><rect x="33.3582%" y="805" width="0.2978%" height="15" fill="rgb(240,187,13)" fg:x="448" fg:w="4"/><text x="33.6082%" y="815.50"></text></g><g><title>ucrtbase`initterm_e (1 samples, 0.07%)</title><rect x="33.5815%" y="789" width="0.0745%" height="15" fill="rgb(223,113,26)" fg:x="451" fg:w="1"/><text x="33.8315%" y="799.50"></text></g><g><title>combase`InternalDoATClassCreate (1 samples, 0.07%)</title><rect x="33.5815%" y="773" width="0.0745%" height="15" fill="rgb(206,192,2)" fg:x="451" fg:w="1"/><text x="33.8315%" y="783.50"></text></g><g><title>combase`InternalDoATClassCreate (1 samples, 0.07%)</title><rect x="33.5815%" y="757" width="0.0745%" height="15" fill="rgb(241,108,4)" fg:x="451" fg:w="1"/><text x="33.8315%" y="767.50"></text></g><g><title>combase`InternalDoATClassCreate (1 samples, 0.07%)</title><rect x="33.5815%" y="741" width="0.0745%" height="15" fill="rgb(247,173,49)" fg:x="451" fg:w="1"/><text x="33.8315%" y="751.50"></text></g><g><title>ucrtbase`o__register_onexit_function (1 samples, 0.07%)</title><rect x="33.5815%" y="725" width="0.0745%" height="15" fill="rgb(224,114,35)" fg:x="451" fg:w="1"/><text x="33.8315%" y="735.50"></text></g><g><title>ucrtbase`register_onexit_function (1 samples, 0.07%)</title><rect x="33.5815%" y="709" width="0.0745%" height="15" fill="rgb(245,159,27)" fg:x="451" fg:w="1"/><text x="33.8315%" y="719.50"></text></g><g><title>ucrtbase`register_onexit_function (1 samples, 0.07%)</title><rect x="33.5815%" y="693" width="0.0745%" height="15" fill="rgb(245,172,44)" fg:x="451" fg:w="1"/><text x="33.8315%" y="703.50"></text></g><g><title>ucrtbase`register_onexit_function (1 samples, 0.07%)</title><rect x="33.5815%" y="677" width="0.0745%" height="15" fill="rgb(236,23,11)" fg:x="451" fg:w="1"/><text x="33.8315%" y="687.50"></text></g><g><title>ucrtbase`strtol (1 samples, 0.07%)</title><rect x="33.5815%" y="661" width="0.0745%" height="15" fill="rgb(205,117,38)" fg:x="451" fg:w="1"/><text x="33.8315%" y="671.50"></text></g><g><title>ucrtbase`realloc_base (1 samples, 0.07%)</title><rect x="33.5815%" y="645" width="0.0745%" height="15" fill="rgb(237,72,25)" fg:x="451" fg:w="1"/><text x="33.8315%" y="655.50"></text></g><g><title>ucrtbase`malloc_base (1 samples, 0.07%)</title><rect x="33.5815%" y="629" width="0.0745%" height="15" fill="rgb(244,70,9)" fg:x="451" fg:w="1"/><text x="33.8315%" y="639.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="613" width="0.0745%" height="15" fill="rgb(217,125,39)" fg:x="451" fg:w="1"/><text x="33.8315%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="597" width="0.0745%" height="15" fill="rgb(235,36,10)" fg:x="451" fg:w="1"/><text x="33.8315%" y="607.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.07%)</title><rect x="33.5815%" y="581" width="0.0745%" height="15" fill="rgb(251,123,47)" fg:x="451" fg:w="1"/><text x="33.8315%" y="591.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="33.5815%" y="565" width="0.0745%" height="15" fill="rgb(221,13,13)" fg:x="451" fg:w="1"/><text x="33.8315%" y="575.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="549" width="0.0745%" height="15" fill="rgb(238,131,9)" fg:x="451" fg:w="1"/><text x="33.8315%" y="559.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="533" width="0.0745%" height="15" fill="rgb(211,50,8)" fg:x="451" fg:w="1"/><text x="33.8315%" y="543.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="517" width="0.0745%" height="15" fill="rgb(245,182,24)" fg:x="451" fg:w="1"/><text x="33.8315%" y="527.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="501" width="0.0745%" height="15" fill="rgb(242,14,37)" fg:x="451" fg:w="1"/><text x="33.8315%" y="511.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="33.5815%" y="485" width="0.0745%" height="15" fill="rgb(246,228,12)" fg:x="451" fg:w="1"/><text x="33.8315%" y="495.50"></text></g><g><title>msvcp_win`std::num_put&lt;unsigned short,std::ostreambuf_iterator&lt;unsigned short,std::char_traits (1 samples, 0.07%)</title><rect x="33.6560%" y="821" width="0.0745%" height="15" fill="rgb(213,55,15)" fg:x="452" fg:w="1"/><text x="33.9060%" y="831.50"></text></g><g><title>msvcp_win`std::num_put&lt;unsigned short,std::ostreambuf_iterator&lt;unsigned short,std::char_traits (1 samples, 0.07%)</title><rect x="33.6560%" y="805" width="0.0745%" height="15" fill="rgb(209,9,3)" fg:x="452" fg:w="1"/><text x="33.9060%" y="815.50"></text></g><g><title>ucrtbase`initterm (1 samples, 0.07%)</title><rect x="33.6560%" y="789" width="0.0745%" height="15" fill="rgb(230,59,30)" fg:x="452" fg:w="1"/><text x="33.9060%" y="799.50"></text></g><g><title>`0x7FFF25CB1140 (1 samples, 0.07%)</title><rect x="33.6560%" y="773" width="0.0745%" height="15" fill="rgb(209,121,21)" fg:x="452" fg:w="1"/><text x="33.9060%" y="783.50"></text></g><g><title>msvcp_win`std::basic_ostream&lt;unsigned short,std::char_traits&lt;unsigned short&gt; &gt;::basic_ostream&lt;unsigned short,std::char_traits (1 samples, 0.07%)</title><rect x="33.6560%" y="757" width="0.0745%" height="15" fill="rgb(220,109,13)" fg:x="452" fg:w="1"/><text x="33.9060%" y="767.50"></text></g><g><title>msvcp_win`std::basic_ostream&lt;char,std::char_traits&lt;char&gt; &gt;::basic_ostream&lt;char,std::char_traits (1 samples, 0.07%)</title><rect x="33.6560%" y="741" width="0.0745%" height="15" fill="rgb(232,18,1)" fg:x="452" fg:w="1"/><text x="33.9060%" y="751.50"></text></g><g><title>msvcp_win`std::ctype (1 samples, 0.07%)</title><rect x="33.6560%" y="725" width="0.0745%" height="15" fill="rgb(215,41,42)" fg:x="452" fg:w="1"/><text x="33.9060%" y="735.50"></text></g><g><title>msvcp_win`std::_Locinfo::_Locinfo (1 samples, 0.07%)</title><rect x="33.6560%" y="709" width="0.0745%" height="15" fill="rgb(224,123,36)" fg:x="452" fg:w="1"/><text x="33.9060%" y="719.50"></text></g><g><title>ucrtbase`o_setlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="693" width="0.0745%" height="15" fill="rgb(240,125,3)" fg:x="452" fg:w="1"/><text x="33.9060%" y="703.50"></text></g><g><title>ucrtbase`setlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="677" width="0.0745%" height="15" fill="rgb(205,98,50)" fg:x="452" fg:w="1"/><text x="33.9060%" y="687.50"></text></g><g><title>ucrtbase`setlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="661" width="0.0745%" height="15" fill="rgb(205,185,37)" fg:x="452" fg:w="1"/><text x="33.9060%" y="671.50"></text></g><g><title>ucrtbase`setlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="645" width="0.0745%" height="15" fill="rgb(238,207,15)" fg:x="452" fg:w="1"/><text x="33.9060%" y="655.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="629" width="0.0745%" height="15" fill="rgb(213,199,42)" fg:x="452" fg:w="1"/><text x="33.9060%" y="639.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="613" width="0.0745%" height="15" fill="rgb(235,201,11)" fg:x="452" fg:w="1"/><text x="33.9060%" y="623.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="597" width="0.0745%" height="15" fill="rgb(207,46,11)" fg:x="452" fg:w="1"/><text x="33.9060%" y="607.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="581" width="0.0745%" height="15" fill="rgb(241,35,35)" fg:x="452" fg:w="1"/><text x="33.9060%" y="591.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="565" width="0.0745%" height="15" fill="rgb(243,32,47)" fg:x="452" fg:w="1"/><text x="33.9060%" y="575.50"></text></g><g><title>ucrtbase`wsetlocale (1 samples, 0.07%)</title><rect x="33.6560%" y="549" width="0.0745%" height="15" fill="rgb(247,202,23)" fg:x="452" fg:w="1"/><text x="33.9060%" y="559.50"></text></g><g><title>ucrtbase`wcstoul (1 samples, 0.07%)</title><rect x="33.6560%" y="533" width="0.0745%" height="15" fill="rgb(219,102,11)" fg:x="452" fg:w="1"/><text x="33.9060%" y="543.50"></text></g><g><title>ucrtbase`wcstoul (1 samples, 0.07%)</title><rect x="33.6560%" y="517" width="0.0745%" height="15" fill="rgb(243,110,44)" fg:x="452" fg:w="1"/><text x="33.9060%" y="527.50"></text></g><g><title>ucrtbase`wcscat_s (1 samples, 0.07%)</title><rect x="33.6560%" y="501" width="0.0745%" height="15" fill="rgb(222,74,54)" fg:x="452" fg:w="1"/><text x="33.9060%" y="511.50"></text></g><g><title>gdi32full`NtGdiXLATEOBJ_iXlate (1 samples, 0.07%)</title><rect x="33.7305%" y="789" width="0.0745%" height="15" fill="rgb(216,99,12)" fg:x="453" fg:w="1"/><text x="33.9805%" y="799.50"></text></g><g><title>ntdll`NtOpenKey (1 samples, 0.07%)</title><rect x="33.7305%" y="773" width="0.0745%" height="15" fill="rgb(226,22,26)" fg:x="453" fg:w="1"/><text x="33.9805%" y="783.50"></text></g><g><title>gdi32full`GdiDllInitialize (3 samples, 0.22%)</title><rect x="33.7305%" y="805" width="0.2234%" height="15" fill="rgb(217,163,10)" fg:x="453" fg:w="3"/><text x="33.9805%" y="815.50"></text></g><g><title>win32u`NtGdiInit (2 samples, 0.15%)</title><rect x="33.8049%" y="789" width="0.1489%" height="15" fill="rgb(213,25,53)" fg:x="454" fg:w="2"/><text x="34.0549%" y="799.50"></text></g><g><title>ntdll`CsrClientConnectToServer (1 samples, 0.07%)</title><rect x="33.9538%" y="805" width="0.0745%" height="15" fill="rgb(252,105,26)" fg:x="456" fg:w="1"/><text x="34.2038%" y="815.50"></text></g><g><title>ntdll`CsrCaptureMessageBuffer (1 samples, 0.07%)</title><rect x="33.9538%" y="789" width="0.0745%" height="15" fill="rgb(220,39,43)" fg:x="456" fg:w="1"/><text x="34.2038%" y="799.50"></text></g><g><title>ntdll`CsrClientCallServer (1 samples, 0.07%)</title><rect x="33.9538%" y="773" width="0.0745%" height="15" fill="rgb(229,68,48)" fg:x="456" fg:w="1"/><text x="34.2038%" y="783.50"></text></g><g><title>ntdll`NtAlpcSendWaitReceivePort (1 samples, 0.07%)</title><rect x="33.9538%" y="757" width="0.0745%" height="15" fill="rgb(252,8,32)" fg:x="456" fg:w="1"/><text x="34.2038%" y="767.50"></text></g><g><title>user32`RemovePropW (1 samples, 0.07%)</title><rect x="34.0283%" y="805" width="0.0745%" height="15" fill="rgb(223,20,43)" fg:x="457" fg:w="1"/><text x="34.2783%" y="815.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="34.0283%" y="789" width="0.0745%" height="15" fill="rgb(229,81,49)" fg:x="457" fg:w="1"/><text x="34.2783%" y="799.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="34.0283%" y="773" width="0.0745%" height="15" fill="rgb(236,28,36)" fg:x="457" fg:w="1"/><text x="34.2783%" y="783.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="34.0283%" y="757" width="0.0745%" height="15" fill="rgb(249,185,26)" fg:x="457" fg:w="1"/><text x="34.2783%" y="767.50"></text></g><g><title>KernelBase`GetModuleHandleW (1 samples, 0.07%)</title><rect x="34.1028%" y="789" width="0.0745%" height="15" fill="rgb(249,174,33)" fg:x="458" fg:w="1"/><text x="34.3528%" y="799.50"></text></g><g><title>ntdll`LdrGetDllHandle (1 samples, 0.07%)</title><rect x="34.1028%" y="773" width="0.0745%" height="15" fill="rgb(233,201,37)" fg:x="458" fg:w="1"/><text x="34.3528%" y="783.50"></text></g><g><title>ntdll`LdrGetDllHandleEx (1 samples, 0.07%)</title><rect x="34.1028%" y="757" width="0.0745%" height="15" fill="rgb(221,78,26)" fg:x="458" fg:w="1"/><text x="34.3528%" y="767.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="34.1028%" y="741" width="0.0745%" height="15" fill="rgb(250,127,30)" fg:x="458" fg:w="1"/><text x="34.3528%" y="751.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="34.1028%" y="725" width="0.0745%" height="15" fill="rgb(230,49,44)" fg:x="458" fg:w="1"/><text x="34.3528%" y="735.50"></text></g><g><title>ntdll`RtlQueryHeapInformation (1 samples, 0.07%)</title><rect x="34.1028%" y="709" width="0.0745%" height="15" fill="rgb(229,67,23)" fg:x="458" fg:w="1"/><text x="34.3528%" y="719.50"></text></g><g><title>ntdll`ZwOpenFile (1 samples, 0.07%)</title><rect x="34.1028%" y="693" width="0.0745%" height="15" fill="rgb(249,83,47)" fg:x="458" fg:w="1"/><text x="34.3528%" y="703.50"></text></g><g><title>ntdll`LdrUnloadAlternateResourceModuleEx (1 samples, 0.07%)</title><rect x="34.1772%" y="725" width="0.0745%" height="15" fill="rgb(215,43,3)" fg:x="459" fg:w="1"/><text x="34.4272%" y="735.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.07%)</title><rect x="34.1772%" y="709" width="0.0745%" height="15" fill="rgb(238,154,13)" fg:x="459" fg:w="1"/><text x="34.4272%" y="719.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="34.1772%" y="693" width="0.0745%" height="15" fill="rgb(219,56,2)" fg:x="459" fg:w="1"/><text x="34.4272%" y="703.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="34.1772%" y="677" width="0.0745%" height="15" fill="rgb(233,0,4)" fg:x="459" fg:w="1"/><text x="34.4272%" y="687.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.07%)</title><rect x="34.1772%" y="661" width="0.0745%" height="15" fill="rgb(235,30,7)" fg:x="459" fg:w="1"/><text x="34.4272%" y="671.50"></text></g><g><title>user32`UserClientDllInitialize (8 samples, 0.60%)</title><rect x="33.7305%" y="821" width="0.5957%" height="15" fill="rgb(250,79,13)" fg:x="453" fg:w="8"/><text x="33.9805%" y="831.50"></text></g><g><title>user32`User32InitializeImmEntryTable (3 samples, 0.22%)</title><rect x="34.1028%" y="805" width="0.2234%" height="15" fill="rgb(211,146,34)" fg:x="458" fg:w="3"/><text x="34.3528%" y="815.50"></text></g><g><title>KernelBase`LoadLibraryExW (2 samples, 0.15%)</title><rect x="34.1772%" y="789" width="0.1489%" height="15" fill="rgb(228,22,38)" fg:x="459" fg:w="2"/><text x="34.4272%" y="799.50"></text></g><g><title>ntdll`LdrLoadDll (2 samples, 0.15%)</title><rect x="34.1772%" y="773" width="0.1489%" height="15" fill="rgb(235,168,5)" fg:x="459" fg:w="2"/><text x="34.4272%" y="783.50"></text></g><g><title>ntdll`RtlDosPathNameToNtPathName_U (2 samples, 0.15%)</title><rect x="34.1772%" y="757" width="0.1489%" height="15" fill="rgb(221,155,16)" fg:x="459" fg:w="2"/><text x="34.4272%" y="767.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.15%)</title><rect x="34.1772%" y="741" width="0.1489%" height="15" fill="rgb(215,215,53)" fg:x="459" fg:w="2"/><text x="34.4272%" y="751.50"></text></g><g><title>ntdll`RtlSwitchedVVI (1 samples, 0.07%)</title><rect x="34.2517%" y="725" width="0.0745%" height="15" fill="rgb(223,4,10)" fg:x="460" fg:w="1"/><text x="34.5017%" y="735.50"></text></g><g><title>ntdll`RtlSwitchedVVI (1 samples, 0.07%)</title><rect x="34.2517%" y="709" width="0.0745%" height="15" fill="rgb(234,103,6)" fg:x="460" fg:w="1"/><text x="34.5017%" y="719.50"></text></g><g><title>ntdll`RtlSwitchedVVI (1 samples, 0.07%)</title><rect x="34.2517%" y="693" width="0.0745%" height="15" fill="rgb(227,97,0)" fg:x="460" fg:w="1"/><text x="34.5017%" y="703.50"></text></g><g><title>ntdll`RtlCreateHashTable (1 samples, 0.07%)</title><rect x="34.2517%" y="677" width="0.0745%" height="15" fill="rgb(234,150,53)" fg:x="460" fg:w="1"/><text x="34.5017%" y="687.50"></text></g><g><title>ntdll`ZwApphelpCacheControl (1 samples, 0.07%)</title><rect x="34.2517%" y="661" width="0.0745%" height="15" fill="rgb(228,201,54)" fg:x="460" fg:w="1"/><text x="34.5017%" y="671.50"></text></g><g><title>vcruntime140_1d`_CxxFrameHandler4 (1 samples, 0.07%)</title><rect x="34.3261%" y="821" width="0.0745%" height="15" fill="rgb(222,22,37)" fg:x="461" fg:w="1"/><text x="34.5761%" y="831.50"></text></g><g><title>vcruntime140_1d`_CxxFrameHandler4 (1 samples, 0.07%)</title><rect x="34.3261%" y="805" width="0.0745%" height="15" fill="rgb(237,53,32)" fg:x="461" fg:w="1"/><text x="34.5761%" y="815.50"></text></g><g><title>vcruntime140_1d`_CxxFrameHandler4 (1 samples, 0.07%)</title><rect x="34.3261%" y="789" width="0.0745%" height="15" fill="rgb(233,25,53)" fg:x="461" fg:w="1"/><text x="34.5761%" y="799.50"></text></g><g><title>vcruntime140_1d`_NLG_Return2 (1 samples, 0.07%)</title><rect x="34.3261%" y="773" width="0.0745%" height="15" fill="rgb(210,40,34)" fg:x="461" fg:w="1"/><text x="34.5761%" y="783.50"></text></g><g><title>vcruntime140_1d`_CxxFrameHandler4 (1 samples, 0.07%)</title><rect x="34.3261%" y="757" width="0.0745%" height="15" fill="rgb(241,220,44)" fg:x="461" fg:w="1"/><text x="34.5761%" y="767.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (29 samples, 2.16%)</title><rect x="32.3902%" y="853" width="2.1593%" height="15" fill="rgb(235,28,35)" fg:x="435" fg:w="29"/><text x="32.6402%" y="863.50">n..</text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (16 samples, 1.19%)</title><rect x="33.3582%" y="837" width="1.1914%" height="15" fill="rgb(210,56,17)" fg:x="448" fg:w="16"/><text x="33.6082%" y="847.50"></text></g><g><title>vcruntime140d`_CxxFrameHandler3 (2 samples, 0.15%)</title><rect x="34.4006%" y="821" width="0.1489%" height="15" fill="rgb(224,130,29)" fg:x="462" fg:w="2"/><text x="34.6506%" y="831.50"></text></g><g><title>vcruntime140d`_CxxFrameHandler3 (1 samples, 0.07%)</title><rect x="34.4751%" y="805" width="0.0745%" height="15" fill="rgb(235,212,8)" fg:x="463" fg:w="1"/><text x="34.7251%" y="815.50"></text></g><g><title>vcruntime140d`_CxxFrameHandler3 (1 samples, 0.07%)</title><rect x="34.4751%" y="789" width="0.0745%" height="15" fill="rgb(223,33,50)" fg:x="463" fg:w="1"/><text x="34.7251%" y="799.50"></text></g><g><title>vcruntime140d`set_se_translator (1 samples, 0.07%)</title><rect x="34.4751%" y="773" width="0.0745%" height="15" fill="rgb(219,149,13)" fg:x="463" fg:w="1"/><text x="34.7251%" y="783.50"></text></g><g><title>bcrypt`BCryptSetAuditingInterface (1 samples, 0.07%)</title><rect x="34.5495%" y="837" width="0.0745%" height="15" fill="rgb(250,156,29)" fg:x="464" fg:w="1"/><text x="34.7995%" y="847.50"></text></g><g><title>bcrypt`BCryptGetProperty (1 samples, 0.07%)</title><rect x="34.5495%" y="821" width="0.0745%" height="15" fill="rgb(216,193,19)" fg:x="464" fg:w="1"/><text x="34.7995%" y="831.50"></text></g><g><title>bcrypt`BCryptGetProperty (1 samples, 0.07%)</title><rect x="34.5495%" y="805" width="0.0745%" height="15" fill="rgb(216,135,14)" fg:x="464" fg:w="1"/><text x="34.7995%" y="815.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="34.5495%" y="789" width="0.0745%" height="15" fill="rgb(241,47,5)" fg:x="464" fg:w="1"/><text x="34.7995%" y="799.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="34.5495%" y="773" width="0.0745%" height="15" fill="rgb(233,42,35)" fg:x="464" fg:w="1"/><text x="34.7995%" y="783.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="34.5495%" y="757" width="0.0745%" height="15" fill="rgb(231,13,6)" fg:x="464" fg:w="1"/><text x="34.7995%" y="767.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;wchar_t,std::char_traits (2 samples, 0.15%)</title><rect x="34.6240%" y="773" width="0.1489%" height="15" fill="rgb(207,181,40)" fg:x="465" fg:w="2"/><text x="34.8740%" y="783.50"></text></g><g><title>msvcp140d`std::basic_streambuf&lt;char,std::char_traits (1 samples, 0.07%)</title><rect x="34.6984%" y="757" width="0.0745%" height="15" fill="rgb(254,173,49)" fg:x="466" fg:w="1"/><text x="34.9484%" y="767.50"></text></g><g><title>msvcp140d`std::_Crt_new_delete::operator new (1 samples, 0.07%)</title><rect x="34.7729%" y="661" width="0.0745%" height="15" fill="rgb(221,1,38)" fg:x="467" fg:w="1"/><text x="35.0229%" y="671.50"></text></g><g><title>msvcp140d`std::_Crt_new_delete::operator new (1 samples, 0.07%)</title><rect x="34.7729%" y="645" width="0.0745%" height="15" fill="rgb(206,124,46)" fg:x="467" fg:w="1"/><text x="35.0229%" y="655.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="34.7729%" y="629" width="0.0745%" height="15" fill="rgb(249,21,11)" fg:x="467" fg:w="1"/><text x="35.0229%" y="639.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="34.7729%" y="613" width="0.0745%" height="15" fill="rgb(222,201,40)" fg:x="467" fg:w="1"/><text x="35.0229%" y="623.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="34.7729%" y="597" width="0.0745%" height="15" fill="rgb(235,61,29)" fg:x="467" fg:w="1"/><text x="35.0229%" y="607.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="581" width="0.0745%" height="15" fill="rgb(219,207,3)" fg:x="467" fg:w="1"/><text x="35.0229%" y="591.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="565" width="0.0745%" height="15" fill="rgb(222,56,46)" fg:x="467" fg:w="1"/><text x="35.0229%" y="575.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.07%)</title><rect x="34.7729%" y="549" width="0.0745%" height="15" fill="rgb(239,76,54)" fg:x="467" fg:w="1"/><text x="35.0229%" y="559.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="34.7729%" y="533" width="0.0745%" height="15" fill="rgb(231,124,27)" fg:x="467" fg:w="1"/><text x="35.0229%" y="543.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="517" width="0.0745%" height="15" fill="rgb(249,195,6)" fg:x="467" fg:w="1"/><text x="35.0229%" y="527.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="501" width="0.0745%" height="15" fill="rgb(237,174,47)" fg:x="467" fg:w="1"/><text x="35.0229%" y="511.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="485" width="0.0745%" height="15" fill="rgb(206,201,31)" fg:x="467" fg:w="1"/><text x="35.0229%" y="495.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="469" width="0.0745%" height="15" fill="rgb(231,57,52)" fg:x="467" fg:w="1"/><text x="35.0229%" y="479.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="34.7729%" y="453" width="0.0745%" height="15" fill="rgb(248,177,22)" fg:x="467" fg:w="1"/><text x="35.0229%" y="463.50"></text></g><g><title>`0x7FFEDAC910A0 (2 samples, 0.15%)</title><rect x="34.7729%" y="757" width="0.1489%" height="15" fill="rgb(215,211,37)" fg:x="467" fg:w="2"/><text x="35.0229%" y="767.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;char,std::char_traits&lt;char&gt; &gt;::basic_ostream&lt;char,std::char_traits (2 samples, 0.15%)</title><rect x="34.7729%" y="741" width="0.1489%" height="15" fill="rgb(241,128,51)" fg:x="467" fg:w="2"/><text x="35.0229%" y="751.50"></text></g><g><title>msvcp140d`std::basic_ios&lt;char,std::char_traits (2 samples, 0.15%)</title><rect x="34.7729%" y="725" width="0.1489%" height="15" fill="rgb(227,165,31)" fg:x="467" fg:w="2"/><text x="35.0229%" y="735.50"></text></g><g><title>msvcp140d`std::basic_ios&lt;char,std::char_traits (2 samples, 0.15%)</title><rect x="34.7729%" y="709" width="0.1489%" height="15" fill="rgb(228,167,24)" fg:x="467" fg:w="2"/><text x="35.0229%" y="719.50"></text></g><g><title>msvcp140d`Unlock_shared_ptr_spin_lock (2 samples, 0.15%)</title><rect x="34.7729%" y="693" width="0.1489%" height="15" fill="rgb(228,143,12)" fg:x="467" fg:w="2"/><text x="35.0229%" y="703.50"></text></g><g><title>msvcp140d`std::ctype (2 samples, 0.15%)</title><rect x="34.7729%" y="677" width="0.1489%" height="15" fill="rgb(249,149,8)" fg:x="467" fg:w="2"/><text x="35.0229%" y="687.50"></text></g><g><title>msvcp140d`std::_Locinfo::_Locinfo (1 samples, 0.07%)</title><rect x="34.8474%" y="661" width="0.0745%" height="15" fill="rgb(243,35,44)" fg:x="468" fg:w="1"/><text x="35.0974%" y="671.50"></text></g><g><title>msvcp140d`std::_Locinfo::_Locinfo_ctor (1 samples, 0.07%)</title><rect x="34.8474%" y="645" width="0.0745%" height="15" fill="rgb(246,89,9)" fg:x="468" fg:w="1"/><text x="35.0974%" y="655.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="629" width="0.0745%" height="15" fill="rgb(233,213,13)" fg:x="468" fg:w="1"/><text x="35.0974%" y="639.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="34.8474%" y="613" width="0.0745%" height="15" fill="rgb(233,141,41)" fg:x="468" fg:w="1"/><text x="35.0974%" y="623.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="34.8474%" y="597" width="0.0745%" height="15" fill="rgb(239,167,4)" fg:x="468" fg:w="1"/><text x="35.0974%" y="607.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="34.8474%" y="581" width="0.0745%" height="15" fill="rgb(209,217,16)" fg:x="468" fg:w="1"/><text x="35.0974%" y="591.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="34.8474%" y="565" width="0.0745%" height="15" fill="rgb(219,88,35)" fg:x="468" fg:w="1"/><text x="35.0974%" y="575.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="549" width="0.0745%" height="15" fill="rgb(220,193,23)" fg:x="468" fg:w="1"/><text x="35.0974%" y="559.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="533" width="0.0745%" height="15" fill="rgb(230,90,52)" fg:x="468" fg:w="1"/><text x="35.0974%" y="543.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="517" width="0.0745%" height="15" fill="rgb(252,106,19)" fg:x="468" fg:w="1"/><text x="35.0974%" y="527.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="501" width="0.0745%" height="15" fill="rgb(206,74,20)" fg:x="468" fg:w="1"/><text x="35.0974%" y="511.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="485" width="0.0745%" height="15" fill="rgb(230,138,44)" fg:x="468" fg:w="1"/><text x="35.0974%" y="495.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="469" width="0.0745%" height="15" fill="rgb(235,182,43)" fg:x="468" fg:w="1"/><text x="35.0974%" y="479.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="453" width="0.0745%" height="15" fill="rgb(242,16,51)" fg:x="468" fg:w="1"/><text x="35.0974%" y="463.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="437" width="0.0745%" height="15" fill="rgb(248,9,4)" fg:x="468" fg:w="1"/><text x="35.0974%" y="447.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="34.8474%" y="421" width="0.0745%" height="15" fill="rgb(210,31,22)" fg:x="468" fg:w="1"/><text x="35.0974%" y="431.50"></text></g><g><title>ucrtbased`wcreate_locale (1 samples, 0.07%)</title><rect x="34.8474%" y="405" width="0.0745%" height="15" fill="rgb(239,54,39)" fg:x="468" fg:w="1"/><text x="35.0974%" y="415.50"></text></g><g><title>ucrtbased`wcscat_s (1 samples, 0.07%)</title><rect x="34.8474%" y="389" width="0.0745%" height="15" fill="rgb(230,99,41)" fg:x="468" fg:w="1"/><text x="35.0974%" y="399.50"></text></g><g><title>ucrtbased`wcscat (1 samples, 0.07%)</title><rect x="34.8474%" y="373" width="0.0745%" height="15" fill="rgb(253,106,12)" fg:x="468" fg:w="1"/><text x="35.0974%" y="383.50"></text></g><g><title>msvcp140d`std::_Crt_new_delete::operator new (1 samples, 0.07%)</title><rect x="34.9218%" y="709" width="0.0745%" height="15" fill="rgb(213,46,41)" fg:x="469" fg:w="1"/><text x="35.1718%" y="719.50"></text></g><g><title>`0x7FFEDAC910DE (2 samples, 0.15%)</title><rect x="34.9218%" y="757" width="0.1489%" height="15" fill="rgb(215,133,35)" fg:x="469" fg:w="2"/><text x="35.1718%" y="767.50"></text></g><g><title>msvcp140d`std::_Yarn&lt;wchar_t&gt;::_Yarn (2 samples, 0.15%)</title><rect x="34.9218%" y="741" width="0.1489%" height="15" fill="rgb(213,28,5)" fg:x="469" fg:w="2"/><text x="35.1718%" y="751.50"></text></g><g><title>msvcp140d`std::basic_streambuf&lt;char,std::char_traits&lt;char&gt; &gt;::basic_streambuf&lt;char,std::char_traits (2 samples, 0.15%)</title><rect x="34.9218%" y="725" width="0.1489%" height="15" fill="rgb(215,77,49)" fg:x="469" fg:w="2"/><text x="35.1718%" y="735.50"></text></g><g><title>msvcp140d`std::basic_streambuf&lt;char,std::char_traits (1 samples, 0.07%)</title><rect x="34.9963%" y="709" width="0.0745%" height="15" fill="rgb(248,100,22)" fg:x="470" fg:w="1"/><text x="35.2463%" y="719.50"></text></g><g><title>msvcp140d`std::basic_streambuf&lt;char,std::char_traits (1 samples, 0.07%)</title><rect x="34.9963%" y="693" width="0.0745%" height="15" fill="rgb(208,67,9)" fg:x="470" fg:w="1"/><text x="35.2463%" y="703.50"></text></g><g><title>`0x7FFEDAC91110 (1 samples, 0.07%)</title><rect x="35.0707%" y="757" width="0.0745%" height="15" fill="rgb(219,133,21)" fg:x="471" fg:w="1"/><text x="35.3207%" y="767.50"></text></g><g><title>`0x7FFEDAC91120 (1 samples, 0.07%)</title><rect x="35.1452%" y="757" width="0.0745%" height="15" fill="rgb(246,46,29)" fg:x="472" fg:w="1"/><text x="35.3952%" y="767.50"></text></g><g><title>msvcp140d`std::_Init_locks::_Init_locks (1 samples, 0.07%)</title><rect x="35.1452%" y="741" width="0.0745%" height="15" fill="rgb(246,185,52)" fg:x="472" fg:w="1"/><text x="35.3952%" y="751.50"></text></g><g><title>`0x7FFEDAC91160 (1 samples, 0.07%)</title><rect x="35.2197%" y="757" width="0.0745%" height="15" fill="rgb(252,136,11)" fg:x="473" fg:w="1"/><text x="35.4697%" y="767.50"></text></g><g><title>msvcp140d`std::basic_istream&lt;char,std::char_traits&lt;char&gt; &gt;::basic_istream&lt;char,std::char_traits (1 samples, 0.07%)</title><rect x="35.2197%" y="741" width="0.0745%" height="15" fill="rgb(219,138,53)" fg:x="473" fg:w="1"/><text x="35.4697%" y="751.50"></text></g><g><title>msvcp140d`std::_Locinfo::_Locinfo (1 samples, 0.07%)</title><rect x="35.2941%" y="661" width="0.0745%" height="15" fill="rgb(211,51,23)" fg:x="474" fg:w="1"/><text x="35.5441%" y="671.50"></text></g><g><title>msvcp140d`std::_Locinfo::_Locinfo_ctor (1 samples, 0.07%)</title><rect x="35.2941%" y="645" width="0.0745%" height="15" fill="rgb(247,221,28)" fg:x="474" fg:w="1"/><text x="35.5441%" y="655.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="629" width="0.0745%" height="15" fill="rgb(251,222,45)" fg:x="474" fg:w="1"/><text x="35.5441%" y="639.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.2941%" y="613" width="0.0745%" height="15" fill="rgb(217,162,53)" fg:x="474" fg:w="1"/><text x="35.5441%" y="623.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.2941%" y="597" width="0.0745%" height="15" fill="rgb(229,93,14)" fg:x="474" fg:w="1"/><text x="35.5441%" y="607.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.2941%" y="581" width="0.0745%" height="15" fill="rgb(209,67,49)" fg:x="474" fg:w="1"/><text x="35.5441%" y="591.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.2941%" y="565" width="0.0745%" height="15" fill="rgb(213,87,29)" fg:x="474" fg:w="1"/><text x="35.5441%" y="575.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="549" width="0.0745%" height="15" fill="rgb(205,151,52)" fg:x="474" fg:w="1"/><text x="35.5441%" y="559.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="533" width="0.0745%" height="15" fill="rgb(253,215,39)" fg:x="474" fg:w="1"/><text x="35.5441%" y="543.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="517" width="0.0745%" height="15" fill="rgb(221,220,41)" fg:x="474" fg:w="1"/><text x="35.5441%" y="527.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="501" width="0.0745%" height="15" fill="rgb(218,133,21)" fg:x="474" fg:w="1"/><text x="35.5441%" y="511.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="485" width="0.0745%" height="15" fill="rgb(221,193,43)" fg:x="474" fg:w="1"/><text x="35.5441%" y="495.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="469" width="0.0745%" height="15" fill="rgb(240,128,52)" fg:x="474" fg:w="1"/><text x="35.5441%" y="479.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="453" width="0.0745%" height="15" fill="rgb(253,114,12)" fg:x="474" fg:w="1"/><text x="35.5441%" y="463.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="35.2941%" y="437" width="0.0745%" height="15" fill="rgb(215,223,47)" fg:x="474" fg:w="1"/><text x="35.5441%" y="447.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="35.2941%" y="421" width="0.0745%" height="15" fill="rgb(248,225,23)" fg:x="474" fg:w="1"/><text x="35.5441%" y="431.50"></text></g><g><title>`0x7FFEDAC915E0 (2 samples, 0.15%)</title><rect x="35.2941%" y="757" width="0.1489%" height="15" fill="rgb(250,108,0)" fg:x="474" fg:w="2"/><text x="35.5441%" y="767.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;unsigned short,std::char_traits&lt;unsigned short&gt; &gt;::basic_ostream&lt;unsigned short,std::char_traits (2 samples, 0.15%)</title><rect x="35.2941%" y="741" width="0.1489%" height="15" fill="rgb(228,208,7)" fg:x="474" fg:w="2"/><text x="35.5441%" y="751.50"></text></g><g><title>msvcp140d`std::basic_ios&lt;unsigned short,std::char_traits (2 samples, 0.15%)</title><rect x="35.2941%" y="725" width="0.1489%" height="15" fill="rgb(244,45,10)" fg:x="474" fg:w="2"/><text x="35.5441%" y="735.50"></text></g><g><title>msvcp140d`std::basic_ios&lt;unsigned short,std::char_traits (2 samples, 0.15%)</title><rect x="35.2941%" y="709" width="0.1489%" height="15" fill="rgb(207,125,25)" fg:x="474" fg:w="2"/><text x="35.5441%" y="719.50"></text></g><g><title>msvcp140d`std::uncaught_exceptions (2 samples, 0.15%)</title><rect x="35.2941%" y="693" width="0.1489%" height="15" fill="rgb(210,195,18)" fg:x="474" fg:w="2"/><text x="35.5441%" y="703.50"></text></g><g><title>msvcp140d`std::ctype (2 samples, 0.15%)</title><rect x="35.2941%" y="677" width="0.1489%" height="15" fill="rgb(249,80,12)" fg:x="474" fg:w="2"/><text x="35.5441%" y="687.50"></text></g><g><title>msvcp140d`std::_Locinfo::~_Locinfo (1 samples, 0.07%)</title><rect x="35.3686%" y="661" width="0.0745%" height="15" fill="rgb(221,65,9)" fg:x="475" fg:w="1"/><text x="35.6186%" y="671.50"></text></g><g><title>msvcp140d`std::_Locinfo::_Locinfo_dtor (1 samples, 0.07%)</title><rect x="35.3686%" y="645" width="0.0745%" height="15" fill="rgb(235,49,36)" fg:x="475" fg:w="1"/><text x="35.6186%" y="655.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="629" width="0.0745%" height="15" fill="rgb(225,32,20)" fg:x="475" fg:w="1"/><text x="35.6186%" y="639.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.3686%" y="613" width="0.0745%" height="15" fill="rgb(215,141,46)" fg:x="475" fg:w="1"/><text x="35.6186%" y="623.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.3686%" y="597" width="0.0745%" height="15" fill="rgb(250,160,47)" fg:x="475" fg:w="1"/><text x="35.6186%" y="607.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.3686%" y="581" width="0.0745%" height="15" fill="rgb(216,222,40)" fg:x="475" fg:w="1"/><text x="35.6186%" y="591.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.3686%" y="565" width="0.0745%" height="15" fill="rgb(234,217,39)" fg:x="475" fg:w="1"/><text x="35.6186%" y="575.50"></text></g><g><title>ucrtbased`wsetlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="549" width="0.0745%" height="15" fill="rgb(207,178,40)" fg:x="475" fg:w="1"/><text x="35.6186%" y="559.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="533" width="0.0745%" height="15" fill="rgb(221,136,13)" fg:x="475" fg:w="1"/><text x="35.6186%" y="543.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="517" width="0.0745%" height="15" fill="rgb(249,199,10)" fg:x="475" fg:w="1"/><text x="35.6186%" y="527.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="501" width="0.0745%" height="15" fill="rgb(249,222,13)" fg:x="475" fg:w="1"/><text x="35.6186%" y="511.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="485" width="0.0745%" height="15" fill="rgb(244,185,38)" fg:x="475" fg:w="1"/><text x="35.6186%" y="495.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="469" width="0.0745%" height="15" fill="rgb(236,202,9)" fg:x="475" fg:w="1"/><text x="35.6186%" y="479.50"></text></g><g><title>ucrtbased`setlocale (1 samples, 0.07%)</title><rect x="35.3686%" y="453" width="0.0745%" height="15" fill="rgb(250,229,37)" fg:x="475" fg:w="1"/><text x="35.6186%" y="463.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.3686%" y="437" width="0.0745%" height="15" fill="rgb(206,174,23)" fg:x="475" fg:w="1"/><text x="35.6186%" y="447.50"></text></g><g><title>ucrtbased`localeconv (1 samples, 0.07%)</title><rect x="35.3686%" y="421" width="0.0745%" height="15" fill="rgb(211,33,43)" fg:x="475" fg:w="1"/><text x="35.6186%" y="431.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;wchar_t,std::char_traits (12 samples, 0.89%)</title><rect x="34.6240%" y="837" width="0.8935%" height="15" fill="rgb(245,58,50)" fg:x="465" fg:w="12"/><text x="34.8740%" y="847.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;wchar_t,std::char_traits (12 samples, 0.89%)</title><rect x="34.6240%" y="821" width="0.8935%" height="15" fill="rgb(244,68,36)" fg:x="465" fg:w="12"/><text x="34.8740%" y="831.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;wchar_t,std::char_traits (12 samples, 0.89%)</title><rect x="34.6240%" y="805" width="0.8935%" height="15" fill="rgb(232,229,15)" fg:x="465" fg:w="12"/><text x="34.8740%" y="815.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;wchar_t,std::char_traits (12 samples, 0.89%)</title><rect x="34.6240%" y="789" width="0.8935%" height="15" fill="rgb(254,30,23)" fg:x="465" fg:w="12"/><text x="34.8740%" y="799.50"></text></g><g><title>ucrtbased`initterm (10 samples, 0.74%)</title><rect x="34.7729%" y="773" width="0.7446%" height="15" fill="rgb(235,160,14)" fg:x="467" fg:w="10"/><text x="35.0229%" y="783.50"></text></g><g><title>`0x7FFEDAC918E0 (1 samples, 0.07%)</title><rect x="35.4430%" y="757" width="0.0745%" height="15" fill="rgb(212,155,44)" fg:x="476" fg:w="1"/><text x="35.6930%" y="767.50"></text></g><g><title>msvcp140d`std::basic_ostream&lt;wchar_t,std::char_traits&lt;wchar_t&gt; &gt;::basic_ostream&lt;wchar_t,std::char_traits (1 samples, 0.07%)</title><rect x="35.4430%" y="741" width="0.0745%" height="15" fill="rgb(226,2,50)" fg:x="476" fg:w="1"/><text x="35.6930%" y="751.50"></text></g><g><title>msvcp140d`std::basic_ios&lt;wchar_t,std::char_traits (1 samples, 0.07%)</title><rect x="35.4430%" y="725" width="0.0745%" height="15" fill="rgb(234,177,6)" fg:x="476" fg:w="1"/><text x="35.6930%" y="735.50"></text></g><g><title>msvcp140d`std::ios_base::_Init (1 samples, 0.07%)</title><rect x="35.4430%" y="709" width="0.0745%" height="15" fill="rgb(217,24,9)" fg:x="476" fg:w="1"/><text x="35.6930%" y="719.50"></text></g><g><title>msvcp140d`std::_Crt_new_delete::operator new (1 samples, 0.07%)</title><rect x="35.4430%" y="693" width="0.0745%" height="15" fill="rgb(220,13,46)" fg:x="476" fg:w="1"/><text x="35.6930%" y="703.50"></text></g><g><title>msvcp140d`std::_Crt_new_delete::operator new (1 samples, 0.07%)</title><rect x="35.4430%" y="677" width="0.0745%" height="15" fill="rgb(239,221,27)" fg:x="476" fg:w="1"/><text x="35.6930%" y="687.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="35.4430%" y="661" width="0.0745%" height="15" fill="rgb(222,198,25)" fg:x="476" fg:w="1"/><text x="35.6930%" y="671.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="35.4430%" y="645" width="0.0745%" height="15" fill="rgb(211,99,13)" fg:x="476" fg:w="1"/><text x="35.6930%" y="655.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="35.4430%" y="629" width="0.0745%" height="15" fill="rgb(232,111,31)" fg:x="476" fg:w="1"/><text x="35.6930%" y="639.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="35.4430%" y="613" width="0.0745%" height="15" fill="rgb(245,82,37)" fg:x="476" fg:w="1"/><text x="35.6930%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="35.4430%" y="597" width="0.0745%" height="15" fill="rgb(227,149,46)" fg:x="476" fg:w="1"/><text x="35.6930%" y="607.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.07%)</title><rect x="35.5175%" y="693" width="0.0745%" height="15" fill="rgb(218,36,50)" fg:x="477" fg:w="1"/><text x="35.7675%" y="703.50"></text></g><g><title>ntdll`RtlQueryHeapInformation (2 samples, 0.15%)</title><rect x="35.5175%" y="709" width="0.1489%" height="15" fill="rgb(226,80,48)" fg:x="477" fg:w="2"/><text x="35.7675%" y="719.50"></text></g><g><title>ntdll`ZwOpenFile (1 samples, 0.07%)</title><rect x="35.5920%" y="693" width="0.0745%" height="15" fill="rgb(238,224,15)" fg:x="478" fg:w="1"/><text x="35.8420%" y="703.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="35.6664%" y="693" width="0.0745%" height="15" fill="rgb(241,136,10)" fg:x="479" fg:w="1"/><text x="35.9164%" y="703.50"></text></g><g><title>ntdll`memset (1 samples, 0.07%)</title><rect x="35.6664%" y="677" width="0.0745%" height="15" fill="rgb(208,32,45)" fg:x="479" fg:w="1"/><text x="35.9164%" y="687.50"></text></g><g><title>KernelBase`GetModuleHandleW (5 samples, 0.37%)</title><rect x="35.5175%" y="789" width="0.3723%" height="15" fill="rgb(207,135,9)" fg:x="477" fg:w="5"/><text x="35.7675%" y="799.50"></text></g><g><title>ntdll`LdrGetDllHandle (5 samples, 0.37%)</title><rect x="35.5175%" y="773" width="0.3723%" height="15" fill="rgb(206,86,44)" fg:x="477" fg:w="5"/><text x="35.7675%" y="783.50"></text></g><g><title>ntdll`LdrGetDllHandleEx (5 samples, 0.37%)</title><rect x="35.5175%" y="757" width="0.3723%" height="15" fill="rgb(245,177,15)" fg:x="477" fg:w="5"/><text x="35.7675%" y="767.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.37%)</title><rect x="35.5175%" y="741" width="0.3723%" height="15" fill="rgb(206,64,50)" fg:x="477" fg:w="5"/><text x="35.7675%" y="751.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.37%)</title><rect x="35.5175%" y="725" width="0.3723%" height="15" fill="rgb(234,36,40)" fg:x="477" fg:w="5"/><text x="35.7675%" y="735.50"></text></g><g><title>ntdll`RtlUnlockHeap (3 samples, 0.22%)</title><rect x="35.6664%" y="709" width="0.2234%" height="15" fill="rgb(213,64,8)" fg:x="479" fg:w="3"/><text x="35.9164%" y="719.50"></text></g><g><title>ntdll`RtlUnlockHeap (2 samples, 0.15%)</title><rect x="35.7409%" y="693" width="0.1489%" height="15" fill="rgb(210,75,36)" fg:x="480" fg:w="2"/><text x="35.9909%" y="703.50"></text></g><g><title>ntdll`NtQueryAttributesFile (2 samples, 0.15%)</title><rect x="35.7409%" y="677" width="0.1489%" height="15" fill="rgb(229,88,21)" fg:x="480" fg:w="2"/><text x="35.9909%" y="687.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="35.8898%" y="789" width="0.0745%" height="15" fill="rgb(252,204,47)" fg:x="482" fg:w="1"/><text x="36.1398%" y="799.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.07%)</title><rect x="35.8898%" y="773" width="0.0745%" height="15" fill="rgb(208,77,27)" fg:x="482" fg:w="1"/><text x="36.1398%" y="783.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="35.8898%" y="757" width="0.0745%" height="15" fill="rgb(221,76,26)" fg:x="482" fg:w="1"/><text x="36.1398%" y="767.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="35.8898%" y="741" width="0.0745%" height="15" fill="rgb(225,139,18)" fg:x="482" fg:w="1"/><text x="36.1398%" y="751.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="35.9643%" y="789" width="0.0745%" height="15" fill="rgb(230,137,11)" fg:x="483" fg:w="1"/><text x="36.2143%" y="799.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="35.9643%" y="773" width="0.0745%" height="15" fill="rgb(212,28,1)" fg:x="483" fg:w="1"/><text x="36.2143%" y="783.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="35.9643%" y="757" width="0.0745%" height="15" fill="rgb(248,164,17)" fg:x="483" fg:w="1"/><text x="36.2143%" y="767.50"></text></g><g><title>ole32`PropVariantCopy (1 samples, 0.07%)</title><rect x="36.0387%" y="773" width="0.0745%" height="15" fill="rgb(222,171,42)" fg:x="484" fg:w="1"/><text x="36.2887%" y="783.50"></text></g><g><title>ucrtbase`o___stdio_common_vswprintf (1 samples, 0.07%)</title><rect x="36.0387%" y="757" width="0.0745%" height="15" fill="rgb(243,84,45)" fg:x="484" fg:w="1"/><text x="36.2887%" y="767.50"></text></g><g><title>ucrtbase`o___stdio_common_vswprintf (1 samples, 0.07%)</title><rect x="36.0387%" y="741" width="0.0745%" height="15" fill="rgb(252,49,23)" fg:x="484" fg:w="1"/><text x="36.2887%" y="751.50"></text></g><g><title>ucrtbase`_stdio_common_vswprintf (1 samples, 0.07%)</title><rect x="36.0387%" y="725" width="0.0745%" height="15" fill="rgb(215,19,7)" fg:x="484" fg:w="1"/><text x="36.2887%" y="735.50"></text></g><g><title>ucrtbase`_stdio_common_vswprintf (1 samples, 0.07%)</title><rect x="36.0387%" y="709" width="0.0745%" height="15" fill="rgb(238,81,41)" fg:x="484" fg:w="1"/><text x="36.2887%" y="719.50"></text></g><g><title>ucrtbase`wcsnlen (1 samples, 0.07%)</title><rect x="36.0387%" y="693" width="0.0745%" height="15" fill="rgb(210,199,37)" fg:x="484" fg:w="1"/><text x="36.2887%" y="703.50"></text></g><g><title>ole32`PropVariantCopy (10 samples, 0.74%)</title><rect x="35.5175%" y="837" width="0.7446%" height="15" fill="rgb(244,192,49)" fg:x="477" fg:w="10"/><text x="35.7675%" y="847.50"></text></g><g><title>ole32`STGMEDIUM_UserUnmarshal64 (10 samples, 0.74%)</title><rect x="35.5175%" y="821" width="0.7446%" height="15" fill="rgb(226,211,11)" fg:x="477" fg:w="10"/><text x="35.7675%" y="831.50"></text></g><g><title>ole32`CoGetInterceptorForOle32 (10 samples, 0.74%)</title><rect x="35.5175%" y="805" width="0.7446%" height="15" fill="rgb(236,162,54)" fg:x="477" fg:w="10"/><text x="35.7675%" y="815.50"></text></g><g><title>ole32`CoGetInterceptorForOle32 (3 samples, 0.22%)</title><rect x="36.0387%" y="789" width="0.2234%" height="15" fill="rgb(220,229,9)" fg:x="484" fg:w="3"/><text x="36.2887%" y="799.50"></text></g><g><title>ole32`STGMEDIUM_UserUnmarshal64 (2 samples, 0.15%)</title><rect x="36.1132%" y="773" width="0.1489%" height="15" fill="rgb(250,87,22)" fg:x="485" fg:w="2"/><text x="36.3632%" y="783.50"></text></g><g><title>ole32`STGMEDIUM_UserUnmarshal64 (2 samples, 0.15%)</title><rect x="36.1132%" y="757" width="0.1489%" height="15" fill="rgb(239,43,17)" fg:x="485" fg:w="2"/><text x="36.3632%" y="767.50"></text></g><g><title>ole32`FreePropVariantArray (2 samples, 0.15%)</title><rect x="36.1132%" y="741" width="0.1489%" height="15" fill="rgb(231,177,25)" fg:x="485" fg:w="2"/><text x="36.3632%" y="751.50"></text></g><g><title>ole32`DestroyRunningObjectTable (2 samples, 0.15%)</title><rect x="36.1132%" y="725" width="0.1489%" height="15" fill="rgb(219,179,1)" fg:x="485" fg:w="2"/><text x="36.3632%" y="735.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (2 samples, 0.15%)</title><rect x="36.1132%" y="709" width="0.1489%" height="15" fill="rgb(238,219,53)" fg:x="485" fg:w="2"/><text x="36.3632%" y="719.50"></text></g><g><title>ntdll`RtlVirtualUnwind (2 samples, 0.15%)</title><rect x="36.1132%" y="693" width="0.1489%" height="15" fill="rgb(232,167,36)" fg:x="485" fg:w="2"/><text x="36.3632%" y="703.50"></text></g><g><title>shell32`Ordinal764 (1 samples, 0.07%)</title><rect x="36.2621%" y="757" width="0.0745%" height="15" fill="rgb(244,19,51)" fg:x="487" fg:w="1"/><text x="36.5121%" y="767.50"></text></g><g><title>shell32`StateRepoNewMenuCache_RebuildCacheAsync (1 samples, 0.07%)</title><rect x="36.2621%" y="741" width="0.0745%" height="15" fill="rgb(224,6,22)" fg:x="487" fg:w="1"/><text x="36.5121%" y="751.50"></text></g><g><title>shell32`StateRepoNewMenuCache_RebuildCacheAsync (1 samples, 0.07%)</title><rect x="36.2621%" y="725" width="0.0745%" height="15" fill="rgb(224,145,5)" fg:x="487" fg:w="1"/><text x="36.5121%" y="735.50"></text></g><g><title>KernelBase`GetProcAddress (1 samples, 0.07%)</title><rect x="36.2621%" y="709" width="0.0745%" height="15" fill="rgb(234,130,49)" fg:x="487" fg:w="1"/><text x="36.5121%" y="719.50"></text></g><g><title>ntdll`RtlInitAnsiString (1 samples, 0.07%)</title><rect x="36.2621%" y="693" width="0.0745%" height="15" fill="rgb(254,6,2)" fg:x="487" fg:w="1"/><text x="36.5121%" y="703.50"></text></g><g><title>shell32`Ordinal200 (2 samples, 0.15%)</title><rect x="36.2621%" y="805" width="0.1489%" height="15" fill="rgb(208,96,46)" fg:x="487" fg:w="2"/><text x="36.5121%" y="815.50"></text></g><g><title>shell32`CallFileCopyHook (2 samples, 0.15%)</title><rect x="36.2621%" y="789" width="0.1489%" height="15" fill="rgb(239,3,39)" fg:x="487" fg:w="2"/><text x="36.5121%" y="799.50"></text></g><g><title>shell32`CallFileCopyHook (2 samples, 0.15%)</title><rect x="36.2621%" y="773" width="0.1489%" height="15" fill="rgb(233,210,1)" fg:x="487" fg:w="2"/><text x="36.5121%" y="783.50"></text></g><g><title>shell32`StrStrW (1 samples, 0.07%)</title><rect x="36.3366%" y="757" width="0.0745%" height="15" fill="rgb(244,137,37)" fg:x="488" fg:w="1"/><text x="36.5866%" y="767.50"></text></g><g><title>shell32`ILGetSize (1 samples, 0.07%)</title><rect x="36.3366%" y="741" width="0.0745%" height="15" fill="rgb(240,136,2)" fg:x="488" fg:w="1"/><text x="36.5866%" y="751.50"></text></g><g><title>shell32`CallFileCopyHook (3 samples, 0.22%)</title><rect x="36.2621%" y="821" width="0.2234%" height="15" fill="rgb(239,18,37)" fg:x="487" fg:w="3"/><text x="36.5121%" y="831.50"></text></g><g><title>shell32`SHGetPropertyStoreForWindow (1 samples, 0.07%)</title><rect x="36.4110%" y="805" width="0.0745%" height="15" fill="rgb(218,185,22)" fg:x="489" fg:w="1"/><text x="36.6610%" y="815.50"></text></g><g><title>ntdll`EtwRegisterTraceGuidsW (1 samples, 0.07%)</title><rect x="36.4110%" y="789" width="0.0745%" height="15" fill="rgb(225,218,4)" fg:x="489" fg:w="1"/><text x="36.6610%" y="799.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.07%)</title><rect x="36.4110%" y="773" width="0.0745%" height="15" fill="rgb(230,182,32)" fg:x="489" fg:w="1"/><text x="36.6610%" y="783.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="36.4110%" y="757" width="0.0745%" height="15" fill="rgb(242,56,43)" fg:x="489" fg:w="1"/><text x="36.6610%" y="767.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="36.4110%" y="741" width="0.0745%" height="15" fill="rgb(233,99,24)" fg:x="489" fg:w="1"/><text x="36.6610%" y="751.50"></text></g><g><title>msvcrt`cexit (1 samples, 0.07%)</title><rect x="36.6344%" y="645" width="0.0745%" height="15" fill="rgb(234,209,42)" fg:x="492" fg:w="1"/><text x="36.8844%" y="655.50"></text></g><g><title>msvcrt`initterm (1 samples, 0.07%)</title><rect x="36.6344%" y="629" width="0.0745%" height="15" fill="rgb(227,7,12)" fg:x="492" fg:w="1"/><text x="36.8844%" y="639.50"></text></g><g><title>`0x7FFF278C1020 (1 samples, 0.07%)</title><rect x="36.6344%" y="613" width="0.0745%" height="15" fill="rgb(245,203,43)" fg:x="492" fg:w="1"/><text x="36.8844%" y="623.50"></text></g><g><title>msvcrt`CrtDbgBreak (1 samples, 0.07%)</title><rect x="36.6344%" y="597" width="0.0745%" height="15" fill="rgb(238,205,33)" fg:x="492" fg:w="1"/><text x="36.8844%" y="607.50"></text></g><g><title>msvcrt`wfindnexti64 (2 samples, 0.15%)</title><rect x="36.6344%" y="661" width="0.1489%" height="15" fill="rgb(231,56,7)" fg:x="492" fg:w="2"/><text x="36.8844%" y="671.50"></text></g><g><title>msvcrt`strerror_s (1 samples, 0.07%)</title><rect x="36.7089%" y="645" width="0.0745%" height="15" fill="rgb(244,186,29)" fg:x="493" fg:w="1"/><text x="36.9589%" y="655.50"></text></g><g><title>KernelBase`GetEnvironmentStringsW (1 samples, 0.07%)</title><rect x="36.7089%" y="629" width="0.0745%" height="15" fill="rgb(234,111,31)" fg:x="493" fg:w="1"/><text x="36.9589%" y="639.50"></text></g><g><title>sechost`LsaLookupOpenLocalPolicy (1 samples, 0.07%)</title><rect x="36.7833%" y="613" width="0.0745%" height="15" fill="rgb(241,149,10)" fg:x="494" fg:w="1"/><text x="37.0333%" y="623.50"></text></g><g><title>sechost`ReleaseIdentityProviderEnumContext (1 samples, 0.07%)</title><rect x="36.7833%" y="597" width="0.0745%" height="15" fill="rgb(249,206,44)" fg:x="494" fg:w="1"/><text x="37.0333%" y="607.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="36.7833%" y="581" width="0.0745%" height="15" fill="rgb(251,153,30)" fg:x="494" fg:w="1"/><text x="37.0333%" y="591.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="36.7833%" y="565" width="0.0745%" height="15" fill="rgb(239,152,38)" fg:x="494" fg:w="1"/><text x="37.0333%" y="575.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="36.7833%" y="549" width="0.0745%" height="15" fill="rgb(249,139,47)" fg:x="494" fg:w="1"/><text x="37.0333%" y="559.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (4 samples, 0.30%)</title><rect x="36.6344%" y="693" width="0.2978%" height="15" fill="rgb(244,64,35)" fg:x="492" fg:w="4"/><text x="36.8844%" y="703.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (4 samples, 0.30%)</title><rect x="36.6344%" y="677" width="0.2978%" height="15" fill="rgb(216,46,15)" fg:x="492" fg:w="4"/><text x="36.8844%" y="687.50"></text></g><g><title>sechost`I_ScIsSecurityProcess (2 samples, 0.15%)</title><rect x="36.7833%" y="661" width="0.1489%" height="15" fill="rgb(250,74,19)" fg:x="494" fg:w="2"/><text x="37.0333%" y="671.50"></text></g><g><title>sechost`I_ScIsSecurityProcess (2 samples, 0.15%)</title><rect x="36.7833%" y="645" width="0.1489%" height="15" fill="rgb(249,42,33)" fg:x="494" fg:w="2"/><text x="37.0333%" y="655.50"></text></g><g><title>sechost`LsaLookupOpenLocalPolicy (2 samples, 0.15%)</title><rect x="36.7833%" y="629" width="0.1489%" height="15" fill="rgb(242,149,17)" fg:x="494" fg:w="2"/><text x="37.0333%" y="639.50"></text></g><g><title>sechost`ReleaseIdentityProviderEnumContext (1 samples, 0.07%)</title><rect x="36.8578%" y="613" width="0.0745%" height="15" fill="rgb(244,29,21)" fg:x="495" fg:w="1"/><text x="37.1078%" y="623.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="36.8578%" y="597" width="0.0745%" height="15" fill="rgb(220,130,37)" fg:x="495" fg:w="1"/><text x="37.1078%" y="607.50"></text></g><g><title>ntdll`EtwNotificationRegister (1 samples, 0.07%)</title><rect x="36.8578%" y="581" width="0.0745%" height="15" fill="rgb(211,67,2)" fg:x="495" fg:w="1"/><text x="37.1078%" y="591.50"></text></g><g><title>ntdll`EtwEventRegister (1 samples, 0.07%)</title><rect x="36.8578%" y="565" width="0.0745%" height="15" fill="rgb(235,68,52)" fg:x="495" fg:w="1"/><text x="37.1078%" y="575.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="36.8578%" y="549" width="0.0745%" height="15" fill="rgb(246,142,3)" fg:x="495" fg:w="1"/><text x="37.1078%" y="559.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (62 samples, 4.62%)</title><rect x="32.3902%" y="901" width="4.6165%" height="15" fill="rgb(241,25,7)" fg:x="435" fg:w="62"/><text x="32.6402%" y="911.50">ntdll..</text></g><g><title>ntdll`LdrGetProcedureAddressEx (62 samples, 4.62%)</title><rect x="32.3902%" y="885" width="4.6165%" height="15" fill="rgb(242,119,39)" fg:x="435" fg:w="62"/><text x="32.6402%" y="895.50">ntdll..</text></g><g><title>ntdll`LdrGetProcedureAddressEx (62 samples, 4.62%)</title><rect x="32.3902%" y="869" width="4.6165%" height="15" fill="rgb(241,98,45)" fg:x="435" fg:w="62"/><text x="32.6402%" y="879.50">ntdll..</text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (33 samples, 2.46%)</title><rect x="34.5495%" y="853" width="2.4572%" height="15" fill="rgb(254,28,30)" fg:x="464" fg:w="33"/><text x="34.7995%" y="863.50">nt..</text></g><g><title>shell32`Ordinal184 (10 samples, 0.74%)</title><rect x="36.2621%" y="837" width="0.7446%" height="15" fill="rgb(241,142,54)" fg:x="487" fg:w="10"/><text x="36.5121%" y="847.50"></text></g><g><title>shell32`Ordinal184 (7 samples, 0.52%)</title><rect x="36.4855%" y="821" width="0.5212%" height="15" fill="rgb(222,85,15)" fg:x="490" fg:w="7"/><text x="36.7355%" y="831.50"></text></g><g><title>ucrtbase`initterm (7 samples, 0.52%)</title><rect x="36.4855%" y="805" width="0.5212%" height="15" fill="rgb(210,85,47)" fg:x="490" fg:w="7"/><text x="36.7355%" y="815.50"></text></g><g><title>shell32`Ordinal613 (7 samples, 0.52%)</title><rect x="36.4855%" y="789" width="0.5212%" height="15" fill="rgb(224,206,25)" fg:x="490" fg:w="7"/><text x="36.7355%" y="799.50"></text></g><g><title>shell32`SHGetPropertyStoreForWindow (6 samples, 0.45%)</title><rect x="36.5599%" y="773" width="0.4468%" height="15" fill="rgb(243,201,19)" fg:x="491" fg:w="6"/><text x="36.8099%" y="783.50"></text></g><g><title>KernelBase`GetProcAddress (5 samples, 0.37%)</title><rect x="36.6344%" y="757" width="0.3723%" height="15" fill="rgb(236,59,4)" fg:x="492" fg:w="5"/><text x="36.8844%" y="767.50"></text></g><g><title>ntdll`LdrGetProcedureAddressForCaller (5 samples, 0.37%)</title><rect x="36.6344%" y="741" width="0.3723%" height="15" fill="rgb(254,179,45)" fg:x="492" fg:w="5"/><text x="36.8844%" y="751.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (5 samples, 0.37%)</title><rect x="36.6344%" y="725" width="0.3723%" height="15" fill="rgb(226,14,10)" fg:x="492" fg:w="5"/><text x="36.8844%" y="735.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (5 samples, 0.37%)</title><rect x="36.6344%" y="709" width="0.3723%" height="15" fill="rgb(244,27,41)" fg:x="492" fg:w="5"/><text x="36.8844%" y="719.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.07%)</title><rect x="36.9322%" y="693" width="0.0745%" height="15" fill="rgb(235,35,32)" fg:x="496" fg:w="1"/><text x="37.1822%" y="703.50"></text></g><g><title>advapi32`SaferComputeTokenFromLevel (1 samples, 0.07%)</title><rect x="36.9322%" y="677" width="0.0745%" height="15" fill="rgb(218,68,31)" fg:x="496" fg:w="1"/><text x="37.1822%" y="687.50"></text></g><g><title>advapi32`SaferIdentifyLevel (1 samples, 0.07%)</title><rect x="36.9322%" y="661" width="0.0745%" height="15" fill="rgb(207,120,37)" fg:x="496" fg:w="1"/><text x="37.1822%" y="671.50"></text></g><g><title>advapi32`RegCreateKeyExA (1 samples, 0.07%)</title><rect x="36.9322%" y="645" width="0.0745%" height="15" fill="rgb(227,98,0)" fg:x="496" fg:w="1"/><text x="37.1822%" y="655.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="36.9322%" y="629" width="0.0745%" height="15" fill="rgb(207,7,3)" fg:x="496" fg:w="1"/><text x="37.1822%" y="639.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="36.9322%" y="613" width="0.0745%" height="15" fill="rgb(206,98,19)" fg:x="496" fg:w="1"/><text x="37.1822%" y="623.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="36.9322%" y="597" width="0.0745%" height="15" fill="rgb(217,5,26)" fg:x="496" fg:w="1"/><text x="37.1822%" y="607.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.07%)</title><rect x="37.0812%" y="773" width="0.0745%" height="15" fill="rgb(235,190,38)" fg:x="498" fg:w="1"/><text x="37.3312%" y="783.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="37.0812%" y="757" width="0.0745%" height="15" fill="rgb(247,86,24)" fg:x="498" fg:w="1"/><text x="37.3312%" y="767.50"></text></g><g><title>ntdll`TpAllocWork (1 samples, 0.07%)</title><rect x="37.0812%" y="741" width="0.0745%" height="15" fill="rgb(205,101,16)" fg:x="498" fg:w="1"/><text x="37.3312%" y="751.50"></text></g><g><title>ntdll`LdrUnloadDll (1 samples, 0.07%)</title><rect x="37.0812%" y="725" width="0.0745%" height="15" fill="rgb(246,168,33)" fg:x="498" fg:w="1"/><text x="37.3312%" y="735.50"></text></g><g><title>ntdll`TpReleaseWork (1 samples, 0.07%)</title><rect x="37.0812%" y="709" width="0.0745%" height="15" fill="rgb(231,114,1)" fg:x="498" fg:w="1"/><text x="37.3312%" y="719.50"></text></g><g><title>ntdll`LdrShutdownThread (2 samples, 0.15%)</title><rect x="37.0812%" y="789" width="0.1489%" height="15" fill="rgb(207,184,53)" fg:x="498" fg:w="2"/><text x="37.3312%" y="799.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.07%)</title><rect x="37.1556%" y="773" width="0.0745%" height="15" fill="rgb(224,95,51)" fg:x="499" fg:w="1"/><text x="37.4056%" y="783.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (1 samples, 0.07%)</title><rect x="37.1556%" y="757" width="0.0745%" height="15" fill="rgb(212,188,45)" fg:x="499" fg:w="1"/><text x="37.4056%" y="767.50"></text></g><g><title>ntdll`LdrShutdownThread (7 samples, 0.52%)</title><rect x="37.0067%" y="805" width="0.5212%" height="15" fill="rgb(223,154,38)" fg:x="497" fg:w="7"/><text x="37.2567%" y="815.50"></text></g><g><title>ntdll`RtlVirtualUnwind (4 samples, 0.30%)</title><rect x="37.2301%" y="789" width="0.2978%" height="15" fill="rgb(251,22,52)" fg:x="500" fg:w="4"/><text x="37.4801%" y="799.50"></text></g><g><title>ntdll`LdrUnloadAlternateResourceModuleEx (8 samples, 0.60%)</title><rect x="37.0067%" y="853" width="0.5957%" height="15" fill="rgb(229,209,22)" fg:x="497" fg:w="8"/><text x="37.2567%" y="863.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (8 samples, 0.60%)</title><rect x="37.0067%" y="837" width="0.5957%" height="15" fill="rgb(234,138,34)" fg:x="497" fg:w="8"/><text x="37.2567%" y="847.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (8 samples, 0.60%)</title><rect x="37.0067%" y="821" width="0.5957%" height="15" fill="rgb(212,95,11)" fg:x="497" fg:w="8"/><text x="37.2567%" y="831.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="37.5279%" y="805" width="0.0745%" height="15" fill="rgb(240,179,47)" fg:x="504" fg:w="1"/><text x="37.7779%" y="815.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.07%)</title><rect x="37.5279%" y="789" width="0.0745%" height="15" fill="rgb(240,163,11)" fg:x="504" fg:w="1"/><text x="37.7779%" y="799.50"></text></g><g><title>KernelBase`GetNamedPipeAttribute (1 samples, 0.07%)</title><rect x="37.6024%" y="741" width="0.0745%" height="15" fill="rgb(236,37,12)" fg:x="505" fg:w="1"/><text x="37.8524%" y="751.50"></text></g><g><title>KernelBase`PackageIdFromFullName (1 samples, 0.07%)</title><rect x="37.6768%" y="741" width="0.0745%" height="15" fill="rgb(232,164,16)" fg:x="506" fg:w="1"/><text x="37.9268%" y="751.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="37.6768%" y="725" width="0.0745%" height="15" fill="rgb(244,205,15)" fg:x="506" fg:w="1"/><text x="37.9268%" y="735.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="37.6768%" y="709" width="0.0745%" height="15" fill="rgb(223,117,47)" fg:x="506" fg:w="1"/><text x="37.9268%" y="719.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="37.6768%" y="693" width="0.0745%" height="15" fill="rgb(244,107,35)" fg:x="506" fg:w="1"/><text x="37.9268%" y="703.50"></text></g><g><title>KernelBase`ReadStateAtomValue (1 samples, 0.07%)</title><rect x="37.7513%" y="741" width="0.0745%" height="15" fill="rgb(205,140,8)" fg:x="507" fg:w="1"/><text x="38.0013%" y="751.50"></text></g><g><title>ntdll`CsrClientConnectToServer (1 samples, 0.07%)</title><rect x="37.7513%" y="725" width="0.0745%" height="15" fill="rgb(228,84,46)" fg:x="507" fg:w="1"/><text x="38.0013%" y="735.50"></text></g><g><title>ntdll`CsrClientConnectToServer (1 samples, 0.07%)</title><rect x="37.7513%" y="709" width="0.0745%" height="15" fill="rgb(254,188,9)" fg:x="507" fg:w="1"/><text x="38.0013%" y="719.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.07%)</title><rect x="37.7513%" y="693" width="0.0745%" height="15" fill="rgb(206,112,54)" fg:x="507" fg:w="1"/><text x="38.0013%" y="703.50"></text></g><g><title>KernelBase`ReadStateAtomValue (4 samples, 0.30%)</title><rect x="37.6024%" y="757" width="0.2978%" height="15" fill="rgb(216,84,49)" fg:x="505" fg:w="4"/><text x="37.8524%" y="767.50"></text></g><g><title>KernelBase`WriteConsoleW (1 samples, 0.07%)</title><rect x="37.8258%" y="741" width="0.0745%" height="15" fill="rgb(214,194,35)" fg:x="508" fg:w="1"/><text x="38.0758%" y="751.50"></text></g><g><title>KernelBase`WriteConsoleW (1 samples, 0.07%)</title><rect x="37.8258%" y="725" width="0.0745%" height="15" fill="rgb(249,28,3)" fg:x="508" fg:w="1"/><text x="38.0758%" y="735.50"></text></g><g><title>KernelBase`WriteConsoleW (1 samples, 0.07%)</title><rect x="37.8258%" y="709" width="0.0745%" height="15" fill="rgb(222,56,52)" fg:x="508" fg:w="1"/><text x="38.0758%" y="719.50"></text></g><g><title>KernelBase`WriteConsoleW (1 samples, 0.07%)</title><rect x="37.8258%" y="693" width="0.0745%" height="15" fill="rgb(245,217,50)" fg:x="508" fg:w="1"/><text x="38.0758%" y="703.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (5 samples, 0.37%)</title><rect x="37.6024%" y="805" width="0.3723%" height="15" fill="rgb(213,201,24)" fg:x="505" fg:w="5"/><text x="37.8524%" y="815.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (5 samples, 0.37%)</title><rect x="37.6024%" y="789" width="0.3723%" height="15" fill="rgb(248,116,28)" fg:x="505" fg:w="5"/><text x="37.8524%" y="799.50"></text></g><g><title>KernelBase`ReadStateAtomValue (5 samples, 0.37%)</title><rect x="37.6024%" y="773" width="0.3723%" height="15" fill="rgb(219,72,43)" fg:x="505" fg:w="5"/><text x="37.8524%" y="783.50"></text></g><g><title>KernelBase`time (1 samples, 0.07%)</title><rect x="37.9002%" y="757" width="0.0745%" height="15" fill="rgb(209,138,14)" fg:x="509" fg:w="1"/><text x="38.1502%" y="767.50"></text></g><g><title>KernelBase`time (1 samples, 0.07%)</title><rect x="37.9002%" y="741" width="0.0745%" height="15" fill="rgb(222,18,33)" fg:x="509" fg:w="1"/><text x="38.1502%" y="751.50"></text></g><g><title>KernelBase`time (1 samples, 0.07%)</title><rect x="37.9002%" y="725" width="0.0745%" height="15" fill="rgb(213,199,7)" fg:x="509" fg:w="1"/><text x="38.1502%" y="735.50"></text></g><g><title>KernelBase`time (1 samples, 0.07%)</title><rect x="37.9002%" y="709" width="0.0745%" height="15" fill="rgb(250,110,10)" fg:x="509" fg:w="1"/><text x="38.1502%" y="719.50"></text></g><g><title>KernelBase`CreateMutexExW (1 samples, 0.07%)</title><rect x="37.9002%" y="693" width="0.0745%" height="15" fill="rgb(248,123,6)" fg:x="509" fg:w="1"/><text x="38.1502%" y="703.50"></text></g><g><title>KernelBase`BaseFormatObjectAttributes (1 samples, 0.07%)</title><rect x="37.9002%" y="677" width="0.0745%" height="15" fill="rgb(206,91,31)" fg:x="509" fg:w="1"/><text x="38.1502%" y="687.50"></text></g><g><title>KernelBase`BaseGetNamedObjectDirectory (1 samples, 0.07%)</title><rect x="37.9002%" y="661" width="0.0745%" height="15" fill="rgb(211,154,13)" fg:x="509" fg:w="1"/><text x="38.1502%" y="671.50"></text></g><g><title>KernelBase`RegOpenCurrentUser (1 samples, 0.07%)</title><rect x="37.9002%" y="645" width="0.0745%" height="15" fill="rgb(225,148,7)" fg:x="509" fg:w="1"/><text x="38.1502%" y="655.50"></text></g><g><title>ntdll`ZwOpenDirectoryObject (1 samples, 0.07%)</title><rect x="37.9002%" y="629" width="0.0745%" height="15" fill="rgb(220,160,43)" fg:x="509" fg:w="1"/><text x="38.1502%" y="639.50"></text></g><g><title>ntdll`RtlSwitchedVVI (6 samples, 0.45%)</title><rect x="37.6024%" y="853" width="0.4468%" height="15" fill="rgb(213,52,39)" fg:x="505" fg:w="6"/><text x="37.8524%" y="863.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (6 samples, 0.45%)</title><rect x="37.6024%" y="837" width="0.4468%" height="15" fill="rgb(243,137,7)" fg:x="505" fg:w="6"/><text x="37.8524%" y="847.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (6 samples, 0.45%)</title><rect x="37.6024%" y="821" width="0.4468%" height="15" fill="rgb(230,79,13)" fg:x="505" fg:w="6"/><text x="37.8524%" y="831.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.07%)</title><rect x="37.9747%" y="805" width="0.0745%" height="15" fill="rgb(247,105,23)" fg:x="510" fg:w="1"/><text x="38.2247%" y="815.50"></text></g><g><title>kernel32`BaseThreadInitThunk (1 samples, 0.07%)</title><rect x="37.9747%" y="789" width="0.0745%" height="15" fill="rgb(223,179,41)" fg:x="510" fg:w="1"/><text x="38.2247%" y="799.50"></text></g><g><title>kernel32`ExpandEnvironmentStringsW (1 samples, 0.07%)</title><rect x="37.9747%" y="773" width="0.0745%" height="15" fill="rgb(218,9,34)" fg:x="510" fg:w="1"/><text x="38.2247%" y="783.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="37.9747%" y="757" width="0.0745%" height="15" fill="rgb(222,106,8)" fg:x="510" fg:w="1"/><text x="38.2247%" y="767.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="37.9747%" y="741" width="0.0745%" height="15" fill="rgb(211,220,0)" fg:x="510" fg:w="1"/><text x="38.2247%" y="751.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="37.9747%" y="725" width="0.0745%" height="15" fill="rgb(229,52,16)" fg:x="510" fg:w="1"/><text x="38.2247%" y="735.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (15 samples, 1.12%)</title><rect x="37.0067%" y="869" width="1.1169%" height="15" fill="rgb(212,155,18)" fg:x="497" fg:w="15"/><text x="37.2567%" y="879.50"></text></g><g><title>ntdll`RtlUnlockHeap (1 samples, 0.07%)</title><rect x="38.0491%" y="853" width="0.0745%" height="15" fill="rgb(242,21,14)" fg:x="511" fg:w="1"/><text x="38.2991%" y="863.50"></text></g><g><title>ntdll`RtlUnlockHeap (1 samples, 0.07%)</title><rect x="38.0491%" y="837" width="0.0745%" height="15" fill="rgb(222,19,48)" fg:x="511" fg:w="1"/><text x="38.2991%" y="847.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.07%)</title><rect x="38.0491%" y="821" width="0.0745%" height="15" fill="rgb(232,45,27)" fg:x="511" fg:w="1"/><text x="38.2991%" y="831.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (1 samples, 0.07%)</title><rect x="38.0491%" y="805" width="0.0745%" height="15" fill="rgb(249,103,42)" fg:x="511" fg:w="1"/><text x="38.2991%" y="815.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.07%)</title><rect x="38.0491%" y="789" width="0.0745%" height="15" fill="rgb(246,81,33)" fg:x="511" fg:w="1"/><text x="38.2991%" y="799.50"></text></g><g><title>ntdll`LdrLoadDll (16 samples, 1.19%)</title><rect x="37.0067%" y="901" width="1.1914%" height="15" fill="rgb(252,33,42)" fg:x="497" fg:w="16"/><text x="37.2567%" y="911.50"></text></g><g><title>ntdll`RtlDosPathNameToNtPathName_U (16 samples, 1.19%)</title><rect x="37.0067%" y="885" width="1.1914%" height="15" fill="rgb(209,212,41)" fg:x="497" fg:w="16"/><text x="37.2567%" y="895.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.07%)</title><rect x="38.1236%" y="869" width="0.0745%" height="15" fill="rgb(207,154,6)" fg:x="512" fg:w="1"/><text x="38.3736%" y="879.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.07%)</title><rect x="38.1236%" y="853" width="0.0745%" height="15" fill="rgb(223,64,47)" fg:x="512" fg:w="1"/><text x="38.3736%" y="863.50"></text></g><g><title>ntdll`RtlDosApplyFileIsolationRedirection_Ustr (1 samples, 0.07%)</title><rect x="38.1236%" y="837" width="0.0745%" height="15" fill="rgb(211,161,38)" fg:x="512" fg:w="1"/><text x="38.3736%" y="847.50"></text></g><g><title>ntdll`RtlInitUnicodeStringEx (1 samples, 0.07%)</title><rect x="38.1236%" y="821" width="0.0745%" height="15" fill="rgb(219,138,40)" fg:x="512" fg:w="1"/><text x="38.3736%" y="831.50"></text></g><g><title>ntdll`RtlFindActivationContextSectionString (1 samples, 0.07%)</title><rect x="38.1236%" y="805" width="0.0745%" height="15" fill="rgb(241,228,46)" fg:x="512" fg:w="1"/><text x="38.3736%" y="815.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.07%)</title><rect x="38.4214%" y="645" width="0.0745%" height="15" fill="rgb(223,209,38)" fg:x="516" fg:w="1"/><text x="38.6714%" y="655.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.07%)</title><rect x="38.4214%" y="629" width="0.0745%" height="15" fill="rgb(236,164,45)" fg:x="516" fg:w="1"/><text x="38.6714%" y="639.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.07%)</title><rect x="38.4214%" y="613" width="0.0745%" height="15" fill="rgb(231,15,5)" fg:x="516" fg:w="1"/><text x="38.6714%" y="623.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (1 samples, 0.07%)</title><rect x="38.4214%" y="597" width="0.0745%" height="15" fill="rgb(252,35,15)" fg:x="516" fg:w="1"/><text x="38.6714%" y="607.50"></text></g><g><title>ntdll`LdrShutdownThread (2 samples, 0.15%)</title><rect x="38.4214%" y="693" width="0.1489%" height="15" fill="rgb(248,181,18)" fg:x="516" fg:w="2"/><text x="38.6714%" y="703.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (2 samples, 0.15%)</title><rect x="38.4214%" y="677" width="0.1489%" height="15" fill="rgb(233,39,42)" fg:x="516" fg:w="2"/><text x="38.6714%" y="687.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (2 samples, 0.15%)</title><rect x="38.4214%" y="661" width="0.1489%" height="15" fill="rgb(238,110,33)" fg:x="516" fg:w="2"/><text x="38.6714%" y="671.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="38.4959%" y="645" width="0.0745%" height="15" fill="rgb(233,195,10)" fg:x="517" fg:w="1"/><text x="38.7459%" y="655.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.07%)</title><rect x="38.4959%" y="629" width="0.0745%" height="15" fill="rgb(254,105,3)" fg:x="517" fg:w="1"/><text x="38.7459%" y="639.50"></text></g><g><title>ntdll`LdrShutdownThread (3 samples, 0.22%)</title><rect x="38.4214%" y="709" width="0.2234%" height="15" fill="rgb(221,225,9)" fg:x="516" fg:w="3"/><text x="38.6714%" y="719.50"></text></g><g><title>ntdll`TpAllocWork (1 samples, 0.07%)</title><rect x="38.5704%" y="693" width="0.0745%" height="15" fill="rgb(224,227,45)" fg:x="518" fg:w="1"/><text x="38.8204%" y="703.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.07%)</title><rect x="38.5704%" y="677" width="0.0745%" height="15" fill="rgb(229,198,43)" fg:x="518" fg:w="1"/><text x="38.8204%" y="687.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.07%)</title><rect x="38.5704%" y="661" width="0.0745%" height="15" fill="rgb(206,209,35)" fg:x="518" fg:w="1"/><text x="38.8204%" y="671.50"></text></g><g><title>ntdll`NtReleaseWorkerFactoryWorker (1 samples, 0.07%)</title><rect x="38.5704%" y="645" width="0.0745%" height="15" fill="rgb(245,195,53)" fg:x="518" fg:w="1"/><text x="38.8204%" y="655.50"></text></g><g><title>ntdll`LdrShutdownThread (5 samples, 0.37%)</title><rect x="38.3470%" y="757" width="0.3723%" height="15" fill="rgb(240,92,26)" fg:x="515" fg:w="5"/><text x="38.5970%" y="767.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (4 samples, 0.30%)</title><rect x="38.4214%" y="741" width="0.2978%" height="15" fill="rgb(207,40,23)" fg:x="516" fg:w="4"/><text x="38.6714%" y="751.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (4 samples, 0.30%)</title><rect x="38.4214%" y="725" width="0.2978%" height="15" fill="rgb(223,111,35)" fg:x="516" fg:w="4"/><text x="38.6714%" y="735.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="38.6448%" y="709" width="0.0745%" height="15" fill="rgb(229,147,28)" fg:x="519" fg:w="1"/><text x="38.8948%" y="719.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.07%)</title><rect x="38.6448%" y="693" width="0.0745%" height="15" fill="rgb(211,29,28)" fg:x="519" fg:w="1"/><text x="38.8948%" y="703.50"></text></g><g><title>ntdll`LdrShutdownThread (7 samples, 0.52%)</title><rect x="38.2725%" y="773" width="0.5212%" height="15" fill="rgb(228,72,33)" fg:x="514" fg:w="7"/><text x="38.5225%" y="783.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="38.7193%" y="757" width="0.0745%" height="15" fill="rgb(205,214,31)" fg:x="520" fg:w="1"/><text x="38.9693%" y="767.50"></text></g><g><title>ntdll`NtProtectVirtualMemory (1 samples, 0.07%)</title><rect x="38.7193%" y="741" width="0.0745%" height="15" fill="rgb(224,111,15)" fg:x="520" fg:w="1"/><text x="38.9693%" y="751.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="38.7937%" y="773" width="0.0745%" height="15" fill="rgb(253,21,26)" fg:x="521" fg:w="1"/><text x="39.0437%" y="783.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.07%)</title><rect x="38.7937%" y="757" width="0.0745%" height="15" fill="rgb(245,139,43)" fg:x="521" fg:w="1"/><text x="39.0437%" y="767.50"></text></g><g><title>ntdll`RtlUnlockHeap (1 samples, 0.07%)</title><rect x="38.8682%" y="773" width="0.0745%" height="15" fill="rgb(252,170,7)" fg:x="522" fg:w="1"/><text x="39.1182%" y="783.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="38.8682%" y="757" width="0.0745%" height="15" fill="rgb(231,118,14)" fg:x="522" fg:w="1"/><text x="39.1182%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="38.8682%" y="741" width="0.0745%" height="15" fill="rgb(238,83,0)" fg:x="522" fg:w="1"/><text x="39.1182%" y="751.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.07%)</title><rect x="38.8682%" y="725" width="0.0745%" height="15" fill="rgb(221,39,39)" fg:x="522" fg:w="1"/><text x="39.1182%" y="735.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.07%)</title><rect x="38.8682%" y="709" width="0.0745%" height="15" fill="rgb(222,119,46)" fg:x="522" fg:w="1"/><text x="39.1182%" y="719.50"></text></g><g><title>ntdll`RtlQueryResourcePolicy (1 samples, 0.07%)</title><rect x="38.8682%" y="693" width="0.0745%" height="15" fill="rgb(222,165,49)" fg:x="522" fg:w="1"/><text x="39.1182%" y="703.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.07%)</title><rect x="38.8682%" y="677" width="0.0745%" height="15" fill="rgb(219,113,52)" fg:x="522" fg:w="1"/><text x="39.1182%" y="687.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.07%)</title><rect x="38.8682%" y="661" width="0.0745%" height="15" fill="rgb(214,7,15)" fg:x="522" fg:w="1"/><text x="39.1182%" y="671.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.07%)</title><rect x="38.8682%" y="645" width="0.0745%" height="15" fill="rgb(235,32,4)" fg:x="522" fg:w="1"/><text x="39.1182%" y="655.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (2 samples, 0.15%)</title><rect x="38.9427%" y="757" width="0.1489%" height="15" fill="rgb(238,90,54)" fg:x="523" fg:w="2"/><text x="39.1927%" y="767.50"></text></g><g><title>ntdll`LdrShutdownThread (13 samples, 0.97%)</title><rect x="38.1981%" y="821" width="0.9680%" height="15" fill="rgb(213,208,19)" fg:x="513" fg:w="13"/><text x="38.4481%" y="831.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (12 samples, 0.89%)</title><rect x="38.2725%" y="805" width="0.8935%" height="15" fill="rgb(233,156,4)" fg:x="514" fg:w="12"/><text x="38.5225%" y="815.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (12 samples, 0.89%)</title><rect x="38.2725%" y="789" width="0.8935%" height="15" fill="rgb(207,194,5)" fg:x="514" fg:w="12"/><text x="38.5225%" y="799.50"></text></g><g><title>ntdll`TpAllocWork (3 samples, 0.22%)</title><rect x="38.9427%" y="773" width="0.2234%" height="15" fill="rgb(206,111,30)" fg:x="523" fg:w="3"/><text x="39.1927%" y="783.50"></text></g><g><title>ntdll`LdrUnloadDll (1 samples, 0.07%)</title><rect x="39.0916%" y="757" width="0.0745%" height="15" fill="rgb(243,70,54)" fg:x="525" fg:w="1"/><text x="39.3416%" y="767.50"></text></g><g><title>ntdll`TpReleaseWork (1 samples, 0.07%)</title><rect x="39.0916%" y="741" width="0.0745%" height="15" fill="rgb(242,28,8)" fg:x="525" fg:w="1"/><text x="39.3416%" y="751.50"></text></g><g><title>ntdll`LdrShutdownThread (14 samples, 1.04%)</title><rect x="38.1981%" y="837" width="1.0424%" height="15" fill="rgb(219,106,18)" fg:x="513" fg:w="14"/><text x="38.4481%" y="847.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="39.1660%" y="821" width="0.0745%" height="15" fill="rgb(244,222,10)" fg:x="526" fg:w="1"/><text x="39.4160%" y="831.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (4 samples, 0.30%)</title><rect x="39.2405%" y="837" width="0.2978%" height="15" fill="rgb(236,179,52)" fg:x="527" fg:w="4"/><text x="39.4905%" y="847.50"></text></g><g><title>ntdll`ZwMapViewOfSection (4 samples, 0.30%)</title><rect x="39.2405%" y="821" width="0.2978%" height="15" fill="rgb(213,23,39)" fg:x="527" fg:w="4"/><text x="39.4905%" y="831.50"></text></g><g><title>ntdll`LdrShutdownThread (19 samples, 1.41%)</title><rect x="38.1981%" y="901" width="1.4147%" height="15" fill="rgb(238,48,10)" fg:x="513" fg:w="19"/><text x="38.4481%" y="911.50"></text></g><g><title>ntdll`LdrShutdownThread (19 samples, 1.41%)</title><rect x="38.1981%" y="885" width="1.4147%" height="15" fill="rgb(251,196,23)" fg:x="513" fg:w="19"/><text x="38.4481%" y="895.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (19 samples, 1.41%)</title><rect x="38.1981%" y="869" width="1.4147%" height="15" fill="rgb(250,152,24)" fg:x="513" fg:w="19"/><text x="38.4481%" y="879.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (19 samples, 1.41%)</title><rect x="38.1981%" y="853" width="1.4147%" height="15" fill="rgb(209,150,17)" fg:x="513" fg:w="19"/><text x="38.4481%" y="863.50"></text></g><g><title>ntdll`ZwOpenSection (1 samples, 0.07%)</title><rect x="39.5383%" y="837" width="0.0745%" height="15" fill="rgb(234,202,34)" fg:x="531" fg:w="1"/><text x="39.7883%" y="847.50"></text></g><g><title>ntdll`RtlGetProcessHeaps (1 samples, 0.07%)</title><rect x="39.6128%" y="901" width="0.0745%" height="15" fill="rgb(253,148,53)" fg:x="532" fg:w="1"/><text x="39.8628%" y="911.50"></text></g><g><title>ntdll`RtlInitializeCriticalSectionEx (1 samples, 0.07%)</title><rect x="39.6128%" y="885" width="0.0745%" height="15" fill="rgb(218,129,16)" fg:x="532" fg:w="1"/><text x="39.8628%" y="895.50"></text></g><g><title>ntdll`LdrGetDllPath (1 samples, 0.07%)</title><rect x="39.6128%" y="869" width="0.0745%" height="15" fill="rgb(216,85,19)" fg:x="532" fg:w="1"/><text x="39.8628%" y="879.50"></text></g><g><title>ntdll`RtlImageNtHeaderEx (1 samples, 0.07%)</title><rect x="39.6873%" y="901" width="0.0745%" height="15" fill="rgb(235,228,7)" fg:x="533" fg:w="1"/><text x="39.9373%" y="911.50"></text></g><g><title>ntdll`RtlMultiByteToUnicodeSize (1 samples, 0.07%)</title><rect x="39.7617%" y="901" width="0.0745%" height="15" fill="rgb(245,175,0)" fg:x="534" fg:w="1"/><text x="40.0117%" y="911.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.07%)</title><rect x="39.7617%" y="885" width="0.0745%" height="15" fill="rgb(208,168,36)" fg:x="534" fg:w="1"/><text x="40.0117%" y="895.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (1 samples, 0.07%)</title><rect x="39.7617%" y="869" width="0.0745%" height="15" fill="rgb(246,171,24)" fg:x="534" fg:w="1"/><text x="40.0117%" y="879.50"></text></g><g><title>ntdll`RtlCompareUnicodeStrings (1 samples, 0.07%)</title><rect x="39.7617%" y="853" width="0.0745%" height="15" fill="rgb(215,142,24)" fg:x="534" fg:w="1"/><text x="40.0117%" y="863.50"></text></g><g><title>ntdll`NtQueryVolumeInformationFile (1 samples, 0.07%)</title><rect x="39.8362%" y="869" width="0.0745%" height="15" fill="rgb(250,187,7)" fg:x="535" fg:w="1"/><text x="40.0862%" y="879.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="39.9106%" y="821" width="0.0745%" height="15" fill="rgb(228,66,33)" fg:x="536" fg:w="1"/><text x="40.1606%" y="831.50"></text></g><g><title>ntdll`ZwUnmapViewOfSection (1 samples, 0.07%)</title><rect x="39.9106%" y="805" width="0.0745%" height="15" fill="rgb(234,215,21)" fg:x="536" fg:w="1"/><text x="40.1606%" y="815.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (2 samples, 0.15%)</title><rect x="39.9106%" y="837" width="0.1489%" height="15" fill="rgb(222,191,20)" fg:x="536" fg:w="2"/><text x="40.1606%" y="847.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.07%)</title><rect x="39.9851%" y="821" width="0.0745%" height="15" fill="rgb(245,79,54)" fg:x="537" fg:w="1"/><text x="40.2351%" y="831.50"></text></g><g><title>ntdll`RtlUnlockHeap (4 samples, 0.30%)</title><rect x="40.0596%" y="837" width="0.2978%" height="15" fill="rgb(240,10,37)" fg:x="538" fg:w="4"/><text x="40.3096%" y="847.50"></text></g><g><title>ntdll`RtlUnlockHeap (3 samples, 0.22%)</title><rect x="40.1340%" y="821" width="0.2234%" height="15" fill="rgb(214,192,32)" fg:x="539" fg:w="3"/><text x="40.3840%" y="831.50"></text></g><g><title>ntdll`NtQueryAttributesFile (3 samples, 0.22%)</title><rect x="40.1340%" y="805" width="0.2234%" height="15" fill="rgb(209,36,54)" fg:x="539" fg:w="3"/><text x="40.3840%" y="815.50"></text></g><g><title>ntdll`RtlUnlockHeap (7 samples, 0.52%)</title><rect x="39.9106%" y="869" width="0.5212%" height="15" fill="rgb(220,10,11)" fg:x="536" fg:w="7"/><text x="40.1606%" y="879.50"></text></g><g><title>ntdll`RtlUnlockHeap (7 samples, 0.52%)</title><rect x="39.9106%" y="853" width="0.5212%" height="15" fill="rgb(221,106,17)" fg:x="536" fg:w="7"/><text x="40.1606%" y="863.50"></text></g><g><title>ntdll`ZwCreateSection (1 samples, 0.07%)</title><rect x="40.3574%" y="837" width="0.0745%" height="15" fill="rgb(251,142,44)" fg:x="542" fg:w="1"/><text x="40.6074%" y="847.50"></text></g><g><title>ntdll`RtlVirtualUnwind (8 samples, 0.60%)</title><rect x="40.4319%" y="869" width="0.5957%" height="15" fill="rgb(238,13,15)" fg:x="543" fg:w="8"/><text x="40.6819%" y="879.50"></text></g><g><title>ntdll`RtlUnlockHeap (19 samples, 1.41%)</title><rect x="39.8362%" y="901" width="1.4147%" height="15" fill="rgb(208,107,27)" fg:x="535" fg:w="19"/><text x="40.0862%" y="911.50"></text></g><g><title>ntdll`RtlUnlockHeap (19 samples, 1.41%)</title><rect x="39.8362%" y="885" width="1.4147%" height="15" fill="rgb(205,136,37)" fg:x="535" fg:w="19"/><text x="40.0862%" y="895.50"></text></g><g><title>ntdll`ZwOpenFile (3 samples, 0.22%)</title><rect x="41.0276%" y="869" width="0.2234%" height="15" fill="rgb(250,205,27)" fg:x="551" fg:w="3"/><text x="41.2776%" y="879.50"></text></g><g><title>ntdll`LdrInitShimEngineDynamic (123 samples, 9.16%)</title><rect x="32.1668%" y="917" width="9.1586%" height="15" fill="rgb(210,80,43)" fg:x="432" fg:w="123"/><text x="32.4168%" y="927.50">ntdll`LdrInit..</text></g><g><title>ntdll`TpAllocWork (1 samples, 0.07%)</title><rect x="41.2509%" y="901" width="0.0745%" height="15" fill="rgb(247,160,36)" fg:x="554" fg:w="1"/><text x="41.5009%" y="911.50"></text></g><g><title>ntdll`RtlIsProcessorFeaturePresent (1 samples, 0.07%)</title><rect x="41.2509%" y="885" width="0.0745%" height="15" fill="rgb(234,13,49)" fg:x="554" fg:w="1"/><text x="41.5009%" y="895.50"></text></g><g><title>ntdll`TpIsTimerSet (1 samples, 0.07%)</title><rect x="41.2509%" y="869" width="0.0745%" height="15" fill="rgb(234,122,0)" fg:x="554" fg:w="1"/><text x="41.5009%" y="879.50"></text></g><g><title>ntdll`LdrInitializeThunk (125 samples, 9.31%)</title><rect x="32.1668%" y="965" width="9.3075%" height="15" fill="rgb(207,146,38)" fg:x="432" fg:w="125"/><text x="32.4168%" y="975.50">ntdll`LdrInit..</text></g><g><title>ntdll`LdrInitializeThunk (125 samples, 9.31%)</title><rect x="32.1668%" y="949" width="9.3075%" height="15" fill="rgb(207,177,25)" fg:x="432" fg:w="125"/><text x="32.4168%" y="959.50">ntdll`LdrInit..</text></g><g><title>ntdll`LdrInitializeThunk (125 samples, 9.31%)</title><rect x="32.1668%" y="933" width="9.3075%" height="15" fill="rgb(211,178,42)" fg:x="432" fg:w="125"/><text x="32.4168%" y="943.50">ntdll`LdrInit..</text></g><g><title>ntdll`LdrShutdownThread (2 samples, 0.15%)</title><rect x="41.3254%" y="917" width="0.1489%" height="15" fill="rgb(230,69,54)" fg:x="555" fg:w="2"/><text x="41.5754%" y="927.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (1 samples, 0.07%)</title><rect x="41.3999%" y="901" width="0.0745%" height="15" fill="rgb(214,135,41)" fg:x="556" fg:w="1"/><text x="41.6499%" y="911.50"></text></g><g><title>vcruntime140d`_CxxFrameHandler3 (1 samples, 0.07%)</title><rect x="41.3999%" y="885" width="0.0745%" height="15" fill="rgb(237,67,25)" fg:x="556" fg:w="1"/><text x="41.6499%" y="895.50"></text></g><g><title>vcruntime140d`_CxxFrameHandler3 (1 samples, 0.07%)</title><rect x="41.3999%" y="869" width="0.0745%" height="15" fill="rgb(222,189,50)" fg:x="556" fg:w="1"/><text x="41.6499%" y="879.50"></text></g><g><title>vcruntime140d`set_se_translator (1 samples, 0.07%)</title><rect x="41.3999%" y="853" width="0.0745%" height="15" fill="rgb(245,148,34)" fg:x="556" fg:w="1"/><text x="41.6499%" y="863.50"></text></g><g><title>vcruntime140d`set_se_translator (1 samples, 0.07%)</title><rect x="41.3999%" y="837" width="0.0745%" height="15" fill="rgb(222,29,6)" fg:x="556" fg:w="1"/><text x="41.6499%" y="847.50"></text></g><g><title>ucrtbased`calloc_dbg (1 samples, 0.07%)</title><rect x="41.3999%" y="821" width="0.0745%" height="15" fill="rgb(221,189,43)" fg:x="556" fg:w="1"/><text x="41.6499%" y="831.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="41.3999%" y="805" width="0.0745%" height="15" fill="rgb(207,36,27)" fg:x="556" fg:w="1"/><text x="41.6499%" y="815.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="41.3999%" y="789" width="0.0745%" height="15" fill="rgb(217,90,24)" fg:x="556" fg:w="1"/><text x="41.6499%" y="799.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="41.3999%" y="773" width="0.0745%" height="15" fill="rgb(224,66,35)" fg:x="556" fg:w="1"/><text x="41.6499%" y="783.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="41.3999%" y="757" width="0.0745%" height="15" fill="rgb(221,13,50)" fg:x="556" fg:w="1"/><text x="41.6499%" y="767.50"></text></g><g><title>ntdll`RtlDeriveCapabilitySidsFromName (1 samples, 0.07%)</title><rect x="41.6977%" y="901" width="0.0745%" height="15" fill="rgb(236,68,49)" fg:x="560" fg:w="1"/><text x="41.9477%" y="911.50"></text></g><g><title>ntdll`TpPostWork (1 samples, 0.07%)</title><rect x="41.6977%" y="885" width="0.0745%" height="15" fill="rgb(229,146,28)" fg:x="560" fg:w="1"/><text x="41.9477%" y="895.50"></text></g><g><title>ntdll`NtReleaseWorkerFactoryWorker (1 samples, 0.07%)</title><rect x="41.6977%" y="869" width="0.0745%" height="15" fill="rgb(225,31,38)" fg:x="560" fg:w="1"/><text x="41.9477%" y="879.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="41.7722%" y="869" width="0.0745%" height="15" fill="rgb(250,208,3)" fg:x="561" fg:w="1"/><text x="42.0222%" y="879.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.07%)</title><rect x="41.9955%" y="789" width="0.0745%" height="15" fill="rgb(246,54,23)" fg:x="564" fg:w="1"/><text x="42.2455%" y="799.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="41.9955%" y="773" width="0.0745%" height="15" fill="rgb(243,76,11)" fg:x="564" fg:w="1"/><text x="42.2455%" y="783.50"></text></g><g><title>ntdll`ZwOpenSection (1 samples, 0.07%)</title><rect x="41.9955%" y="757" width="0.0745%" height="15" fill="rgb(245,21,50)" fg:x="564" fg:w="1"/><text x="42.2455%" y="767.50"></text></g><g><title>ntdll`LdrShutdownThread (2 samples, 0.15%)</title><rect x="41.9955%" y="805" width="0.1489%" height="15" fill="rgb(228,9,43)" fg:x="564" fg:w="2"/><text x="42.2455%" y="815.50"></text></g><g><title>ntdll`RtlReleaseRelativeName (1 samples, 0.07%)</title><rect x="42.0700%" y="789" width="0.0745%" height="15" fill="rgb(208,100,47)" fg:x="565" fg:w="1"/><text x="42.3200%" y="799.50"></text></g><g><title>ntdll`RtlFindCharInUnicodeString (1 samples, 0.07%)</title><rect x="42.0700%" y="773" width="0.0745%" height="15" fill="rgb(232,26,8)" fg:x="565" fg:w="1"/><text x="42.3200%" y="783.50"></text></g><g><title>ntdll`LdrShutdownThread (7 samples, 0.52%)</title><rect x="41.9211%" y="821" width="0.5212%" height="15" fill="rgb(216,166,38)" fg:x="563" fg:w="7"/><text x="42.1711%" y="831.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (4 samples, 0.30%)</title><rect x="42.1445%" y="805" width="0.2978%" height="15" fill="rgb(251,202,51)" fg:x="566" fg:w="4"/><text x="42.3945%" y="815.50"></text></g><g><title>kernel32`BasepReleaseSxsCreateProcessUtilityStruct (3 samples, 0.22%)</title><rect x="42.2189%" y="789" width="0.2234%" height="15" fill="rgb(254,216,34)" fg:x="567" fg:w="3"/><text x="42.4689%" y="799.50"></text></g><g><title>ntdll`LdrResFindResourceDirectory (3 samples, 0.22%)</title><rect x="42.2189%" y="773" width="0.2234%" height="15" fill="rgb(251,32,27)" fg:x="567" fg:w="3"/><text x="42.4689%" y="783.50"></text></g><g><title>ntdll`LdrResSearchResource (3 samples, 0.22%)</title><rect x="42.2189%" y="757" width="0.2234%" height="15" fill="rgb(208,127,28)" fg:x="567" fg:w="3"/><text x="42.4689%" y="767.50"></text></g><g><title>ntdll`LdrResSearchResource (3 samples, 0.22%)</title><rect x="42.2189%" y="741" width="0.2234%" height="15" fill="rgb(224,137,22)" fg:x="567" fg:w="3"/><text x="42.4689%" y="751.50"></text></g><g><title>ntdll`LdrpResGetResourceDirectory (3 samples, 0.22%)</title><rect x="42.2189%" y="725" width="0.2234%" height="15" fill="rgb(254,70,32)" fg:x="567" fg:w="3"/><text x="42.4689%" y="735.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (9 samples, 0.67%)</title><rect x="41.9211%" y="837" width="0.6701%" height="15" fill="rgb(229,75,37)" fg:x="563" fg:w="9"/><text x="42.1711%" y="847.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (2 samples, 0.15%)</title><rect x="42.4423%" y="821" width="0.1489%" height="15" fill="rgb(252,64,23)" fg:x="570" fg:w="2"/><text x="42.6923%" y="831.50"></text></g><g><title>ntdll`ZwMapViewOfSection (2 samples, 0.15%)</title><rect x="42.4423%" y="805" width="0.1489%" height="15" fill="rgb(232,162,48)" fg:x="570" fg:w="2"/><text x="42.6923%" y="815.50"></text></g><g><title>ntdll`RtlUnlockHeap (14 samples, 1.04%)</title><rect x="42.5912%" y="837" width="1.0424%" height="15" fill="rgb(246,160,12)" fg:x="572" fg:w="14"/><text x="42.8412%" y="847.50"></text></g><g><title>ntdll`RtlUnlockHeap (14 samples, 1.04%)</title><rect x="42.5912%" y="821" width="1.0424%" height="15" fill="rgb(247,166,0)" fg:x="572" fg:w="14"/><text x="42.8412%" y="831.50"></text></g><g><title>ntdll`NtQueryAttributesFile (14 samples, 1.04%)</title><rect x="42.5912%" y="805" width="1.0424%" height="15" fill="rgb(249,219,21)" fg:x="572" fg:w="14"/><text x="42.8412%" y="815.50"></text></g><g><title>ntdll`ZwCreateSection (3 samples, 0.22%)</title><rect x="43.6337%" y="837" width="0.2234%" height="15" fill="rgb(205,209,3)" fg:x="586" fg:w="3"/><text x="43.8837%" y="847.50"></text></g><g><title>ntdll`RtlUnlockHeap (30 samples, 2.23%)</title><rect x="41.8466%" y="869" width="2.2338%" height="15" fill="rgb(243,44,1)" fg:x="562" fg:w="30"/><text x="42.0966%" y="879.50">n..</text></g><g><title>ntdll`RtlUnlockHeap (30 samples, 2.23%)</title><rect x="41.8466%" y="853" width="2.2338%" height="15" fill="rgb(206,159,16)" fg:x="562" fg:w="30"/><text x="42.0966%" y="863.50">n..</text></g><g><title>ntdll`ZwOpenFile (3 samples, 0.22%)</title><rect x="43.8570%" y="837" width="0.2234%" height="15" fill="rgb(244,77,30)" fg:x="589" fg:w="3"/><text x="44.1070%" y="847.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.07%)</title><rect x="45.3462%" y="837" width="0.0745%" height="15" fill="rgb(218,69,12)" fg:x="609" fg:w="1"/><text x="45.5962%" y="847.50"></text></g><g><title>ntdll`RtlLookupFunctionEntry (2 samples, 0.15%)</title><rect x="45.3462%" y="853" width="0.1489%" height="15" fill="rgb(212,87,7)" fg:x="609" fg:w="2"/><text x="45.5962%" y="863.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.07%)</title><rect x="45.4207%" y="837" width="0.0745%" height="15" fill="rgb(245,114,25)" fg:x="610" fg:w="1"/><text x="45.6707%" y="847.50"></text></g><g><title>ntdll`RtlAcquireSRWLockExclusive (1 samples, 0.07%)</title><rect x="45.4952%" y="821" width="0.0745%" height="15" fill="rgb(210,61,42)" fg:x="611" fg:w="1"/><text x="45.7452%" y="831.50"></text></g><g><title>ntdll`TpReleaseCleanupGroupMembers (53 samples, 3.95%)</title><rect x="41.6977%" y="933" width="3.9464%" height="15" fill="rgb(211,52,33)" fg:x="560" fg:w="53"/><text x="41.9477%" y="943.50">ntdl..</text></g><g><title>ntdll`TpAllocPool (53 samples, 3.95%)</title><rect x="41.6977%" y="917" width="3.9464%" height="15" fill="rgb(234,58,33)" fg:x="560" fg:w="53"/><text x="41.9477%" y="927.50">ntdl..</text></g><g><title>ntdll`RtlUnlockHeap (52 samples, 3.87%)</title><rect x="41.7722%" y="901" width="3.8719%" height="15" fill="rgb(220,115,36)" fg:x="561" fg:w="52"/><text x="42.0222%" y="911.50">ntdl..</text></g><g><title>ntdll`RtlUnlockHeap (52 samples, 3.87%)</title><rect x="41.7722%" y="885" width="3.8719%" height="15" fill="rgb(243,153,54)" fg:x="561" fg:w="52"/><text x="42.0222%" y="895.50">ntdl..</text></g><g><title>ntdll`RtlVirtualUnwind (21 samples, 1.56%)</title><rect x="44.0804%" y="869" width="1.5637%" height="15" fill="rgb(251,47,18)" fg:x="592" fg:w="21"/><text x="44.3304%" y="879.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (2 samples, 0.15%)</title><rect x="45.4952%" y="853" width="0.1489%" height="15" fill="rgb(242,102,42)" fg:x="611" fg:w="2"/><text x="45.7452%" y="863.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (2 samples, 0.15%)</title><rect x="45.4952%" y="837" width="0.1489%" height="15" fill="rgb(234,31,38)" fg:x="611" fg:w="2"/><text x="45.7452%" y="847.50"></text></g><g><title>ntdll`RtlpIsQualifiedLanguage (1 samples, 0.07%)</title><rect x="45.5696%" y="821" width="0.0745%" height="15" fill="rgb(221,117,51)" fg:x="612" fg:w="1"/><text x="45.8196%" y="831.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline16bytecode_builder15FunctionBuilder19translate_statement17h7e8a105899ad4167E (1 samples, 0.07%)</title><rect x="47.3567%" y="773" width="0.0745%" height="15" fill="rgb(212,20,18)" fg:x="636" fg:w="1"/><text x="47.6067%" y="783.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline16bytecode_builder15FunctionBuilder16new_with_context17h9fb247ff2915096bE (1 samples, 0.07%)</title><rect x="47.3567%" y="757" width="0.0745%" height="15" fill="rgb(245,133,36)" fg:x="636" fg:w="1"/><text x="47.6067%" y="767.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline16bytecode_builder15FunctionBuilder19translate_statement17h7e8a105899ad4167E (1 samples, 0.07%)</title><rect x="47.3567%" y="741" width="0.0745%" height="15" fill="rgb(212,6,19)" fg:x="636" fg:w="1"/><text x="47.6067%" y="751.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline16bytecode_builder15FunctionBuilder19translate_statement17h7e8a105899ad4167E (1 samples, 0.07%)</title><rect x="47.3567%" y="725" width="0.0745%" height="15" fill="rgb(218,1,36)" fg:x="636" fg:w="1"/><text x="47.6067%" y="735.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline24function_builder_context27FunctionBuilderContextInner7declare17h1b06f51a2114497bE (1 samples, 0.07%)</title><rect x="47.3567%" y="709" width="0.0745%" height="15" fill="rgb(246,84,54)" fg:x="636" fg:w="1"/><text x="47.6067%" y="719.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline24function_builder_context27FunctionBuilderContextInner21get_next_stack_offset17h1d1c5cd629de5a0dE (1 samples, 0.07%)</title><rect x="47.3567%" y="693" width="0.0745%" height="15" fill="rgb(242,110,6)" fg:x="636" fg:w="1"/><text x="47.6067%" y="703.50"></text></g><g><title>test3`ZN4core3ptr45drop_in_place$LT$swc_ecma_ast..stmt..Stmt$GT$17hdf940b391a9acc32E.llvm.8428236992396442899 (1 samples, 0.07%)</title><rect x="47.4311%" y="773" width="0.0745%" height="15" fill="rgb(214,47,5)" fg:x="637" fg:w="1"/><text x="47.6811%" y="783.50"></text></g><g><title>ntdll`KiUserCallbackDispatcher (5 samples, 0.37%)</title><rect x="53.1646%" y="757" width="0.3723%" height="15" fill="rgb(218,159,25)" fg:x="714" fg:w="5"/><text x="53.4146%" y="767.50"></text></g><g><title>user32`CtxInitUser32 (5 samples, 0.37%)</title><rect x="53.1646%" y="741" width="0.3723%" height="15" fill="rgb(215,211,28)" fg:x="714" fg:w="5"/><text x="53.4146%" y="751.50"></text></g><g><title>user32`ClientThreadSetup (5 samples, 0.37%)</title><rect x="53.1646%" y="725" width="0.3723%" height="15" fill="rgb(238,59,32)" fg:x="714" fg:w="5"/><text x="53.4146%" y="735.50"></text></g><g><title>gdi32`AbortPath (5 samples, 0.37%)</title><rect x="53.1646%" y="709" width="0.3723%" height="15" fill="rgb(226,82,3)" fg:x="714" fg:w="5"/><text x="53.4146%" y="719.50"></text></g><g><title>gdi32`GetClipBox (5 samples, 0.37%)</title><rect x="53.1646%" y="693" width="0.3723%" height="15" fill="rgb(240,164,32)" fg:x="714" fg:w="5"/><text x="53.4146%" y="703.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (5 samples, 0.37%)</title><rect x="53.1646%" y="677" width="0.3723%" height="15" fill="rgb(232,46,7)" fg:x="714" fg:w="5"/><text x="53.4146%" y="687.50"></text></g><g><title>ntdll`RtlVirtualUnwind (5 samples, 0.37%)</title><rect x="53.1646%" y="661" width="0.3723%" height="15" fill="rgb(229,129,53)" fg:x="714" fg:w="5"/><text x="53.4146%" y="671.50"></text></g><g><title>test3`ZN13rusty_js_core11interpreter8clousure8Clousure3run17h5681c1da285c10c9E (2 samples, 0.15%)</title><rect x="54.5793%" y="709" width="0.1489%" height="15" fill="rgb(234,188,29)" fg:x="733" fg:w="2"/><text x="54.8293%" y="719.50"></text></g><g><title>test3`ZN13rusty_js_core11interpreter8clousure8Clousure11create_code17h36a461213af512f9E (2 samples, 0.15%)</title><rect x="54.5793%" y="693" width="0.1489%" height="15" fill="rgb(246,141,4)" fg:x="733" fg:w="2"/><text x="54.8293%" y="703.50"></text></g><g><title>ucrtbased`fmod (1 samples, 0.07%)</title><rect x="54.6538%" y="677" width="0.0745%" height="15" fill="rgb(229,23,39)" fg:x="734" fg:w="1"/><text x="54.9038%" y="687.50"></text></g><g><title>test3`LLVMBuildStore (1 samples, 0.07%)</title><rect x="54.7282%" y="677" width="0.0745%" height="15" fill="rgb(206,12,3)" fg:x="735" fg:w="1"/><text x="54.9782%" y="687.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateStore (1 samples, 0.07%)</title><rect x="54.7282%" y="661" width="0.0745%" height="15" fill="rgb(252,226,20)" fg:x="735" fg:w="1"/><text x="54.9782%" y="671.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAlignedStore (1 samples, 0.07%)</title><rect x="54.7282%" y="645" width="0.0745%" height="15" fill="rgb(216,123,35)" fg:x="735" fg:w="1"/><text x="54.9782%" y="655.50"></text></g><g><title>test3`llvm::AtomicRMWInst::operator new (1 samples, 0.07%)</title><rect x="54.7282%" y="629" width="0.0745%" height="15" fill="rgb(212,68,40)" fg:x="735" fg:w="1"/><text x="54.9782%" y="639.50"></text></g><g><title>test3`llvm::User::operator new (1 samples, 0.07%)</title><rect x="54.7282%" y="613" width="0.0745%" height="15" fill="rgb(254,125,32)" fg:x="735" fg:w="1"/><text x="54.9782%" y="623.50"></text></g><g><title>test3`llvm::User::allocateFixedOperandUser (1 samples, 0.07%)</title><rect x="54.7282%" y="597" width="0.0745%" height="15" fill="rgb(253,97,22)" fg:x="735" fg:w="1"/><text x="54.9782%" y="607.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="54.7282%" y="581" width="0.0745%" height="15" fill="rgb(241,101,14)" fg:x="735" fg:w="1"/><text x="54.9782%" y="591.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="54.7282%" y="565" width="0.0745%" height="15" fill="rgb(238,103,29)" fg:x="735" fg:w="1"/><text x="54.9782%" y="575.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="54.7282%" y="549" width="0.0745%" height="15" fill="rgb(233,195,47)" fg:x="735" fg:w="1"/><text x="54.9782%" y="559.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="54.7282%" y="533" width="0.0745%" height="15" fill="rgb(246,218,30)" fg:x="735" fg:w="1"/><text x="54.9782%" y="543.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="54.7282%" y="517" width="0.0745%" height="15" fill="rgb(219,145,47)" fg:x="735" fg:w="1"/><text x="54.9782%" y="527.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="54.7282%" y="501" width="0.0745%" height="15" fill="rgb(243,12,26)" fg:x="735" fg:w="1"/><text x="54.9782%" y="511.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="54.7282%" y="485" width="0.0745%" height="15" fill="rgb(214,87,16)" fg:x="735" fg:w="1"/><text x="54.9782%" y="495.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.07%)</title><rect x="54.7282%" y="469" width="0.0745%" height="15" fill="rgb(208,99,42)" fg:x="735" fg:w="1"/><text x="54.9782%" y="479.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="54.7282%" y="453" width="0.0745%" height="15" fill="rgb(253,99,2)" fg:x="735" fg:w="1"/><text x="54.9782%" y="463.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="54.7282%" y="437" width="0.0745%" height="15" fill="rgb(220,168,23)" fg:x="735" fg:w="1"/><text x="54.9782%" y="447.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="54.7282%" y="421" width="0.0745%" height="15" fill="rgb(242,38,24)" fg:x="735" fg:w="1"/><text x="54.9782%" y="431.50"></text></g><g><title>test3`ZN7inkwell5types10float_type9FloatType11const_float17hfcb48b2bb94511f0E (1 samples, 0.07%)</title><rect x="54.8027%" y="677" width="0.0745%" height="15" fill="rgb(225,182,9)" fg:x="736" fg:w="1"/><text x="55.0527%" y="687.50"></text></g><g><title>test3`LLVMConstReal (1 samples, 0.07%)</title><rect x="54.8027%" y="661" width="0.0745%" height="15" fill="rgb(243,178,37)" fg:x="736" fg:w="1"/><text x="55.0527%" y="671.50"></text></g><g><title>test3`llvm::ConstantFP::get (1 samples, 0.07%)</title><rect x="54.8027%" y="645" width="0.0745%" height="15" fill="rgb(232,139,19)" fg:x="736" fg:w="1"/><text x="55.0527%" y="655.50"></text></g><g><title>test3`llvm::APFloat::APFloat (1 samples, 0.07%)</title><rect x="54.8027%" y="629" width="0.0745%" height="15" fill="rgb(225,201,24)" fg:x="736" fg:w="1"/><text x="55.0527%" y="639.50"></text></g><g><title>test3`llvm::APFloat::Storage::Storage (1 samples, 0.07%)</title><rect x="54.8027%" y="613" width="0.0745%" height="15" fill="rgb(221,47,46)" fg:x="736" fg:w="1"/><text x="55.0527%" y="623.50"></text></g><g><title>test3`llvm::detail::IEEEFloat::IEEEFloat (1 samples, 0.07%)</title><rect x="54.8027%" y="597" width="0.0745%" height="15" fill="rgb(249,23,13)" fg:x="736" fg:w="1"/><text x="55.0527%" y="607.50"></text></g><g><title>test3`llvm::detail::IEEEFloat::operator= (1 samples, 0.07%)</title><rect x="54.8027%" y="581" width="0.0745%" height="15" fill="rgb(219,9,5)" fg:x="736" fg:w="1"/><text x="55.0527%" y="591.50"></text></g><g><title>test3`ZN7inkwell5types8int_type7IntType10const_zero17h162939b5a699c16aE (1 samples, 0.07%)</title><rect x="54.8771%" y="677" width="0.0745%" height="15" fill="rgb(254,171,16)" fg:x="737" fg:w="1"/><text x="55.1271%" y="687.50"></text></g><g><title>test3`LLVMConstNull (1 samples, 0.07%)</title><rect x="54.8771%" y="661" width="0.0745%" height="15" fill="rgb(230,171,20)" fg:x="737" fg:w="1"/><text x="55.1271%" y="671.50"></text></g><g><title>test3`llvm::Constant::getNullValue (1 samples, 0.07%)</title><rect x="54.8771%" y="645" width="0.0745%" height="15" fill="rgb(210,71,41)" fg:x="737" fg:w="1"/><text x="55.1271%" y="655.50"></text></g><g><title>test3`llvm::ConstantInt::get (1 samples, 0.07%)</title><rect x="54.8771%" y="629" width="0.0745%" height="15" fill="rgb(206,173,20)" fg:x="737" fg:w="1"/><text x="55.1271%" y="639.50"></text></g><g><title>test3`llvm::ConstantInt::get (1 samples, 0.07%)</title><rect x="54.8771%" y="613" width="0.0745%" height="15" fill="rgb(233,88,34)" fg:x="737" fg:w="1"/><text x="55.1271%" y="623.50"></text></g><g><title>test3`llvm::ConstantInt::get (1 samples, 0.07%)</title><rect x="54.8771%" y="597" width="0.0745%" height="15" fill="rgb(223,209,46)" fg:x="737" fg:w="1"/><text x="55.1271%" y="607.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt;,llvm::DenseMapInfo&lt;llvm::APInt&gt;,llvm::detail::DenseMapPair&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt; &gt; &gt;,llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt;,llvm::DenseMapInfo&lt;llvm::APInt&gt;,llvm::detail::DenseMapPair&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete (1 samples, 0.07%)</title><rect x="54.8771%" y="581" width="0.0745%" height="15" fill="rgb(250,43,18)" fg:x="737" fg:w="1"/><text x="55.1271%" y="591.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt;,llvm::DenseMapInfo&lt;llvm::APInt&gt;,llvm::detail::DenseMapPair&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt; &gt; &gt;,llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt;,llvm::DenseMapInfo&lt;llvm::APInt&gt;,llvm::detail::DenseMapPair&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete (1 samples, 0.07%)</title><rect x="54.8771%" y="565" width="0.0745%" height="15" fill="rgb(208,13,10)" fg:x="737" fg:w="1"/><text x="55.1271%" y="575.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt;,llvm::DenseMapInfo&lt;llvm::APInt&gt;,llvm::detail::DenseMapPair&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt; &gt; &gt;,llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt;,llvm::DenseMapInfo&lt;llvm::APInt&gt;,llvm::detail::DenseMapPair&lt;llvm::APInt,std::unique_ptr&lt;llvm::ConstantInt,std::default_delete&lt;llvm::ConstantInt&gt; &gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="54.8771%" y="549" width="0.0745%" height="15" fill="rgb(212,200,36)" fg:x="737" fg:w="1"/><text x="55.1271%" y="559.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateCast (1 samples, 0.07%)</title><rect x="54.9516%" y="645" width="0.0745%" height="15" fill="rgb(225,90,30)" fg:x="738" fg:w="1"/><text x="55.2016%" y="655.50"></text></g><g><title>test3`llvm::IRBuilderBase::Insert (1 samples, 0.07%)</title><rect x="54.9516%" y="629" width="0.0745%" height="15" fill="rgb(236,182,39)" fg:x="738" fg:w="1"/><text x="55.2016%" y="639.50"></text></g><g><title>test3`llvm::IRBuilderDefaultInserter::InsertHelper (1 samples, 0.07%)</title><rect x="54.9516%" y="613" width="0.0745%" height="15" fill="rgb(212,144,35)" fg:x="738" fg:w="1"/><text x="55.2016%" y="623.50"></text></g><g><title>test3`llvm::Value::setName (1 samples, 0.07%)</title><rect x="54.9516%" y="597" width="0.0745%" height="15" fill="rgb(228,63,44)" fg:x="738" fg:w="1"/><text x="55.2016%" y="607.50"></text></g><g><title>test3`llvm::Value::setNameImpl (1 samples, 0.07%)</title><rect x="54.9516%" y="581" width="0.0745%" height="15" fill="rgb(228,109,6)" fg:x="738" fg:w="1"/><text x="55.2016%" y="591.50"></text></g><g><title>test3`llvm::ValueSymbolTable::createValueName (1 samples, 0.07%)</title><rect x="54.9516%" y="565" width="0.0745%" height="15" fill="rgb(238,117,24)" fg:x="738" fg:w="1"/><text x="55.2016%" y="575.50"></text></g><g><title>test3`llvm::ValueSymbolTable::makeUniqueName (1 samples, 0.07%)</title><rect x="54.9516%" y="549" width="0.0745%" height="15" fill="rgb(242,26,26)" fg:x="738" fg:w="1"/><text x="55.2016%" y="559.50"></text></g><g><title>test3`llvm::raw_ostream::operator&lt; (1 samples, 0.07%)</title><rect x="54.9516%" y="533" width="0.0745%" height="15" fill="rgb(221,92,48)" fg:x="738" fg:w="1"/><text x="55.2016%" y="543.50"></text></g><g><title>test3`llvm::raw_ostream::operator&lt; (1 samples, 0.07%)</title><rect x="54.9516%" y="517" width="0.0745%" height="15" fill="rgb(209,209,32)" fg:x="738" fg:w="1"/><text x="55.2016%" y="527.50"></text></g><g><title>test3`llvm::write_integer (1 samples, 0.07%)</title><rect x="54.9516%" y="501" width="0.0745%" height="15" fill="rgb(221,70,22)" fg:x="738" fg:w="1"/><text x="55.2016%" y="511.50"></text></g><g><title>test3`llvm::write_double (1 samples, 0.07%)</title><rect x="54.9516%" y="485" width="0.0745%" height="15" fill="rgb(248,145,5)" fg:x="738" fg:w="1"/><text x="55.2016%" y="495.50"></text></g><g><title>test3`llvm::write_double (1 samples, 0.07%)</title><rect x="54.9516%" y="469" width="0.0745%" height="15" fill="rgb(226,116,26)" fg:x="738" fg:w="1"/><text x="55.2016%" y="479.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder10build_cast17h1c83600d5b6b4043E (2 samples, 0.15%)</title><rect x="54.9516%" y="677" width="0.1489%" height="15" fill="rgb(244,5,17)" fg:x="738" fg:w="2"/><text x="55.2016%" y="687.50"></text></g><g><title>test3`LLVMBuildCast (2 samples, 0.15%)</title><rect x="54.9516%" y="661" width="0.1489%" height="15" fill="rgb(252,159,33)" fg:x="738" fg:w="2"/><text x="55.2016%" y="671.50"></text></g><g><title>test3`llvm::initializeCore (1 samples, 0.07%)</title><rect x="55.0261%" y="645" width="0.0745%" height="15" fill="rgb(206,71,0)" fg:x="739" fg:w="1"/><text x="55.2761%" y="655.50"></text></g><g><title>test3`llvm::CastInst::Create (1 samples, 0.07%)</title><rect x="55.1005%" y="613" width="0.0745%" height="15" fill="rgb(233,118,54)" fg:x="740" fg:w="1"/><text x="55.3505%" y="623.50"></text></g><g><title>test3`llvm::DSOLocalEquivalent::operator new (1 samples, 0.07%)</title><rect x="55.1005%" y="597" width="0.0745%" height="15" fill="rgb(234,83,48)" fg:x="740" fg:w="1"/><text x="55.3505%" y="607.50"></text></g><g><title>test3`llvm::User::operator new (1 samples, 0.07%)</title><rect x="55.1005%" y="581" width="0.0745%" height="15" fill="rgb(228,3,54)" fg:x="740" fg:w="1"/><text x="55.3505%" y="591.50"></text></g><g><title>test3`llvm::User::allocateFixedOperandUser (1 samples, 0.07%)</title><rect x="55.1005%" y="565" width="0.0745%" height="15" fill="rgb(226,155,13)" fg:x="740" fg:w="1"/><text x="55.3505%" y="575.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="55.1005%" y="549" width="0.0745%" height="15" fill="rgb(241,28,37)" fg:x="740" fg:w="1"/><text x="55.3505%" y="559.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="55.1005%" y="533" width="0.0745%" height="15" fill="rgb(233,93,10)" fg:x="740" fg:w="1"/><text x="55.3505%" y="543.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="55.1005%" y="517" width="0.0745%" height="15" fill="rgb(225,113,19)" fg:x="740" fg:w="1"/><text x="55.3505%" y="527.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="55.1005%" y="501" width="0.0745%" height="15" fill="rgb(241,2,18)" fg:x="740" fg:w="1"/><text x="55.3505%" y="511.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="55.1005%" y="485" width="0.0745%" height="15" fill="rgb(228,207,21)" fg:x="740" fg:w="1"/><text x="55.3505%" y="495.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="55.1005%" y="469" width="0.0745%" height="15" fill="rgb(213,211,35)" fg:x="740" fg:w="1"/><text x="55.3505%" y="479.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="55.1005%" y="453" width="0.0745%" height="15" fill="rgb(209,83,10)" fg:x="740" fg:w="1"/><text x="55.3505%" y="463.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder16build_int_to_ptr17hf32e9631339b0b12E (2 samples, 0.15%)</title><rect x="55.1005%" y="677" width="0.1489%" height="15" fill="rgb(209,164,1)" fg:x="740" fg:w="2"/><text x="55.3505%" y="687.50"></text></g><g><title>test3`LLVMBuildIntToPtr (2 samples, 0.15%)</title><rect x="55.1005%" y="661" width="0.1489%" height="15" fill="rgb(213,184,43)" fg:x="740" fg:w="2"/><text x="55.3505%" y="671.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateIntToPtr (2 samples, 0.15%)</title><rect x="55.1005%" y="645" width="0.1489%" height="15" fill="rgb(231,61,34)" fg:x="740" fg:w="2"/><text x="55.3505%" y="655.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateCast (2 samples, 0.15%)</title><rect x="55.1005%" y="629" width="0.1489%" height="15" fill="rgb(235,75,3)" fg:x="740" fg:w="2"/><text x="55.3505%" y="639.50"></text></g><g><title>test3`llvm::ConstantFolder::CreateCast (1 samples, 0.07%)</title><rect x="55.1750%" y="613" width="0.0745%" height="15" fill="rgb(220,106,47)" fg:x="741" fg:w="1"/><text x="55.4250%" y="623.50"></text></g><g><title>test3`llvm::ConstantExpr::getCast (1 samples, 0.07%)</title><rect x="55.1750%" y="597" width="0.0745%" height="15" fill="rgb(210,196,33)" fg:x="741" fg:w="1"/><text x="55.4250%" y="607.50"></text></g><g><title>test3`llvm::ConstantExpr::getIntToPtr (1 samples, 0.07%)</title><rect x="55.1750%" y="581" width="0.0745%" height="15" fill="rgb(229,154,42)" fg:x="741" fg:w="1"/><text x="55.4250%" y="591.50"></text></g><g><title>test3`llvm::deleteConstant (1 samples, 0.07%)</title><rect x="55.1750%" y="565" width="0.0745%" height="15" fill="rgb(228,114,26)" fg:x="741" fg:w="1"/><text x="55.4250%" y="575.50"></text></g><g><title>test3`llvm::ConstantUniqueMap (1 samples, 0.07%)</title><rect x="55.1750%" y="549" width="0.0745%" height="15" fill="rgb(208,144,1)" fg:x="741" fg:w="1"/><text x="55.4250%" y="559.50"></text></g><g><title>test3`llvm::ConstantUniqueMap (1 samples, 0.07%)</title><rect x="55.1750%" y="533" width="0.0745%" height="15" fill="rgb(239,112,37)" fg:x="741" fg:w="1"/><text x="55.4250%" y="543.50"></text></g><g><title>test3`llvm::ConstantExprKeyType::getHash (1 samples, 0.07%)</title><rect x="55.1750%" y="517" width="0.0745%" height="15" fill="rgb(210,96,50)" fg:x="741" fg:w="1"/><text x="55.4250%" y="527.50"></text></g><g><title>test3`llvm::hash_combine (1 samples, 0.07%)</title><rect x="55.1750%" y="501" width="0.0745%" height="15" fill="rgb(222,178,2)" fg:x="741" fg:w="1"/><text x="55.4250%" y="511.50"></text></g><g><title>test3`llvm::hashing::detail::hash_combine_recursive_helper::combine (1 samples, 0.07%)</title><rect x="55.1750%" y="485" width="0.0745%" height="15" fill="rgb(226,74,18)" fg:x="741" fg:w="1"/><text x="55.4250%" y="495.50"></text></g><g><title>test3`llvm::hashing::detail::hash_combine_recursive_helper::combine (1 samples, 0.07%)</title><rect x="55.1750%" y="469" width="0.0745%" height="15" fill="rgb(225,67,54)" fg:x="741" fg:w="1"/><text x="55.4250%" y="479.50"></text></g><g><title>test3`llvm::hashing::detail::hash_combine_recursive_helper::combine (1 samples, 0.07%)</title><rect x="55.1750%" y="453" width="0.0745%" height="15" fill="rgb(251,92,32)" fg:x="741" fg:w="1"/><text x="55.4250%" y="463.50"></text></g><g><title>test3`llvm::hashing::detail::get_hashable_data (1 samples, 0.07%)</title><rect x="55.1750%" y="437" width="0.0745%" height="15" fill="rgb(228,149,22)" fg:x="741" fg:w="1"/><text x="55.4250%" y="447.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder16build_ptr_to_int17h6e4c846e863177bbE (1 samples, 0.07%)</title><rect x="55.2494%" y="677" width="0.0745%" height="15" fill="rgb(243,54,13)" fg:x="742" fg:w="1"/><text x="55.4994%" y="687.50"></text></g><g><title>test3`LLVMBuildPtrToInt (1 samples, 0.07%)</title><rect x="55.2494%" y="661" width="0.0745%" height="15" fill="rgb(243,180,28)" fg:x="742" fg:w="1"/><text x="55.4994%" y="671.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreatePtrToInt (1 samples, 0.07%)</title><rect x="55.2494%" y="645" width="0.0745%" height="15" fill="rgb(208,167,24)" fg:x="742" fg:w="1"/><text x="55.4994%" y="655.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateCast (1 samples, 0.07%)</title><rect x="55.2494%" y="629" width="0.0745%" height="15" fill="rgb(245,73,45)" fg:x="742" fg:w="1"/><text x="55.4994%" y="639.50"></text></g><g><title>test3`llvm::CastInst::Create (1 samples, 0.07%)</title><rect x="55.2494%" y="613" width="0.0745%" height="15" fill="rgb(237,203,48)" fg:x="742" fg:w="1"/><text x="55.4994%" y="623.50"></text></g><g><title>test3`llvm::PtrToIntInst::PtrToIntInst (1 samples, 0.07%)</title><rect x="55.2494%" y="597" width="0.0745%" height="15" fill="rgb(211,197,16)" fg:x="742" fg:w="1"/><text x="55.4994%" y="607.50"></text></g><g><title>test3`llvm::BinaryOperator::getOpcode (1 samples, 0.07%)</title><rect x="55.2494%" y="581" width="0.0745%" height="15" fill="rgb(243,99,51)" fg:x="742" fg:w="1"/><text x="55.4994%" y="591.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline4llvm7CodeGen15translate_codes17h3d3f2c30d4b19104E (9 samples, 0.67%)</title><rect x="54.7282%" y="693" width="0.6701%" height="15" fill="rgb(215,123,29)" fg:x="735" fg:w="9"/><text x="54.9782%" y="703.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder9build_not17hce2315eb6b02616cE (1 samples, 0.07%)</title><rect x="55.3239%" y="677" width="0.0745%" height="15" fill="rgb(239,186,37)" fg:x="743" fg:w="1"/><text x="55.5739%" y="687.50"></text></g><g><title>test3`LLVMBuildNot (1 samples, 0.07%)</title><rect x="55.3239%" y="661" width="0.0745%" height="15" fill="rgb(252,136,39)" fg:x="743" fg:w="1"/><text x="55.5739%" y="671.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateNot (1 samples, 0.07%)</title><rect x="55.3239%" y="645" width="0.0745%" height="15" fill="rgb(223,213,32)" fg:x="743" fg:w="1"/><text x="55.5739%" y="655.50"></text></g><g><title>test3`llvm::BinaryOperator::CreateNot (1 samples, 0.07%)</title><rect x="55.3239%" y="629" width="0.0745%" height="15" fill="rgb(233,115,5)" fg:x="743" fg:w="1"/><text x="55.5739%" y="639.50"></text></g><g><title>test3`llvm::Constant::getAllOnesValue (1 samples, 0.07%)</title><rect x="55.3239%" y="613" width="0.0745%" height="15" fill="rgb(207,226,44)" fg:x="743" fg:w="1"/><text x="55.5739%" y="623.50"></text></g><g><title>test3`llvm::dyn_cast (1 samples, 0.07%)</title><rect x="55.3239%" y="597" width="0.0745%" height="15" fill="rgb(208,126,0)" fg:x="743" fg:w="1"/><text x="55.5739%" y="607.50"></text></g><g><title>test3`llvm::RuntimeDyld::resolveRelocations (2 samples, 0.15%)</title><rect x="55.3984%" y="629" width="0.1489%" height="15" fill="rgb(244,66,21)" fg:x="744" fg:w="2"/><text x="55.6484%" y="639.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::resolveRelocations (2 samples, 0.15%)</title><rect x="55.3984%" y="613" width="0.1489%" height="15" fill="rgb(222,97,12)" fg:x="744" fg:w="2"/><text x="55.6484%" y="623.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::resolveExternalSymbols (2 samples, 0.15%)</title><rect x="55.3984%" y="597" width="0.1489%" height="15" fill="rgb(219,213,19)" fg:x="744" fg:w="2"/><text x="55.6484%" y="607.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::applyExternalSymbolRelocations (1 samples, 0.07%)</title><rect x="55.4728%" y="581" width="0.0745%" height="15" fill="rgb(252,169,30)" fg:x="745" fg:w="1"/><text x="55.7228%" y="591.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::SmallVector (1 samples, 0.07%)</title><rect x="55.4728%" y="565" width="0.0745%" height="15" fill="rgb(206,32,51)" fg:x="745" fg:w="1"/><text x="55.7228%" y="575.50"></text></g><g><title>test3`llvm::MCJIT::finalizeLoadedModules (3 samples, 0.22%)</title><rect x="55.3984%" y="645" width="0.2234%" height="15" fill="rgb(250,172,42)" fg:x="744" fg:w="3"/><text x="55.6484%" y="655.50"></text></g><g><title>test3`llvm::SectionMemoryManager::finalizeMemory (1 samples, 0.07%)</title><rect x="55.5473%" y="629" width="0.0745%" height="15" fill="rgb(209,34,43)" fg:x="746" fg:w="1"/><text x="55.7973%" y="639.50"></text></g><g><title>test3`llvm::SectionMemoryManager::applyMemoryGroupPermissions (1 samples, 0.07%)</title><rect x="55.5473%" y="613" width="0.0745%" height="15" fill="rgb(223,11,35)" fg:x="746" fg:w="1"/><text x="55.7973%" y="623.50"></text></g><g><title>test3`llvm::SectionMemoryManager::anchor (1 samples, 0.07%)</title><rect x="55.5473%" y="597" width="0.0745%" height="15" fill="rgb(251,219,26)" fg:x="746" fg:w="1"/><text x="55.7973%" y="607.50"></text></g><g><title>test3`llvm::sys::Process::getPageSizeEstimate (1 samples, 0.07%)</title><rect x="55.5473%" y="581" width="0.0745%" height="15" fill="rgb(231,119,3)" fg:x="746" fg:w="1"/><text x="55.7973%" y="591.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="55.5473%" y="565" width="0.0745%" height="15" fill="rgb(216,97,11)" fg:x="746" fg:w="1"/><text x="55.7973%" y="575.50"></text></g><g><title>test3`llvm::TargetPassConfig::getPassSubstitution (1 samples, 0.07%)</title><rect x="55.6217%" y="485" width="0.0745%" height="15" fill="rgb(223,59,9)" fg:x="747" fg:w="1"/><text x="55.8717%" y="495.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const * __ptr64,llvm::IdentifyingPassPtr,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::IdentifyingPassPtr&gt; &gt;,void const * __ptr64,llvm::IdentifyingPassPtr,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="55.6217%" y="469" width="0.0745%" height="15" fill="rgb(233,93,31)" fg:x="747" fg:w="1"/><text x="55.8717%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const * __ptr64,llvm::IdentifyingPassPtr,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::IdentifyingPassPtr&gt; &gt;,void const * __ptr64,llvm::IdentifyingPassPtr,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::IdentifyingPassPtr&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="55.6217%" y="453" width="0.0745%" height="15" fill="rgb(239,81,33)" fg:x="747" fg:w="1"/><text x="55.8717%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DISubprogram * __ptr64,llvm::StringRef,llvm::DenseMapInfo&lt;llvm::DISubprogram * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::DISubprogram * __ptr64,llvm::StringRef&gt; &gt;,llvm::DISubprogram * __ptr64,llvm::StringRef,llvm::DenseMapInfo&lt;llvm::DISubprogram * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::DISubprogram * __ptr64,llvm::StringRef&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="55.6217%" y="437" width="0.0745%" height="15" fill="rgb(213,120,34)" fg:x="747" fg:w="1"/><text x="55.8717%" y="447.50"></text></g><g><title>test3`llvm::TargetPassConfig::addIRPasses (2 samples, 0.15%)</title><rect x="55.6217%" y="517" width="0.1489%" height="15" fill="rgb(243,49,53)" fg:x="747" fg:w="2"/><text x="55.8717%" y="527.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (2 samples, 0.15%)</title><rect x="55.6217%" y="501" width="0.1489%" height="15" fill="rgb(247,216,33)" fg:x="747" fg:w="2"/><text x="55.8717%" y="511.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (1 samples, 0.07%)</title><rect x="55.6962%" y="485" width="0.0745%" height="15" fill="rgb(226,26,14)" fg:x="748" fg:w="1"/><text x="55.9462%" y="495.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (1 samples, 0.07%)</title><rect x="55.6962%" y="469" width="0.0745%" height="15" fill="rgb(215,49,53)" fg:x="748" fg:w="1"/><text x="55.9462%" y="479.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="55.6962%" y="453" width="0.0745%" height="15" fill="rgb(245,162,40)" fg:x="748" fg:w="1"/><text x="55.9462%" y="463.50"></text></g><g><title>test3`llvm::FunctionPass::assignPassManager (1 samples, 0.07%)</title><rect x="55.6962%" y="437" width="0.0745%" height="15" fill="rgb(229,68,17)" fg:x="748" fg:w="1"/><text x="55.9462%" y="447.50"></text></g><g><title>test3`llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="55.6962%" y="421" width="0.0745%" height="15" fill="rgb(213,182,10)" fg:x="748" fg:w="1"/><text x="55.9462%" y="431.50"></text></g><g><title>test3`llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.07%)</title><rect x="55.6962%" y="405" width="0.0745%" height="15" fill="rgb(245,125,30)" fg:x="748" fg:w="1"/><text x="55.9462%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; * __ptr64,unsigned int&gt; &gt;,llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="55.6962%" y="389" width="0.0745%" height="15" fill="rgb(232,202,2)" fg:x="748" fg:w="1"/><text x="55.9462%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,unsigned int&gt; &gt;,llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="55.6962%" y="373" width="0.0745%" height="15" fill="rgb(237,140,51)" fg:x="748" fg:w="1"/><text x="55.9462%" y="383.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt; &gt;,1&gt;::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector (1 samples, 0.07%)</title><rect x="55.6962%" y="357" width="0.0745%" height="15" fill="rgb(236,157,25)" fg:x="748" fg:w="1"/><text x="55.9462%" y="367.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector (1 samples, 0.07%)</title><rect x="55.6962%" y="341" width="0.0745%" height="15" fill="rgb(219,209,0)" fg:x="748" fg:w="1"/><text x="55.9462%" y="351.50"></text></g><g><title>test3`llvm::ErrorOr&lt;llvm::StringMap&lt;unsigned __int64,llvm::MallocAllocator&gt; &gt;::compareThisIfSameType&lt;llvm::ErrorOr&lt;llvm::StringMap (1 samples, 0.07%)</title><rect x="55.6962%" y="325" width="0.0745%" height="15" fill="rgb(240,116,54)" fg:x="748" fg:w="1"/><text x="55.9462%" y="335.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="55.7707%" y="517" width="0.0745%" height="15" fill="rgb(216,10,36)" fg:x="749" fg:w="1"/><text x="56.0207%" y="527.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (1 samples, 0.07%)</title><rect x="55.7707%" y="501" width="0.0745%" height="15" fill="rgb(222,72,44)" fg:x="749" fg:w="1"/><text x="56.0207%" y="511.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (1 samples, 0.07%)</title><rect x="55.7707%" y="485" width="0.0745%" height="15" fill="rgb(232,159,9)" fg:x="749" fg:w="1"/><text x="56.0207%" y="495.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="55.7707%" y="469" width="0.0745%" height="15" fill="rgb(210,39,32)" fg:x="749" fg:w="1"/><text x="56.0207%" y="479.50"></text></g><g><title>test3`llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.07%)</title><rect x="55.7707%" y="453" width="0.0745%" height="15" fill="rgb(216,194,45)" fg:x="749" fg:w="1"/><text x="56.0207%" y="463.50"></text></g><g><title>test3`llvm::createX86LowerAMXTypePass (1 samples, 0.07%)</title><rect x="55.7707%" y="437" width="0.0745%" height="15" fill="rgb(218,18,35)" fg:x="749" fg:w="1"/><text x="56.0207%" y="447.50"></text></g><g><title>test3`llvm::AnalysisUsage::setPreservesCFG (1 samples, 0.07%)</title><rect x="55.7707%" y="421" width="0.0745%" height="15" fill="rgb(207,83,51)" fg:x="749" fg:w="1"/><text x="56.0207%" y="431.50"></text></g><g><title>test3`llvm::PassRegistrationListener::enumeratePasses (1 samples, 0.07%)</title><rect x="55.7707%" y="405" width="0.0745%" height="15" fill="rgb(225,63,43)" fg:x="749" fg:w="1"/><text x="56.0207%" y="415.50"></text></g><g><title>test3`llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="55.7707%" y="389" width="0.0745%" height="15" fill="rgb(207,57,36)" fg:x="749" fg:w="1"/><text x="56.0207%" y="399.50"></text></g><g><title>test3`LLVMInitializeX86Target (4 samples, 0.30%)</title><rect x="55.6217%" y="533" width="0.2978%" height="15" fill="rgb(216,99,33)" fg:x="747" fg:w="4"/><text x="55.8717%" y="543.50"></text></g><g><title>test3`llvm::createCFGuardDispatchPass (1 samples, 0.07%)</title><rect x="55.8451%" y="517" width="0.0745%" height="15" fill="rgb(225,42,16)" fg:x="750" fg:w="1"/><text x="56.0951%" y="527.50"></text></g><g><title>test3`llvm::initializeCFGuardPass (1 samples, 0.07%)</title><rect x="55.8451%" y="501" width="0.0745%" height="15" fill="rgb(220,201,45)" fg:x="750" fg:w="1"/><text x="56.0951%" y="511.50"></text></g><g><title>test3`llvm::initializeCFGuardPass (1 samples, 0.07%)</title><rect x="55.8451%" y="485" width="0.0745%" height="15" fill="rgb(225,33,4)" fg:x="750" fg:w="1"/><text x="56.0951%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="55.8451%" y="469" width="0.0745%" height="15" fill="rgb(224,33,50)" fg:x="750" fg:w="1"/><text x="56.0951%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="55.8451%" y="453" width="0.0745%" height="15" fill="rgb(246,198,51)" fg:x="750" fg:w="1"/><text x="56.0951%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="55.8451%" y="437" width="0.0745%" height="15" fill="rgb(205,22,4)" fg:x="750" fg:w="1"/><text x="56.0951%" y="447.50"></text></g><g><title>test3`llvm::initializeCFGuardPass (1 samples, 0.07%)</title><rect x="55.8451%" y="421" width="0.0745%" height="15" fill="rgb(206,3,8)" fg:x="750" fg:w="1"/><text x="56.0951%" y="431.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="55.8451%" y="405" width="0.0745%" height="15" fill="rgb(251,23,15)" fg:x="750" fg:w="1"/><text x="56.0951%" y="415.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="55.8451%" y="389" width="0.0745%" height="15" fill="rgb(252,88,28)" fg:x="750" fg:w="1"/><text x="56.0951%" y="399.50"></text></g><g><title>test3`llvm::TargetMachine::getTargetIRAnalysis (1 samples, 0.07%)</title><rect x="55.9196%" y="533" width="0.0745%" height="15" fill="rgb(212,127,14)" fg:x="751" fg:w="1"/><text x="56.1696%" y="543.50"></text></g><g><title>test3`llvm::TargetIRAnalysis::TargetIRAnalysis (1 samples, 0.07%)</title><rect x="55.9196%" y="517" width="0.0745%" height="15" fill="rgb(247,145,37)" fg:x="751" fg:w="1"/><text x="56.1696%" y="527.50"></text></g><g><title>test3`std::function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl(llvm::LegalityQuery const &amp; __ptr64)&gt;::function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl (1 samples, 0.07%)</title><rect x="55.9196%" y="501" width="0.0745%" height="15" fill="rgb(209,117,53)" fg:x="751" fg:w="1"/><text x="56.1696%" y="511.50"></text></g><g><title>test3`std::_Func_class (1 samples, 0.07%)</title><rect x="55.9196%" y="485" width="0.0745%" height="15" fill="rgb(212,90,42)" fg:x="751" fg:w="1"/><text x="56.1696%" y="495.50"></text></g><g><title>test3`std::_Func_class (1 samples, 0.07%)</title><rect x="55.9196%" y="469" width="0.0745%" height="15" fill="rgb(218,164,37)" fg:x="751" fg:w="1"/><text x="56.1696%" y="479.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::FunctionLoweringInfo (1 samples, 0.07%)</title><rect x="55.9940%" y="453" width="0.0745%" height="15" fill="rgb(246,65,34)" fg:x="752" fg:w="1"/><text x="56.2440%" y="463.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Register,llvm::Value const * __ptr64,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseMapPair&lt;llvm::Register,llvm::Value const * __ptr64&gt; &gt;::DenseMap&lt;llvm::Register,llvm::Value const * __ptr64,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="55.9940%" y="437" width="0.0745%" height="15" fill="rgb(231,100,33)" fg:x="752" fg:w="1"/><text x="56.2440%" y="447.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Register,llvm::Value const * __ptr64,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="55.9940%" y="421" width="0.0745%" height="15" fill="rgb(228,126,14)" fg:x="752" fg:w="1"/><text x="56.2440%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAG::SelectionDAG (1 samples, 0.07%)</title><rect x="56.0685%" y="453" width="0.0745%" height="15" fill="rgb(215,173,21)" fg:x="753" fg:w="1"/><text x="56.3185%" y="463.50"></text></g><g><title>test3`llvm::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator,4096,4096,128&gt;,char,192,64&gt;::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl (1 samples, 0.07%)</title><rect x="56.0685%" y="437" width="0.0745%" height="15" fill="rgb(210,6,40)" fg:x="753" fg:w="1"/><text x="56.3185%" y="447.50"></text></g><g><title>test3`LLVMInitializeX86Target (3 samples, 0.22%)</title><rect x="55.9940%" y="517" width="0.2234%" height="15" fill="rgb(212,48,18)" fg:x="752" fg:w="3"/><text x="56.2440%" y="527.50"></text></g><g><title>test3`llvm::createX86ISelDag (3 samples, 0.22%)</title><rect x="55.9940%" y="501" width="0.2234%" height="15" fill="rgb(230,214,11)" fg:x="752" fg:w="3"/><text x="56.2440%" y="511.50"></text></g><g><title>test3`llvm::createX86ISelDag (3 samples, 0.22%)</title><rect x="55.9940%" y="485" width="0.2234%" height="15" fill="rgb(254,105,39)" fg:x="752" fg:w="3"/><text x="56.2440%" y="495.50"></text></g><g><title>test3`llvm::SelectionDAGISel::SelectionDAGISel (3 samples, 0.22%)</title><rect x="55.9940%" y="469" width="0.2234%" height="15" fill="rgb(245,158,5)" fg:x="752" fg:w="3"/><text x="56.2440%" y="479.50"></text></g><g><title>test3`std::make_unique (1 samples, 0.07%)</title><rect x="56.1430%" y="453" width="0.0745%" height="15" fill="rgb(249,208,11)" fg:x="754" fg:w="1"/><text x="56.3930%" y="463.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::SelectionDAGBuilder (1 samples, 0.07%)</title><rect x="56.1430%" y="437" width="0.0745%" height="15" fill="rgb(210,39,28)" fg:x="754" fg:w="1"/><text x="56.3930%" y="447.50"></text></g><g><title>test3`llvm::StatepointLoweringState::StatepointLoweringState (1 samples, 0.07%)</title><rect x="56.1430%" y="421" width="0.0745%" height="15" fill="rgb(211,56,53)" fg:x="754" fg:w="1"/><text x="56.3930%" y="431.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::SDValue,llvm::SDValue,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair&lt;llvm::SDValue,llvm::SDValue&gt; &gt;::DenseMap&lt;llvm::SDValue,llvm::SDValue,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="56.1430%" y="405" width="0.0745%" height="15" fill="rgb(226,201,30)" fg:x="754" fg:w="1"/><text x="56.3930%" y="415.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::SDValue,llvm::SDValue,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="56.1430%" y="389" width="0.0745%" height="15" fill="rgb(239,101,34)" fg:x="754" fg:w="1"/><text x="56.3930%" y="399.50"></text></g><g><title>test3`llvm::TargetPassConfig::addCoreISelPasses (4 samples, 0.30%)</title><rect x="55.9940%" y="533" width="0.2978%" height="15" fill="rgb(226,209,5)" fg:x="752" fg:w="4"/><text x="56.2440%" y="543.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="56.2174%" y="517" width="0.0745%" height="15" fill="rgb(250,105,47)" fg:x="755" fg:w="1"/><text x="56.4674%" y="527.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="56.2174%" y="501" width="0.0745%" height="15" fill="rgb(230,72,3)" fg:x="755" fg:w="1"/><text x="56.4674%" y="511.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (1 samples, 0.07%)</title><rect x="56.2174%" y="485" width="0.0745%" height="15" fill="rgb(232,218,39)" fg:x="755" fg:w="1"/><text x="56.4674%" y="495.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (1 samples, 0.07%)</title><rect x="56.2174%" y="469" width="0.0745%" height="15" fill="rgb(248,166,6)" fg:x="755" fg:w="1"/><text x="56.4674%" y="479.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="56.2174%" y="453" width="0.0745%" height="15" fill="rgb(247,89,20)" fg:x="755" fg:w="1"/><text x="56.4674%" y="463.50"></text></g><g><title>test3`llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.07%)</title><rect x="56.2174%" y="437" width="0.0745%" height="15" fill="rgb(248,130,54)" fg:x="755" fg:w="1"/><text x="56.4674%" y="447.50"></text></g><g><title>test3`llvm::FoldingSetImpl&lt;llvm::FoldingSet (1 samples, 0.07%)</title><rect x="56.2174%" y="421" width="0.0745%" height="15" fill="rgb(234,196,4)" fg:x="755" fg:w="1"/><text x="56.4674%" y="431.50"></text></g><g><title>test3`llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="56.2174%" y="405" width="0.0745%" height="15" fill="rgb(250,143,31)" fg:x="755" fg:w="1"/><text x="56.4674%" y="415.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::ComputeHash (1 samples, 0.07%)</title><rect x="56.2174%" y="389" width="0.0745%" height="15" fill="rgb(211,110,34)" fg:x="755" fg:w="1"/><text x="56.4674%" y="399.50"></text></g><g><title>test3`llvm::FoldingSetNodeIDRef::ComputeHash (1 samples, 0.07%)</title><rect x="56.2174%" y="373" width="0.0745%" height="15" fill="rgb(215,124,48)" fg:x="755" fg:w="1"/><text x="56.4674%" y="383.50"></text></g><g><title>test3`llvm::hash_combine_range (1 samples, 0.07%)</title><rect x="56.2174%" y="357" width="0.0745%" height="15" fill="rgb(216,46,13)" fg:x="755" fg:w="1"/><text x="56.4674%" y="367.50"></text></g><g><title>test3`llvm::hashing::detail::hash_combine_range_impl (1 samples, 0.07%)</title><rect x="56.2174%" y="341" width="0.0745%" height="15" fill="rgb(205,184,25)" fg:x="755" fg:w="1"/><text x="56.4674%" y="351.50"></text></g><g><title>test3`llvm::hashing::detail::hash_state::mix (1 samples, 0.07%)</title><rect x="56.2174%" y="325" width="0.0745%" height="15" fill="rgb(228,1,10)" fg:x="755" fg:w="1"/><text x="56.4674%" y="335.50"></text></g><g><title>test3`llvm::hashing::detail::fetch64 (1 samples, 0.07%)</title><rect x="56.2174%" y="309" width="0.0745%" height="15" fill="rgb(213,116,27)" fg:x="755" fg:w="1"/><text x="56.4674%" y="319.50"></text></g><g><title>test3`llvm::TargetLibraryAnalysis::TargetLibraryAnalysis (1 samples, 0.07%)</title><rect x="56.2919%" y="405" width="0.0745%" height="15" fill="rgb(241,95,50)" fg:x="756" fg:w="1"/><text x="56.5419%" y="415.50"></text></g><g><title>test3`llvm::Optional&lt;llvm::TargetLibraryInfoImpl&gt;::Optional (1 samples, 0.07%)</title><rect x="56.2919%" y="389" width="0.0745%" height="15" fill="rgb(238,48,32)" fg:x="756" fg:w="1"/><text x="56.5419%" y="399.50"></text></g><g><title>test3`llvm::optional_detail::OptionalStorage&lt;llvm::TargetLibraryInfoImpl,0&gt;::OptionalStorage&lt;llvm::TargetLibraryInfoImpl,0&gt; (1 samples, 0.07%)</title><rect x="56.2919%" y="373" width="0.0745%" height="15" fill="rgb(235,113,49)" fg:x="756" fg:w="1"/><text x="56.5419%" y="383.50"></text></g><g><title>test3`llvm::TargetLibraryInfoImpl::TargetLibraryInfoImpl (1 samples, 0.07%)</title><rect x="56.2919%" y="357" width="0.0745%" height="15" fill="rgb(205,127,43)" fg:x="756" fg:w="1"/><text x="56.5419%" y="367.50"></text></g><g><title>test3`llvm::DenseMap&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;::DenseMap&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="56.2919%" y="341" width="0.0745%" height="15" fill="rgb(250,162,2)" fg:x="756" fg:w="1"/><text x="56.5419%" y="351.50"></text></g><g><title>test3`llvm::DenseMap&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="56.2919%" y="325" width="0.0745%" height="15" fill="rgb(220,13,41)" fg:x="756" fg:w="1"/><text x="56.5419%" y="335.50"></text></g><g><title>test3`std::swap (1 samples, 0.07%)</title><rect x="56.2919%" y="309" width="0.0745%" height="15" fill="rgb(249,221,25)" fg:x="756" fg:w="1"/><text x="56.5419%" y="319.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="56.2919%" y="293" width="0.0745%" height="15" fill="rgb(215,208,19)" fg:x="756" fg:w="1"/><text x="56.5419%" y="303.50"></text></g><g><title>test3`llvm::TargetPassConfig::addISelPasses (11 samples, 0.82%)</title><rect x="55.6217%" y="549" width="0.8191%" height="15" fill="rgb(236,175,2)" fg:x="747" fg:w="11"/><text x="55.8717%" y="559.50"></text></g><g><title>test3`llvm::TargetPassConfig::addISelPrepare (2 samples, 0.15%)</title><rect x="56.2919%" y="533" width="0.1489%" height="15" fill="rgb(241,52,2)" fg:x="756" fg:w="2"/><text x="56.5419%" y="543.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (2 samples, 0.15%)</title><rect x="56.2919%" y="517" width="0.1489%" height="15" fill="rgb(248,140,14)" fg:x="756" fg:w="2"/><text x="56.5419%" y="527.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (2 samples, 0.15%)</title><rect x="56.2919%" y="501" width="0.1489%" height="15" fill="rgb(253,22,42)" fg:x="756" fg:w="2"/><text x="56.5419%" y="511.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (2 samples, 0.15%)</title><rect x="56.2919%" y="485" width="0.1489%" height="15" fill="rgb(234,61,47)" fg:x="756" fg:w="2"/><text x="56.5419%" y="495.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (2 samples, 0.15%)</title><rect x="56.2919%" y="469" width="0.1489%" height="15" fill="rgb(208,226,15)" fg:x="756" fg:w="2"/><text x="56.5419%" y="479.50"></text></g><g><title>test3`llvm::PassInfo::createPass (2 samples, 0.15%)</title><rect x="56.2919%" y="453" width="0.1489%" height="15" fill="rgb(217,221,4)" fg:x="756" fg:w="2"/><text x="56.5419%" y="463.50"></text></g><g><title>test3`llvm::callDefaultCtor (2 samples, 0.15%)</title><rect x="56.2919%" y="437" width="0.1489%" height="15" fill="rgb(212,174,34)" fg:x="756" fg:w="2"/><text x="56.5419%" y="447.50"></text></g><g><title>test3`llvm::TargetLibraryInfoWrapperPass::TargetLibraryInfoWrapperPass (2 samples, 0.15%)</title><rect x="56.2919%" y="421" width="0.1489%" height="15" fill="rgb(253,83,4)" fg:x="756" fg:w="2"/><text x="56.5419%" y="431.50"></text></g><g><title>test3`llvm::TargetLibraryInfoImpl::TargetLibraryInfoImpl (1 samples, 0.07%)</title><rect x="56.3663%" y="405" width="0.0745%" height="15" fill="rgb(250,195,49)" fg:x="757" fg:w="1"/><text x="56.6163%" y="415.50"></text></g><g><title>test3`llvm::initializeTargetLibraryInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="56.3663%" y="389" width="0.0745%" height="15" fill="rgb(241,192,25)" fg:x="757" fg:w="1"/><text x="56.6163%" y="399.50"></text></g><g><title>test3`std::vector&lt;llvm::VecDesc,std::allocator&lt;llvm::VecDesc&gt; &gt;::insert (1 samples, 0.07%)</title><rect x="56.3663%" y="373" width="0.0745%" height="15" fill="rgb(208,124,10)" fg:x="757" fg:w="1"/><text x="56.6163%" y="383.50"></text></g><g><title>test3`std::vector&lt;llvm::VecDesc,std::allocator&lt;llvm::VecDesc&gt; &gt;::insert (1 samples, 0.07%)</title><rect x="56.3663%" y="357" width="0.0745%" height="15" fill="rgb(222,33,0)" fg:x="757" fg:w="1"/><text x="56.6163%" y="367.50"></text></g><g><title>test3`std::vector&lt;llvm::VecDesc,std::allocator&lt;llvm::VecDesc&gt; &gt;::insert (1 samples, 0.07%)</title><rect x="56.3663%" y="341" width="0.0745%" height="15" fill="rgb(234,209,28)" fg:x="757" fg:w="1"/><text x="56.6163%" y="351.50"></text></g><g><title>test3`std::_Debug_lt_pred&lt;bool (__cdecl*&amp; __ptr64) (1 samples, 0.07%)</title><rect x="56.3663%" y="325" width="0.0745%" height="15" fill="rgb(224,11,23)" fg:x="757" fg:w="1"/><text x="56.6163%" y="335.50"></text></g><g><title>test3`llvm::initializeTargetLibraryInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="56.3663%" y="309" width="0.0745%" height="15" fill="rgb(232,99,1)" fg:x="757" fg:w="1"/><text x="56.6163%" y="319.50"></text></g><g><title>test3`llvm::operator (1 samples, 0.07%)</title><rect x="56.3663%" y="293" width="0.0745%" height="15" fill="rgb(237,95,45)" fg:x="757" fg:w="1"/><text x="56.6163%" y="303.50"></text></g><g><title>test3`llvm::StringRef::compare (1 samples, 0.07%)</title><rect x="56.3663%" y="277" width="0.0745%" height="15" fill="rgb(208,109,11)" fg:x="757" fg:w="1"/><text x="56.6163%" y="287.50"></text></g><g><title>test3`llvm::StringRef::compareMemory (1 samples, 0.07%)</title><rect x="56.3663%" y="261" width="0.0745%" height="15" fill="rgb(216,190,48)" fg:x="757" fg:w="1"/><text x="56.6163%" y="271.50"></text></g><g><title>vcruntime140d`memcmp (1 samples, 0.07%)</title><rect x="56.3663%" y="245" width="0.0745%" height="15" fill="rgb(251,171,36)" fg:x="757" fg:w="1"/><text x="56.6163%" y="255.50"></text></g><g><title>test3`llvm::FunctionPass::assignPassManager (1 samples, 0.07%)</title><rect x="56.5153%" y="453" width="0.0745%" height="15" fill="rgb(230,62,22)" fg:x="759" fg:w="1"/><text x="56.7653%" y="463.50"></text></g><g><title>test3`llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="56.5153%" y="437" width="0.0745%" height="15" fill="rgb(225,114,35)" fg:x="759" fg:w="1"/><text x="56.7653%" y="447.50"></text></g><g><title>test3`llvm::PMTopLevelManager::setLastUser (1 samples, 0.07%)</title><rect x="56.5153%" y="421" width="0.0745%" height="15" fill="rgb(215,118,42)" fg:x="759" fg:w="1"/><text x="56.7653%" y="431.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Pass * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt; &gt; &gt;,llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Pass * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet (1 samples, 0.07%)</title><rect x="56.5153%" y="405" width="0.0745%" height="15" fill="rgb(243,119,21)" fg:x="759" fg:w="1"/><text x="56.7653%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Pass * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt; &gt; &gt;,llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Pass * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet (1 samples, 0.07%)</title><rect x="56.5153%" y="389" width="0.0745%" height="15" fill="rgb(252,177,53)" fg:x="759" fg:w="1"/><text x="56.7653%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Pass * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt; &gt; &gt;,llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Pass * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Pass * __ptr64,llvm::SmallPtrSet&lt;llvm::Pass * __ptr64,8&gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="56.5153%" y="373" width="0.0745%" height="15" fill="rgb(237,209,29)" fg:x="759" fg:w="1"/><text x="56.7653%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Function * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt; &gt; &gt;,llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Function * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="56.5153%" y="357" width="0.0745%" height="15" fill="rgb(212,65,23)" fg:x="759" fg:w="1"/><text x="56.7653%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Value * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt; &gt; &gt;,llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Value * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt; &gt; &gt;::getHashValue (1 samples, 0.07%)</title><rect x="56.5153%" y="341" width="0.0745%" height="15" fill="rgb(230,222,46)" fg:x="759" fg:w="1"/><text x="56.7653%" y="351.50"></text></g><g><title>test3`llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="56.5153%" y="325" width="0.0745%" height="15" fill="rgb(215,135,32)" fg:x="759" fg:w="1"/><text x="56.7653%" y="335.50"></text></g><g><title>test3`llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.07%)</title><rect x="56.5897%" y="453" width="0.0745%" height="15" fill="rgb(246,101,22)" fg:x="760" fg:w="1"/><text x="56.8397%" y="463.50"></text></g><g><title>test3`llvm::FoldingSetImpl&lt;llvm::FoldingSet (1 samples, 0.07%)</title><rect x="56.5897%" y="437" width="0.0745%" height="15" fill="rgb(206,107,13)" fg:x="760" fg:w="1"/><text x="56.8397%" y="447.50"></text></g><g><title>test3`llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="56.5897%" y="421" width="0.0745%" height="15" fill="rgb(250,100,44)" fg:x="760" fg:w="1"/><text x="56.8397%" y="431.50"></text></g><g><title>test3`llvm::FoldingSet (1 samples, 0.07%)</title><rect x="56.5897%" y="405" width="0.0745%" height="15" fill="rgb(231,147,38)" fg:x="760" fg:w="1"/><text x="56.8397%" y="415.50"></text></g><g><title>test3`llvm::DefaultFoldingSetTrait (1 samples, 0.07%)</title><rect x="56.5897%" y="389" width="0.0745%" height="15" fill="rgb(229,8,40)" fg:x="760" fg:w="1"/><text x="56.8397%" y="399.50"></text></g><g><title>test3`llvm::DefaultFoldingSetTrait (1 samples, 0.07%)</title><rect x="56.5897%" y="373" width="0.0745%" height="15" fill="rgb(221,135,30)" fg:x="760" fg:w="1"/><text x="56.8397%" y="383.50"></text></g><g><title>test3`llvm::PMTopLevelManager::AUFoldingSetNode::Profile (1 samples, 0.07%)</title><rect x="56.5897%" y="357" width="0.0745%" height="15" fill="rgb(249,193,18)" fg:x="760" fg:w="1"/><text x="56.8397%" y="367.50"></text></g><g><title>test3`llvm::PMTopLevelManager::AUFoldingSetNode::Profile (1 samples, 0.07%)</title><rect x="56.5897%" y="341" width="0.0745%" height="15" fill="rgb(209,133,39)" fg:x="760" fg:w="1"/><text x="56.8397%" y="351.50"></text></g><g><title>test3`&lt;lambda_7911c3bdb29d6119fb522453abe6d06d&gt;::operator (1 samples, 0.07%)</title><rect x="56.5897%" y="325" width="0.0745%" height="15" fill="rgb(232,100,14)" fg:x="760" fg:w="1"/><text x="56.8397%" y="335.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddInteger (1 samples, 0.07%)</title><rect x="56.5897%" y="309" width="0.0745%" height="15" fill="rgb(224,185,1)" fg:x="760" fg:w="1"/><text x="56.8397%" y="319.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddInteger (1 samples, 0.07%)</title><rect x="56.5897%" y="293" width="0.0745%" height="15" fill="rgb(223,139,8)" fg:x="760" fg:w="1"/><text x="56.8397%" y="303.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="56.5897%" y="277" width="0.0745%" height="15" fill="rgb(232,213,38)" fg:x="760" fg:w="1"/><text x="56.8397%" y="287.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="56.5897%" y="261" width="0.0745%" height="15" fill="rgb(207,94,22)" fg:x="760" fg:w="1"/><text x="56.8397%" y="271.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon&lt;unsigned int,void&gt;::reserveForParamAndGetAddressImpl&lt;llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="56.5897%" y="245" width="0.0745%" height="15" fill="rgb(219,183,54)" fg:x="760" fg:w="1"/><text x="56.8397%" y="255.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="56.5897%" y="229" width="0.0745%" height="15" fill="rgb(216,185,54)" fg:x="760" fg:w="1"/><text x="56.8397%" y="239.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="56.5897%" y="213" width="0.0745%" height="15" fill="rgb(254,217,39)" fg:x="760" fg:w="1"/><text x="56.8397%" y="223.50"></text></g><g><title>test3`llvm::SmallVectorBase (1 samples, 0.07%)</title><rect x="56.5897%" y="197" width="0.0745%" height="15" fill="rgb(240,178,23)" fg:x="760" fg:w="1"/><text x="56.8397%" y="207.50"></text></g><g><title>test3`llvm::safe_malloc (1 samples, 0.07%)</title><rect x="56.5897%" y="181" width="0.0745%" height="15" fill="rgb(218,11,47)" fg:x="760" fg:w="1"/><text x="56.8397%" y="191.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="56.5897%" y="165" width="0.0745%" height="15" fill="rgb(218,51,51)" fg:x="760" fg:w="1"/><text x="56.8397%" y="175.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="56.5897%" y="149" width="0.0745%" height="15" fill="rgb(238,126,27)" fg:x="760" fg:w="1"/><text x="56.8397%" y="159.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="56.5897%" y="133" width="0.0745%" height="15" fill="rgb(249,202,22)" fg:x="760" fg:w="1"/><text x="56.8397%" y="143.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="56.5897%" y="117" width="0.0745%" height="15" fill="rgb(254,195,49)" fg:x="760" fg:w="1"/><text x="56.8397%" y="127.50"></text></g><g><title>test3`LLVMInitializeX86Target (4 samples, 0.30%)</title><rect x="56.4408%" y="533" width="0.2978%" height="15" fill="rgb(208,123,14)" fg:x="758" fg:w="4"/><text x="56.6908%" y="543.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (4 samples, 0.30%)</title><rect x="56.4408%" y="517" width="0.2978%" height="15" fill="rgb(224,200,8)" fg:x="758" fg:w="4"/><text x="56.6908%" y="527.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (3 samples, 0.22%)</title><rect x="56.5153%" y="501" width="0.2234%" height="15" fill="rgb(217,61,36)" fg:x="759" fg:w="3"/><text x="56.7653%" y="511.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (3 samples, 0.22%)</title><rect x="56.5153%" y="485" width="0.2234%" height="15" fill="rgb(206,35,45)" fg:x="759" fg:w="3"/><text x="56.7653%" y="495.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (3 samples, 0.22%)</title><rect x="56.5153%" y="469" width="0.2234%" height="15" fill="rgb(217,65,33)" fg:x="759" fg:w="3"/><text x="56.7653%" y="479.50"></text></g><g><title>test3`llvm::PassInfo::createPass (1 samples, 0.07%)</title><rect x="56.6642%" y="453" width="0.0745%" height="15" fill="rgb(222,158,48)" fg:x="761" fg:w="1"/><text x="56.9142%" y="463.50"></text></g><g><title>test3`llvm::callDefaultCtor (1 samples, 0.07%)</title><rect x="56.6642%" y="437" width="0.0745%" height="15" fill="rgb(254,2,54)" fg:x="761" fg:w="1"/><text x="56.9142%" y="447.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="56.7386%" y="517" width="0.0745%" height="15" fill="rgb(250,143,38)" fg:x="762" fg:w="1"/><text x="56.9886%" y="527.50"></text></g><g><title>test3`llvm::Pass::createPass (1 samples, 0.07%)</title><rect x="56.7386%" y="501" width="0.0745%" height="15" fill="rgb(248,25,0)" fg:x="762" fg:w="1"/><text x="56.9886%" y="511.50"></text></g><g><title>test3`llvm::PassInfo::createPass (1 samples, 0.07%)</title><rect x="56.7386%" y="485" width="0.0745%" height="15" fill="rgb(206,152,27)" fg:x="762" fg:w="1"/><text x="56.9886%" y="495.50"></text></g><g><title>test3`llvm::AnalysisUsage::addUsedIfAvailable (1 samples, 0.07%)</title><rect x="56.7386%" y="469" width="0.0745%" height="15" fill="rgb(240,77,30)" fg:x="762" fg:w="1"/><text x="56.9886%" y="479.50"></text></g><g><title>test3`llvm::initializeTwoAddressInstructionPassPass (1 samples, 0.07%)</title><rect x="56.7386%" y="453" width="0.0745%" height="15" fill="rgb(231,5,3)" fg:x="762" fg:w="1"/><text x="56.9886%" y="463.50"></text></g><g><title>test3`llvm::TargetPassConfig::addFastRegAlloc (2 samples, 0.15%)</title><rect x="56.7386%" y="533" width="0.1489%" height="15" fill="rgb(207,226,32)" fg:x="762" fg:w="2"/><text x="56.9886%" y="543.50"></text></g><g><title>test3`llvm::TargetPassConfig::addRegAssignAndRewriteFast (1 samples, 0.07%)</title><rect x="56.8131%" y="517" width="0.0745%" height="15" fill="rgb(222,207,47)" fg:x="763" fg:w="1"/><text x="57.0631%" y="527.50"></text></g><g><title>test3`LLVMInitializeX86Target (1 samples, 0.07%)</title><rect x="56.8131%" y="501" width="0.0745%" height="15" fill="rgb(229,115,45)" fg:x="763" fg:w="1"/><text x="57.0631%" y="511.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (1 samples, 0.07%)</title><rect x="56.8131%" y="485" width="0.0745%" height="15" fill="rgb(224,191,6)" fg:x="763" fg:w="1"/><text x="57.0631%" y="495.50"></text></g><g><title>test3`llvm::FunctionPass::assignPassManager (1 samples, 0.07%)</title><rect x="56.8876%" y="453" width="0.0745%" height="15" fill="rgb(230,227,24)" fg:x="764" fg:w="1"/><text x="57.1376%" y="463.50"></text></g><g><title>test3`llvm::PMDataManager::add (1 samples, 0.07%)</title><rect x="56.8876%" y="437" width="0.0745%" height="15" fill="rgb(228,80,19)" fg:x="764" fg:w="1"/><text x="57.1376%" y="447.50"></text></g><g><title>test3`llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.07%)</title><rect x="56.8876%" y="421" width="0.0745%" height="15" fill="rgb(247,229,0)" fg:x="764" fg:w="1"/><text x="57.1376%" y="431.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="56.8876%" y="405" width="0.0745%" height="15" fill="rgb(237,194,15)" fg:x="764" fg:w="1"/><text x="57.1376%" y="415.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector (1 samples, 0.07%)</title><rect x="56.8876%" y="389" width="0.0745%" height="15" fill="rgb(219,203,20)" fg:x="764" fg:w="1"/><text x="57.1376%" y="399.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector (1 samples, 0.07%)</title><rect x="56.8876%" y="373" width="0.0745%" height="15" fill="rgb(234,128,8)" fg:x="764" fg:w="1"/><text x="57.1376%" y="383.50"></text></g><g><title>test3`llvm::ErrorOr&lt;llvm::StringMap&lt;unsigned __int64,llvm::MallocAllocator&gt; &gt;::compareThisIfSameType&lt;llvm::ErrorOr&lt;llvm::StringMap (1 samples, 0.07%)</title><rect x="56.8876%" y="357" width="0.0745%" height="15" fill="rgb(248,202,8)" fg:x="764" fg:w="1"/><text x="57.1376%" y="367.50"></text></g><g><title>test3`LiveDebugValues::getAnalysisUsage (1 samples, 0.07%)</title><rect x="56.9620%" y="437" width="0.0745%" height="15" fill="rgb(206,104,37)" fg:x="765" fg:w="1"/><text x="57.2120%" y="447.50"></text></g><g><title>test3`llvm::AnalysisUsage::setPreservesCFG (1 samples, 0.07%)</title><rect x="56.9620%" y="421" width="0.0745%" height="15" fill="rgb(223,8,27)" fg:x="765" fg:w="1"/><text x="57.2120%" y="431.50"></text></g><g><title>test3`llvm::PassRegistrationListener::enumeratePasses (1 samples, 0.07%)</title><rect x="56.9620%" y="405" width="0.0745%" height="15" fill="rgb(216,217,28)" fg:x="765" fg:w="1"/><text x="57.2120%" y="415.50"></text></g><g><title>test3`llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="56.9620%" y="389" width="0.0745%" height="15" fill="rgb(249,199,1)" fg:x="765" fg:w="1"/><text x="57.2120%" y="399.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector (1 samples, 0.07%)</title><rect x="56.9620%" y="373" width="0.0745%" height="15" fill="rgb(240,85,17)" fg:x="765" fg:w="1"/><text x="57.2120%" y="383.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (3 samples, 0.22%)</title><rect x="56.8876%" y="517" width="0.2234%" height="15" fill="rgb(206,108,45)" fg:x="764" fg:w="3"/><text x="57.1376%" y="527.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (3 samples, 0.22%)</title><rect x="56.8876%" y="501" width="0.2234%" height="15" fill="rgb(245,210,41)" fg:x="764" fg:w="3"/><text x="57.1376%" y="511.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (3 samples, 0.22%)</title><rect x="56.8876%" y="485" width="0.2234%" height="15" fill="rgb(206,13,37)" fg:x="764" fg:w="3"/><text x="57.1376%" y="495.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (3 samples, 0.22%)</title><rect x="56.8876%" y="469" width="0.2234%" height="15" fill="rgb(250,61,18)" fg:x="764" fg:w="3"/><text x="57.1376%" y="479.50"></text></g><g><title>test3`llvm::PMTopLevelManager::findAnalysisUsage (2 samples, 0.15%)</title><rect x="56.9620%" y="453" width="0.1489%" height="15" fill="rgb(235,172,48)" fg:x="765" fg:w="2"/><text x="57.2120%" y="463.50"></text></g><g><title>test3`llvm::initializeRemoveRedundantDebugValuesPass (1 samples, 0.07%)</title><rect x="57.0365%" y="437" width="0.0745%" height="15" fill="rgb(249,201,17)" fg:x="766" fg:w="1"/><text x="57.2865%" y="447.50"></text></g><g><title>test3`llvm::AnalysisUsage::setPreservesCFG (1 samples, 0.07%)</title><rect x="57.0365%" y="421" width="0.0745%" height="15" fill="rgb(219,208,6)" fg:x="766" fg:w="1"/><text x="57.2865%" y="431.50"></text></g><g><title>test3`llvm::PassRegistrationListener::enumeratePasses (1 samples, 0.07%)</title><rect x="57.0365%" y="405" width="0.0745%" height="15" fill="rgb(248,31,23)" fg:x="766" fg:w="1"/><text x="57.2865%" y="415.50"></text></g><g><title>test3`llvm::PassRegistry::enumerateWith (1 samples, 0.07%)</title><rect x="57.0365%" y="389" width="0.0745%" height="15" fill="rgb(245,15,42)" fg:x="766" fg:w="1"/><text x="57.2865%" y="399.50"></text></g><g><title>test3`llvm::TargetPassConfig::addMachinePasses (10 samples, 0.74%)</title><rect x="56.4408%" y="549" width="0.7446%" height="15" fill="rgb(222,217,39)" fg:x="758" fg:w="10"/><text x="56.6908%" y="559.50"></text></g><g><title>test3`llvm::TargetPassConfig::addPass (4 samples, 0.30%)</title><rect x="56.8876%" y="533" width="0.2978%" height="15" fill="rgb(210,219,27)" fg:x="764" fg:w="4"/><text x="57.1376%" y="543.50"></text></g><g><title>test3`llvm::legacy::PassManager::add (1 samples, 0.07%)</title><rect x="57.1109%" y="517" width="0.0745%" height="15" fill="rgb(252,166,36)" fg:x="767" fg:w="1"/><text x="57.3609%" y="527.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (1 samples, 0.07%)</title><rect x="57.1109%" y="501" width="0.0745%" height="15" fill="rgb(245,132,34)" fg:x="767" fg:w="1"/><text x="57.3609%" y="511.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="57.1109%" y="485" width="0.0745%" height="15" fill="rgb(236,54,3)" fg:x="767" fg:w="1"/><text x="57.3609%" y="495.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="57.1109%" y="469" width="0.0745%" height="15" fill="rgb(241,173,43)" fg:x="767" fg:w="1"/><text x="57.3609%" y="479.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="57.1109%" y="453" width="0.0745%" height="15" fill="rgb(215,190,9)" fg:x="767" fg:w="1"/><text x="57.3609%" y="463.50"></text></g><g><title>test3`llvm::PassInfo::createPass (1 samples, 0.07%)</title><rect x="57.1109%" y="437" width="0.0745%" height="15" fill="rgb(242,101,16)" fg:x="767" fg:w="1"/><text x="57.3609%" y="447.50"></text></g><g><title>test3`llvm::callDefaultCtor (1 samples, 0.07%)</title><rect x="57.1109%" y="421" width="0.0745%" height="15" fill="rgb(223,190,21)" fg:x="767" fg:w="1"/><text x="57.3609%" y="431.50"></text></g><g><title>test3`llvm::MachineBranchProbabilityInfo::MachineBranchProbabilityInfo (1 samples, 0.07%)</title><rect x="57.1109%" y="405" width="0.0745%" height="15" fill="rgb(215,228,25)" fg:x="767" fg:w="1"/><text x="57.3609%" y="415.50"></text></g><g><title>test3`llvm::initializeMachineBranchProbabilityInfoPass (1 samples, 0.07%)</title><rect x="57.1109%" y="389" width="0.0745%" height="15" fill="rgb(225,36,22)" fg:x="767" fg:w="1"/><text x="57.3609%" y="399.50"></text></g><g><title>test3`std::ref (1 samples, 0.07%)</title><rect x="57.1109%" y="373" width="0.0745%" height="15" fill="rgb(251,106,46)" fg:x="767" fg:w="1"/><text x="57.3609%" y="383.50"></text></g><g><title>test3`llvm::initializeCFGuardLongjmpPass (1 samples, 0.07%)</title><rect x="57.1854%" y="485" width="0.0745%" height="15" fill="rgb(208,90,1)" fg:x="768" fg:w="1"/><text x="57.4354%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.1854%" y="469" width="0.0745%" height="15" fill="rgb(243,10,4)" fg:x="768" fg:w="1"/><text x="57.4354%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.1854%" y="453" width="0.0745%" height="15" fill="rgb(212,137,27)" fg:x="768" fg:w="1"/><text x="57.4354%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.1854%" y="437" width="0.0745%" height="15" fill="rgb(231,220,49)" fg:x="768" fg:w="1"/><text x="57.4354%" y="447.50"></text></g><g><title>test3`llvm::initializeCFGuardLongjmpPass (1 samples, 0.07%)</title><rect x="57.1854%" y="421" width="0.0745%" height="15" fill="rgb(237,96,20)" fg:x="768" fg:w="1"/><text x="57.4354%" y="431.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="57.1854%" y="405" width="0.0745%" height="15" fill="rgb(239,229,30)" fg:x="768" fg:w="1"/><text x="57.4354%" y="415.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="57.1854%" y="389" width="0.0745%" height="15" fill="rgb(219,65,33)" fg:x="768" fg:w="1"/><text x="57.4354%" y="399.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="57.1854%" y="373" width="0.0745%" height="15" fill="rgb(243,134,7)" fg:x="768" fg:w="1"/><text x="57.4354%" y="383.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="57.1854%" y="357" width="0.0745%" height="15" fill="rgb(216,177,54)" fg:x="768" fg:w="1"/><text x="57.4354%" y="367.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="57.1854%" y="341" width="0.0745%" height="15" fill="rgb(211,160,20)" fg:x="768" fg:w="1"/><text x="57.4354%" y="351.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="57.1854%" y="325" width="0.0745%" height="15" fill="rgb(239,85,39)" fg:x="768" fg:w="1"/><text x="57.4354%" y="335.50"></text></g><g><title>test3`llvm::initializeEarlyIfConverterPass (1 samples, 0.07%)</title><rect x="57.2599%" y="485" width="0.0745%" height="15" fill="rgb(232,125,22)" fg:x="769" fg:w="1"/><text x="57.5099%" y="495.50"></text></g><g><title>test3`llvm::initializeExpandPostRAPass (1 samples, 0.07%)</title><rect x="57.3343%" y="485" width="0.0745%" height="15" fill="rgb(244,57,34)" fg:x="770" fg:w="1"/><text x="57.5843%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.3343%" y="469" width="0.0745%" height="15" fill="rgb(214,203,32)" fg:x="770" fg:w="1"/><text x="57.5843%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.3343%" y="453" width="0.0745%" height="15" fill="rgb(207,58,43)" fg:x="770" fg:w="1"/><text x="57.5843%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.3343%" y="437" width="0.0745%" height="15" fill="rgb(215,193,15)" fg:x="770" fg:w="1"/><text x="57.5843%" y="447.50"></text></g><g><title>test3`llvm::initializeExpandPostRAPass (1 samples, 0.07%)</title><rect x="57.3343%" y="421" width="0.0745%" height="15" fill="rgb(232,15,44)" fg:x="770" fg:w="1"/><text x="57.5843%" y="431.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="57.3343%" y="405" width="0.0745%" height="15" fill="rgb(212,3,48)" fg:x="770" fg:w="1"/><text x="57.5843%" y="415.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="57.3343%" y="389" width="0.0745%" height="15" fill="rgb(218,128,7)" fg:x="770" fg:w="1"/><text x="57.5843%" y="399.50"></text></g><g><title>test3`llvm::initializeHardwareLoopsPass (1 samples, 0.07%)</title><rect x="57.4088%" y="485" width="0.0745%" height="15" fill="rgb(226,216,39)" fg:x="771" fg:w="1"/><text x="57.6588%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4088%" y="469" width="0.0745%" height="15" fill="rgb(243,47,51)" fg:x="771" fg:w="1"/><text x="57.6588%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4088%" y="453" width="0.0745%" height="15" fill="rgb(241,183,40)" fg:x="771" fg:w="1"/><text x="57.6588%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4088%" y="437" width="0.0745%" height="15" fill="rgb(231,217,32)" fg:x="771" fg:w="1"/><text x="57.6588%" y="447.50"></text></g><g><title>test3`llvm::initializeHardwareLoopsPass (1 samples, 0.07%)</title><rect x="57.4088%" y="421" width="0.0745%" height="15" fill="rgb(229,61,38)" fg:x="771" fg:w="1"/><text x="57.6588%" y="431.50"></text></g><g><title>test3`llvm::initializeOptimizationRemarkEmitterWrapperPassPass (1 samples, 0.07%)</title><rect x="57.4088%" y="405" width="0.0745%" height="15" fill="rgb(225,210,5)" fg:x="771" fg:w="1"/><text x="57.6588%" y="415.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4088%" y="389" width="0.0745%" height="15" fill="rgb(231,79,45)" fg:x="771" fg:w="1"/><text x="57.6588%" y="399.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4088%" y="373" width="0.0745%" height="15" fill="rgb(224,100,7)" fg:x="771" fg:w="1"/><text x="57.6588%" y="383.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4088%" y="357" width="0.0745%" height="15" fill="rgb(241,198,18)" fg:x="771" fg:w="1"/><text x="57.6588%" y="367.50"></text></g><g><title>test3`llvm::initializeOptimizationRemarkEmitterWrapperPassPass (1 samples, 0.07%)</title><rect x="57.4088%" y="341" width="0.0745%" height="15" fill="rgb(252,97,53)" fg:x="771" fg:w="1"/><text x="57.6588%" y="351.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="57.4088%" y="325" width="0.0745%" height="15" fill="rgb(220,88,7)" fg:x="771" fg:w="1"/><text x="57.6588%" y="335.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="57.4088%" y="309" width="0.0745%" height="15" fill="rgb(213,176,14)" fg:x="771" fg:w="1"/><text x="57.6588%" y="319.50"></text></g><g><title>test3`llvm::initializeLiveDebugVariablesPass (1 samples, 0.07%)</title><rect x="57.4832%" y="485" width="0.0745%" height="15" fill="rgb(246,73,7)" fg:x="772" fg:w="1"/><text x="57.7332%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4832%" y="469" width="0.0745%" height="15" fill="rgb(245,64,36)" fg:x="772" fg:w="1"/><text x="57.7332%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4832%" y="453" width="0.0745%" height="15" fill="rgb(245,80,10)" fg:x="772" fg:w="1"/><text x="57.7332%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.4832%" y="437" width="0.0745%" height="15" fill="rgb(232,107,50)" fg:x="772" fg:w="1"/><text x="57.7332%" y="447.50"></text></g><g><title>test3`llvm::initializeLiveDebugVariablesPass (1 samples, 0.07%)</title><rect x="57.4832%" y="421" width="0.0745%" height="15" fill="rgb(253,3,0)" fg:x="772" fg:w="1"/><text x="57.7332%" y="431.50"></text></g><g><title>test3`llvm::initializeLiveIntervalsPass (1 samples, 0.07%)</title><rect x="57.4832%" y="405" width="0.0745%" height="15" fill="rgb(212,99,53)" fg:x="772" fg:w="1"/><text x="57.7332%" y="415.50"></text></g><g><title>test3`llvm::initializeLiveVariablesPass (1 samples, 0.07%)</title><rect x="57.5577%" y="485" width="0.0745%" height="15" fill="rgb(249,111,54)" fg:x="773" fg:w="1"/><text x="57.8077%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.5577%" y="469" width="0.0745%" height="15" fill="rgb(249,55,30)" fg:x="773" fg:w="1"/><text x="57.8077%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.5577%" y="453" width="0.0745%" height="15" fill="rgb(237,47,42)" fg:x="773" fg:w="1"/><text x="57.8077%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.5577%" y="437" width="0.0745%" height="15" fill="rgb(211,20,18)" fg:x="773" fg:w="1"/><text x="57.8077%" y="447.50"></text></g><g><title>test3`llvm::LiveVariables::addNewBlock (1 samples, 0.07%)</title><rect x="57.5577%" y="421" width="0.0745%" height="15" fill="rgb(231,203,46)" fg:x="773" fg:w="1"/><text x="57.8077%" y="431.50"></text></g><g><title>test3`llvm::initializeUnreachableMachineBlockElimPass (1 samples, 0.07%)</title><rect x="57.5577%" y="405" width="0.0745%" height="15" fill="rgb(237,142,3)" fg:x="773" fg:w="1"/><text x="57.8077%" y="415.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.5577%" y="389" width="0.0745%" height="15" fill="rgb(241,107,1)" fg:x="773" fg:w="1"/><text x="57.8077%" y="399.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.5577%" y="373" width="0.0745%" height="15" fill="rgb(229,83,13)" fg:x="773" fg:w="1"/><text x="57.8077%" y="383.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.5577%" y="357" width="0.0745%" height="15" fill="rgb(241,91,40)" fg:x="773" fg:w="1"/><text x="57.8077%" y="367.50"></text></g><g><title>test3`llvm::initializeUnreachableMachineBlockElimPass (1 samples, 0.07%)</title><rect x="57.5577%" y="341" width="0.0745%" height="15" fill="rgb(225,3,45)" fg:x="773" fg:w="1"/><text x="57.8077%" y="351.50"></text></g><g><title>test3`llvm::initializeMachineBlockPlacementStatsPass (1 samples, 0.07%)</title><rect x="57.6322%" y="485" width="0.0745%" height="15" fill="rgb(244,223,14)" fg:x="774" fg:w="1"/><text x="57.8822%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.6322%" y="469" width="0.0745%" height="15" fill="rgb(224,124,37)" fg:x="774" fg:w="1"/><text x="57.8822%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.6322%" y="453" width="0.0745%" height="15" fill="rgb(251,171,30)" fg:x="774" fg:w="1"/><text x="57.8822%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.6322%" y="437" width="0.0745%" height="15" fill="rgb(236,46,54)" fg:x="774" fg:w="1"/><text x="57.8822%" y="447.50"></text></g><g><title>test3`llvm::initializeMachineBlockPlacementStatsPass (1 samples, 0.07%)</title><rect x="57.6322%" y="421" width="0.0745%" height="15" fill="rgb(245,213,5)" fg:x="774" fg:w="1"/><text x="57.8822%" y="431.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="57.6322%" y="405" width="0.0745%" height="15" fill="rgb(230,144,27)" fg:x="774" fg:w="1"/><text x="57.8822%" y="415.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="57.6322%" y="389" width="0.0745%" height="15" fill="rgb(220,86,6)" fg:x="774" fg:w="1"/><text x="57.8822%" y="399.50"></text></g><g><title>test3`llvm::initializeMachinePipelinerPass (1 samples, 0.07%)</title><rect x="57.7066%" y="485" width="0.0745%" height="15" fill="rgb(240,20,13)" fg:x="775" fg:w="1"/><text x="57.9566%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.7066%" y="469" width="0.0745%" height="15" fill="rgb(217,89,34)" fg:x="775" fg:w="1"/><text x="57.9566%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.7066%" y="453" width="0.0745%" height="15" fill="rgb(229,13,5)" fg:x="775" fg:w="1"/><text x="57.9566%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.7066%" y="437" width="0.0745%" height="15" fill="rgb(244,67,35)" fg:x="775" fg:w="1"/><text x="57.9566%" y="447.50"></text></g><g><title>test3`llvm::SMSchedule::dump (1 samples, 0.07%)</title><rect x="57.7066%" y="421" width="0.0745%" height="15" fill="rgb(221,40,2)" fg:x="775" fg:w="1"/><text x="57.9566%" y="431.50"></text></g><g><title>test3`llvm::initializePHIEliminationPass (1 samples, 0.07%)</title><rect x="57.7811%" y="485" width="0.0745%" height="15" fill="rgb(237,157,21)" fg:x="776" fg:w="1"/><text x="58.0311%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.7811%" y="469" width="0.0745%" height="15" fill="rgb(222,94,11)" fg:x="776" fg:w="1"/><text x="58.0311%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.7811%" y="453" width="0.0745%" height="15" fill="rgb(249,113,6)" fg:x="776" fg:w="1"/><text x="58.0311%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.7811%" y="437" width="0.0745%" height="15" fill="rgb(238,137,36)" fg:x="776" fg:w="1"/><text x="58.0311%" y="447.50"></text></g><g><title>test3`llvm::initializePHIEliminationPass (1 samples, 0.07%)</title><rect x="57.7811%" y="421" width="0.0745%" height="15" fill="rgb(210,102,26)" fg:x="776" fg:w="1"/><text x="58.0311%" y="431.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="57.7811%" y="405" width="0.0745%" height="15" fill="rgb(218,30,30)" fg:x="776" fg:w="1"/><text x="58.0311%" y="415.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="57.7811%" y="389" width="0.0745%" height="15" fill="rgb(214,67,26)" fg:x="776" fg:w="1"/><text x="58.0311%" y="399.50"></text></g><g><title>test3`llvm::initializeRABasicPass (1 samples, 0.07%)</title><rect x="57.8555%" y="485" width="0.0745%" height="15" fill="rgb(251,9,53)" fg:x="777" fg:w="1"/><text x="58.1055%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.8555%" y="469" width="0.0745%" height="15" fill="rgb(228,204,25)" fg:x="777" fg:w="1"/><text x="58.1055%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.8555%" y="453" width="0.0745%" height="15" fill="rgb(207,153,8)" fg:x="777" fg:w="1"/><text x="58.1055%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="57.8555%" y="437" width="0.0745%" height="15" fill="rgb(242,9,16)" fg:x="777" fg:w="1"/><text x="58.1055%" y="447.50"></text></g><g><title>test3`llvm::initializeRABasicPass (1 samples, 0.07%)</title><rect x="57.8555%" y="421" width="0.0745%" height="15" fill="rgb(217,211,10)" fg:x="777" fg:w="1"/><text x="58.1055%" y="431.50"></text></g><g><title>test3`llvm::initializeShadowStackGCLoweringPass (1 samples, 0.07%)</title><rect x="57.9300%" y="485" width="0.0745%" height="15" fill="rgb(219,228,52)" fg:x="778" fg:w="1"/><text x="58.1800%" y="495.50"></text></g><g><title>test3`llvm::X86TargetMachine::createPassConfig (12 samples, 0.89%)</title><rect x="57.1854%" y="549" width="0.8935%" height="15" fill="rgb(231,92,29)" fg:x="768" fg:w="12"/><text x="57.4354%" y="559.50"></text></g><g><title>test3`LLVMInitializeX86Target (12 samples, 0.89%)</title><rect x="57.1854%" y="533" width="0.8935%" height="15" fill="rgb(232,8,23)" fg:x="768" fg:w="12"/><text x="57.4354%" y="543.50"></text></g><g><title>test3`llvm::TargetPassConfig::TargetPassConfig (12 samples, 0.89%)</title><rect x="57.1854%" y="517" width="0.8935%" height="15" fill="rgb(216,211,34)" fg:x="768" fg:w="12"/><text x="57.4354%" y="527.50"></text></g><g><title>test3`llvm::initializeCodeGen (12 samples, 0.89%)</title><rect x="57.1854%" y="501" width="0.8935%" height="15" fill="rgb(236,151,0)" fg:x="768" fg:w="12"/><text x="57.4354%" y="511.50"></text></g><g><title>test3`llvm::initializeWasmEHPreparePass (1 samples, 0.07%)</title><rect x="58.0045%" y="485" width="0.0745%" height="15" fill="rgb(209,168,3)" fg:x="779" fg:w="1"/><text x="58.2545%" y="495.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="58.0045%" y="469" width="0.0745%" height="15" fill="rgb(208,129,28)" fg:x="779" fg:w="1"/><text x="58.2545%" y="479.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="58.0045%" y="453" width="0.0745%" height="15" fill="rgb(229,78,22)" fg:x="779" fg:w="1"/><text x="58.2545%" y="463.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="58.0045%" y="437" width="0.0745%" height="15" fill="rgb(228,187,13)" fg:x="779" fg:w="1"/><text x="58.2545%" y="447.50"></text></g><g><title>test3`llvm::initializeWasmEHPreparePass (1 samples, 0.07%)</title><rect x="58.0045%" y="421" width="0.0745%" height="15" fill="rgb(240,119,24)" fg:x="779" fg:w="1"/><text x="58.2545%" y="431.50"></text></g><g><title>test3`llvm::LLVMTargetMachine::createMCStreamer (34 samples, 2.53%)</title><rect x="55.6217%" y="565" width="2.5316%" height="15" fill="rgb(209,194,42)" fg:x="747" fg:w="34"/><text x="55.8717%" y="575.50">te..</text></g><g><title>test3`llvm::legacy::PassManager::add (1 samples, 0.07%)</title><rect x="58.0789%" y="549" width="0.0745%" height="15" fill="rgb(247,200,46)" fg:x="780" fg:w="1"/><text x="58.3289%" y="559.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (1 samples, 0.07%)</title><rect x="58.0789%" y="533" width="0.0745%" height="15" fill="rgb(218,76,16)" fg:x="780" fg:w="1"/><text x="58.3289%" y="543.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="58.0789%" y="517" width="0.0745%" height="15" fill="rgb(225,21,48)" fg:x="780" fg:w="1"/><text x="58.3289%" y="527.50"></text></g><g><title>test3`llvm::PMTopLevelManager::addImmutablePass (1 samples, 0.07%)</title><rect x="58.0789%" y="501" width="0.0745%" height="15" fill="rgb(239,223,50)" fg:x="780" fg:w="1"/><text x="58.3289%" y="511.50"></text></g><g><title>test3`llvm::ImmutablePass::initializePass (1 samples, 0.07%)</title><rect x="58.0789%" y="485" width="0.0745%" height="15" fill="rgb(244,45,21)" fg:x="780" fg:w="1"/><text x="58.3289%" y="495.50"></text></g><g><title>test3`llvm::MCAsmBackend::createObjectWriter (1 samples, 0.07%)</title><rect x="58.1534%" y="565" width="0.0745%" height="15" fill="rgb(232,33,43)" fg:x="781" fg:w="1"/><text x="58.4034%" y="575.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="58.1534%" y="549" width="0.0745%" height="15" fill="rgb(209,8,3)" fg:x="781" fg:w="1"/><text x="58.4034%" y="559.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="58.1534%" y="533" width="0.0745%" height="15" fill="rgb(214,25,53)" fg:x="781" fg:w="1"/><text x="58.4034%" y="543.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="58.1534%" y="517" width="0.0745%" height="15" fill="rgb(254,186,54)" fg:x="781" fg:w="1"/><text x="58.4034%" y="527.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="58.1534%" y="501" width="0.0745%" height="15" fill="rgb(208,174,49)" fg:x="781" fg:w="1"/><text x="58.4034%" y="511.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="58.1534%" y="485" width="0.0745%" height="15" fill="rgb(233,191,51)" fg:x="781" fg:w="1"/><text x="58.4034%" y="495.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="58.1534%" y="469" width="0.0745%" height="15" fill="rgb(222,134,10)" fg:x="781" fg:w="1"/><text x="58.4034%" y="479.50"></text></g><g><title>test3`llvm::MachineModuleInfoWrapperPass::MachineModuleInfoWrapperPass (1 samples, 0.07%)</title><rect x="58.2278%" y="565" width="0.0745%" height="15" fill="rgb(230,226,20)" fg:x="782" fg:w="1"/><text x="58.4778%" y="575.50"></text></g><g><title>test3`llvm::MachineModuleInfo::MachineModuleInfo (1 samples, 0.07%)</title><rect x="58.2278%" y="549" width="0.0745%" height="15" fill="rgb(251,111,25)" fg:x="782" fg:w="1"/><text x="58.4778%" y="559.50"></text></g><g><title>test3`llvm::MCContext::MCContext (1 samples, 0.07%)</title><rect x="58.2278%" y="533" width="0.0745%" height="15" fill="rgb(224,40,46)" fg:x="782" fg:w="1"/><text x="58.4778%" y="543.50"></text></g><g><title>test3`std::map&lt;unsigned int,llvm::MCDwarfLineTable,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,llvm::MCDwarfLineTable&gt; &gt; &gt;::map&lt;unsigned int,llvm::MCDwarfLineTable,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="58.2278%" y="517" width="0.0745%" height="15" fill="rgb(236,108,47)" fg:x="782" fg:w="1"/><text x="58.4778%" y="527.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,llvm::MCDwarfLineTable,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,llvm::MCDwarfLineTable&gt; &gt;,0&gt; &gt;::_Tree&lt;std::_Tmap_traits&lt;unsigned int,llvm::MCDwarfLineTable,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="58.2278%" y="501" width="0.0745%" height="15" fill="rgb(234,93,0)" fg:x="782" fg:w="1"/><text x="58.4778%" y="511.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,llvm::MCDwarfLineTable,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="58.2278%" y="485" width="0.0745%" height="15" fill="rgb(224,213,32)" fg:x="782" fg:w="1"/><text x="58.4778%" y="495.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,llvm::MCDwarfLineTable&gt;,void * __ptr64&gt;::_Buyheadnode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair (1 samples, 0.07%)</title><rect x="58.2278%" y="469" width="0.0745%" height="15" fill="rgb(251,11,48)" fg:x="782" fg:w="1"/><text x="58.4778%" y="479.50"></text></g><g><title>test3`std::allocator&lt;std::_Tree_node&lt;std::pair (1 samples, 0.07%)</title><rect x="58.2278%" y="453" width="0.0745%" height="15" fill="rgb(236,173,5)" fg:x="782" fg:w="1"/><text x="58.4778%" y="463.50"></text></g><g><title>test3`std::_Get_size_of_n (1 samples, 0.07%)</title><rect x="58.2278%" y="437" width="0.0745%" height="15" fill="rgb(230,95,12)" fg:x="782" fg:w="1"/><text x="58.4778%" y="447.50"></text></g><g><title>test3`llvm::Target::createMCCodeEmitter (1 samples, 0.07%)</title><rect x="58.3023%" y="565" width="0.0745%" height="15" fill="rgb(232,209,1)" fg:x="783" fg:w="1"/><text x="58.5523%" y="575.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (1 samples, 0.07%)</title><rect x="58.3023%" y="549" width="0.0745%" height="15" fill="rgb(232,6,1)" fg:x="783" fg:w="1"/><text x="58.5523%" y="559.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (1 samples, 0.07%)</title><rect x="58.3023%" y="533" width="0.0745%" height="15" fill="rgb(210,224,50)" fg:x="783" fg:w="1"/><text x="58.5523%" y="543.50"></text></g><g><title>test3`llvm::MCCodeEmitter::MCCodeEmitter (1 samples, 0.07%)</title><rect x="58.3023%" y="517" width="0.0745%" height="15" fill="rgb(228,127,35)" fg:x="783" fg:w="1"/><text x="58.5523%" y="527.50"></text></g><g><title>test3`llvm::Target::createMCObjectStreamer (1 samples, 0.07%)</title><rect x="58.3768%" y="565" width="0.0745%" height="15" fill="rgb(245,102,45)" fg:x="784" fg:w="1"/><text x="58.6268%" y="575.50"></text></g><g><title>test3`llvm::createX86WinCOFFStreamer (1 samples, 0.07%)</title><rect x="58.3768%" y="549" width="0.0745%" height="15" fill="rgb(214,1,49)" fg:x="784" fg:w="1"/><text x="58.6268%" y="559.50"></text></g><g><title>test3`llvm::createX86WinCOFFStreamer (1 samples, 0.07%)</title><rect x="58.3768%" y="533" width="0.0745%" height="15" fill="rgb(226,163,40)" fg:x="784" fg:w="1"/><text x="58.6268%" y="543.50"></text></g><g><title>test3`llvm::MCWinCOFFStreamer::MCWinCOFFStreamer (1 samples, 0.07%)</title><rect x="58.3768%" y="517" width="0.0745%" height="15" fill="rgb(239,212,28)" fg:x="784" fg:w="1"/><text x="58.6268%" y="527.50"></text></g><g><title>test3`llvm::MCObjectStreamer::MCObjectStreamer (1 samples, 0.07%)</title><rect x="58.3768%" y="501" width="0.0745%" height="15" fill="rgb(220,20,13)" fg:x="784" fg:w="1"/><text x="58.6268%" y="511.50"></text></g><g><title>test3`llvm::MCStreamer::setAllowAutoPadding (1 samples, 0.07%)</title><rect x="58.3768%" y="485" width="0.0745%" height="15" fill="rgb(210,164,35)" fg:x="784" fg:w="1"/><text x="58.6268%" y="495.50"></text></g><g><title>test3`llvm::LLVMTargetMachine::addPassesToEmitMC (39 samples, 2.90%)</title><rect x="55.6217%" y="581" width="2.9039%" height="15" fill="rgb(248,109,41)" fg:x="747" fg:w="39"/><text x="55.8717%" y="591.50">te..</text></g><g><title>test3`llvm::legacy::PassManager::add (1 samples, 0.07%)</title><rect x="58.4512%" y="565" width="0.0745%" height="15" fill="rgb(238,23,50)" fg:x="785" fg:w="1"/><text x="58.7012%" y="575.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::add (1 samples, 0.07%)</title><rect x="58.4512%" y="549" width="0.0745%" height="15" fill="rgb(211,48,49)" fg:x="785" fg:w="1"/><text x="58.7012%" y="559.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="58.4512%" y="533" width="0.0745%" height="15" fill="rgb(223,36,21)" fg:x="785" fg:w="1"/><text x="58.7012%" y="543.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="58.4512%" y="517" width="0.0745%" height="15" fill="rgb(207,123,46)" fg:x="785" fg:w="1"/><text x="58.7012%" y="527.50"></text></g><g><title>test3`llvm::PMTopLevelManager::schedulePass (1 samples, 0.07%)</title><rect x="58.4512%" y="501" width="0.0745%" height="15" fill="rgb(240,218,32)" fg:x="785" fg:w="1"/><text x="58.7012%" y="511.50"></text></g><g><title>test3`llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.07%)</title><rect x="58.4512%" y="485" width="0.0745%" height="15" fill="rgb(252,5,43)" fg:x="785" fg:w="1"/><text x="58.7012%" y="495.50"></text></g><g><title>test3`llvm::FoldingSetImpl&lt;llvm::FoldingSet (1 samples, 0.07%)</title><rect x="58.4512%" y="469" width="0.0745%" height="15" fill="rgb(252,84,19)" fg:x="785" fg:w="1"/><text x="58.7012%" y="479.50"></text></g><g><title>test3`llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="58.4512%" y="453" width="0.0745%" height="15" fill="rgb(243,152,39)" fg:x="785" fg:w="1"/><text x="58.7012%" y="463.50"></text></g><g><title>test3`llvm::FoldingSet (1 samples, 0.07%)</title><rect x="58.4512%" y="437" width="0.0745%" height="15" fill="rgb(234,160,15)" fg:x="785" fg:w="1"/><text x="58.7012%" y="447.50"></text></g><g><title>test3`llvm::DefaultFoldingSetTrait (1 samples, 0.07%)</title><rect x="58.4512%" y="421" width="0.0745%" height="15" fill="rgb(237,34,20)" fg:x="785" fg:w="1"/><text x="58.7012%" y="431.50"></text></g><g><title>test3`llvm::DefaultFoldingSetTrait (1 samples, 0.07%)</title><rect x="58.4512%" y="405" width="0.0745%" height="15" fill="rgb(229,97,13)" fg:x="785" fg:w="1"/><text x="58.7012%" y="415.50"></text></g><g><title>test3`llvm::PMTopLevelManager::AUFoldingSetNode::Profile (1 samples, 0.07%)</title><rect x="58.4512%" y="389" width="0.0745%" height="15" fill="rgb(234,71,50)" fg:x="785" fg:w="1"/><text x="58.7012%" y="399.50"></text></g><g><title>test3`llvm::PMTopLevelManager::AUFoldingSetNode::Profile (1 samples, 0.07%)</title><rect x="58.4512%" y="373" width="0.0745%" height="15" fill="rgb(253,155,4)" fg:x="785" fg:w="1"/><text x="58.7012%" y="383.50"></text></g><g><title>test3`&lt;lambda_7911c3bdb29d6119fb522453abe6d06d&gt;::operator (1 samples, 0.07%)</title><rect x="58.4512%" y="357" width="0.0745%" height="15" fill="rgb(222,185,37)" fg:x="785" fg:w="1"/><text x="58.7012%" y="367.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddPointer (1 samples, 0.07%)</title><rect x="58.4512%" y="341" width="0.0745%" height="15" fill="rgb(251,177,13)" fg:x="785" fg:w="1"/><text x="58.7012%" y="351.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddInteger (1 samples, 0.07%)</title><rect x="58.4512%" y="325" width="0.0745%" height="15" fill="rgb(250,179,40)" fg:x="785" fg:w="1"/><text x="58.7012%" y="335.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddInteger (1 samples, 0.07%)</title><rect x="58.4512%" y="309" width="0.0745%" height="15" fill="rgb(242,44,2)" fg:x="785" fg:w="1"/><text x="58.7012%" y="319.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="58.4512%" y="293" width="0.0745%" height="15" fill="rgb(216,177,13)" fg:x="785" fg:w="1"/><text x="58.7012%" y="303.50"></text></g><g><title>test3`llvm::SmallVectorBase (1 samples, 0.07%)</title><rect x="58.4512%" y="277" width="0.0745%" height="15" fill="rgb(216,106,43)" fg:x="785" fg:w="1"/><text x="58.7012%" y="287.50"></text></g><g><title>test3`llvm::legacy::PassManager::PassManager (1 samples, 0.07%)</title><rect x="58.5257%" y="581" width="0.0745%" height="15" fill="rgb(216,183,2)" fg:x="786" fg:w="1"/><text x="58.7757%" y="591.50"></text></g><g><title>test3`llvm::legacy::PassManagerImpl::PassManagerImpl (1 samples, 0.07%)</title><rect x="58.5257%" y="565" width="0.0745%" height="15" fill="rgb(249,75,3)" fg:x="786" fg:w="1"/><text x="58.7757%" y="575.50"></text></g><g><title>test3`llvm::PMTopLevelManager::PMTopLevelManager (1 samples, 0.07%)</title><rect x="58.5257%" y="549" width="0.0745%" height="15" fill="rgb(219,67,39)" fg:x="786" fg:w="1"/><text x="58.7757%" y="559.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Function * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt; &gt; &gt;::DenseMap&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Function * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function * __ptr64,llvm::SmallPtrSet (1 samples, 0.07%)</title><rect x="58.5257%" y="533" width="0.0745%" height="15" fill="rgb(253,228,2)" fg:x="786" fg:w="1"/><text x="58.7757%" y="543.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::Function * __ptr64,8&gt;,llvm::DenseMapInfo&lt;llvm::Function * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function * __ptr64,llvm::SmallPtrSet (1 samples, 0.07%)</title><rect x="58.5257%" y="517" width="0.0745%" height="15" fill="rgb(235,138,27)" fg:x="786" fg:w="1"/><text x="58.7757%" y="527.50"></text></g><g><title>test3`llvm::DenseMap&lt;int,llvm::SIMachineFunctionInfo::VGPRSpillToAGPR,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.5257%" y="501" width="0.0745%" height="15" fill="rgb(236,97,51)" fg:x="786" fg:w="1"/><text x="58.7757%" y="511.50"></text></g><g><title>test3`llvm::MachineModuleInfoWrapperPass::doInitialization (1 samples, 0.07%)</title><rect x="58.6001%" y="549" width="0.0745%" height="15" fill="rgb(240,80,30)" fg:x="787" fg:w="1"/><text x="58.8501%" y="559.50"></text></g><g><title>test3`llvm::MCContext::setDiagnosticHandler (1 samples, 0.07%)</title><rect x="58.6001%" y="533" width="0.0745%" height="15" fill="rgb(230,178,19)" fg:x="787" fg:w="1"/><text x="58.8501%" y="543.50"></text></g><g><title>test3`std::function&lt;void __cdecl(llvm::SMDiagnostic const &amp; __ptr64,bool,llvm::SourceMgr const &amp; __ptr64,std::vector&lt;llvm::MDNode const * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="58.6001%" y="517" width="0.0745%" height="15" fill="rgb(210,190,27)" fg:x="787" fg:w="1"/><text x="58.8501%" y="527.50"></text></g><g><title>test3`std::function&lt;void __cdecl(llvm::SMDiagnostic const &amp; __ptr64,bool,llvm::SourceMgr const &amp; __ptr64,std::vector&lt;llvm::MDNode const * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="58.6001%" y="501" width="0.0745%" height="15" fill="rgb(222,107,31)" fg:x="787" fg:w="1"/><text x="58.8501%" y="511.50"></text></g><g><title>test3`std::_Func_class&lt;void,llvm::SMDiagnostic const &amp; __ptr64,bool,llvm::SourceMgr const &amp; __ptr64,std::vector&lt;llvm::MDNode const * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="58.6001%" y="485" width="0.0745%" height="15" fill="rgb(216,127,34)" fg:x="787" fg:w="1"/><text x="58.8501%" y="495.50"></text></g><g><title>test3`std::_Func_class (1 samples, 0.07%)</title><rect x="58.6001%" y="469" width="0.0745%" height="15" fill="rgb(234,116,52)" fg:x="787" fg:w="1"/><text x="58.8501%" y="479.50"></text></g><g><title>test3`llvm::ProfileSummaryInfoWrapperPass::doFinalization (1 samples, 0.07%)</title><rect x="58.6746%" y="549" width="0.0745%" height="15" fill="rgb(222,124,15)" fg:x="788" fg:w="1"/><text x="58.9246%" y="559.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::ProfileSummaryInfo,std::default_delete (1 samples, 0.07%)</title><rect x="58.6746%" y="533" width="0.0745%" height="15" fill="rgb(231,179,28)" fg:x="788" fg:w="1"/><text x="58.9246%" y="543.50"></text></g><g><title>test3`std::default_delete&lt;llvm::ProfileSummaryInfo&gt;::operator (1 samples, 0.07%)</title><rect x="58.6746%" y="517" width="0.0745%" height="15" fill="rgb(226,93,45)" fg:x="788" fg:w="1"/><text x="58.9246%" y="527.50"></text></g><g><title>test3`llvm::ProfileSummaryInfo::`scalar deleting destructor&apos; (1 samples, 0.07%)</title><rect x="58.6746%" y="501" width="0.0745%" height="15" fill="rgb(215,8,51)" fg:x="788" fg:w="1"/><text x="58.9246%" y="511.50"></text></g><g><title>test3`llvm::ProfileSummaryInfo::~ProfileSummaryInfo (1 samples, 0.07%)</title><rect x="58.6746%" y="485" width="0.0745%" height="15" fill="rgb(223,106,5)" fg:x="788" fg:w="1"/><text x="58.9246%" y="495.50"></text></g><g><title>test3`llvm::DenseMap&lt;int,unsigned __int64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,unsigned __int64&gt; &gt;::~DenseMap&lt;int,unsigned __int64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.6746%" y="469" width="0.0745%" height="15" fill="rgb(250,191,5)" fg:x="788" fg:w="1"/><text x="58.9246%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,unsigned __int64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,unsigned __int64&gt; &gt;,int,unsigned __int64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.6746%" y="453" width="0.0745%" height="15" fill="rgb(242,132,44)" fg:x="788" fg:w="1"/><text x="58.9246%" y="463.50"></text></g><g><title>test3`llvm::MCAssembler::finishLayout (1 samples, 0.07%)</title><rect x="58.8235%" y="405" width="0.0745%" height="15" fill="rgb(251,152,29)" fg:x="790" fg:w="1"/><text x="59.0735%" y="415.50"></text></g><g><title>test3`llvm::createX86_64AsmBackend (1 samples, 0.07%)</title><rect x="58.8235%" y="389" width="0.0745%" height="15" fill="rgb(218,179,5)" fg:x="790" fg:w="1"/><text x="59.0735%" y="399.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="58.8235%" y="373" width="0.0745%" height="15" fill="rgb(227,67,19)" fg:x="790" fg:w="1"/><text x="59.0735%" y="383.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="58.8235%" y="357" width="0.0745%" height="15" fill="rgb(233,119,31)" fg:x="790" fg:w="1"/><text x="59.0735%" y="367.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="58.8235%" y="341" width="0.0745%" height="15" fill="rgb(241,120,22)" fg:x="790" fg:w="1"/><text x="59.0735%" y="351.50"></text></g><g><title>test3`llvm::MCAssembler::layoutOnce (2 samples, 0.15%)</title><rect x="58.8980%" y="405" width="0.1489%" height="15" fill="rgb(224,102,30)" fg:x="791" fg:w="2"/><text x="59.1480%" y="415.50"></text></g><g><title>test3`llvm::MCAssembler::layoutSectionOnce (2 samples, 0.15%)</title><rect x="58.8980%" y="389" width="0.1489%" height="15" fill="rgb(210,164,37)" fg:x="791" fg:w="2"/><text x="59.1480%" y="399.50"></text></g><g><title>test3`llvm::MCAssembler::relaxFragment (2 samples, 0.15%)</title><rect x="58.8980%" y="373" width="0.1489%" height="15" fill="rgb(226,191,16)" fg:x="791" fg:w="2"/><text x="59.1480%" y="383.50"></text></g><g><title>test3`llvm::MCAssembler::relaxInstruction (2 samples, 0.15%)</title><rect x="58.8980%" y="357" width="0.1489%" height="15" fill="rgb(214,40,45)" fg:x="791" fg:w="2"/><text x="59.1480%" y="367.50"></text></g><g><title>test3`llvm::MCAssembler::fragmentNeedsRelaxation (1 samples, 0.07%)</title><rect x="58.9724%" y="341" width="0.0745%" height="15" fill="rgb(244,29,26)" fg:x="792" fg:w="1"/><text x="59.2224%" y="351.50"></text></g><g><title>test3`llvm::MCAssembler::fixupNeedsRelaxation (1 samples, 0.07%)</title><rect x="58.9724%" y="325" width="0.0745%" height="15" fill="rgb(216,16,5)" fg:x="792" fg:w="1"/><text x="59.2224%" y="335.50"></text></g><g><title>test3`llvm::MCAssembler::evaluateFixup (1 samples, 0.07%)</title><rect x="58.9724%" y="309" width="0.0745%" height="15" fill="rgb(249,76,35)" fg:x="792" fg:w="1"/><text x="59.2224%" y="319.50"></text></g><g><title>test3`llvm::MCAsmLayout::getSymbolOffset (1 samples, 0.07%)</title><rect x="58.9724%" y="293" width="0.0745%" height="15" fill="rgb(207,11,44)" fg:x="792" fg:w="1"/><text x="59.2224%" y="303.50"></text></g><g><title>test3`llvm::computeBundlePadding (1 samples, 0.07%)</title><rect x="58.9724%" y="277" width="0.0745%" height="15" fill="rgb(228,190,49)" fg:x="792" fg:w="1"/><text x="59.2224%" y="287.50"></text></g><g><title>test3`llvm::computeBundlePadding (1 samples, 0.07%)</title><rect x="58.9724%" y="261" width="0.0745%" height="15" fill="rgb(214,173,12)" fg:x="792" fg:w="1"/><text x="59.2224%" y="271.50"></text></g><g><title>test3`llvm::MCAsmLayout::getFragmentOffset (1 samples, 0.07%)</title><rect x="58.9724%" y="245" width="0.0745%" height="15" fill="rgb(218,26,35)" fg:x="792" fg:w="1"/><text x="59.2224%" y="255.50"></text></g><g><title>test3`llvm::MCAsmLayout::ensureValid (1 samples, 0.07%)</title><rect x="58.9724%" y="229" width="0.0745%" height="15" fill="rgb(220,200,19)" fg:x="792" fg:w="1"/><text x="59.2224%" y="239.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;,llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.9724%" y="213" width="0.0745%" height="15" fill="rgb(239,95,49)" fg:x="792" fg:w="1"/><text x="59.2224%" y="223.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;,llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.9724%" y="197" width="0.0745%" height="15" fill="rgb(235,85,53)" fg:x="792" fg:w="1"/><text x="59.2224%" y="207.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;,llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="58.9724%" y="181" width="0.0745%" height="15" fill="rgb(233,133,31)" fg:x="792" fg:w="1"/><text x="59.2224%" y="191.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;,llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="58.9724%" y="165" width="0.0745%" height="15" fill="rgb(218,25,20)" fg:x="792" fg:w="1"/><text x="59.2224%" y="175.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64&gt; &gt;,llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.9724%" y="149" width="0.0745%" height="15" fill="rgb(252,210,38)" fg:x="792" fg:w="1"/><text x="59.2224%" y="159.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::MCSection const * __ptr64,llvm::MCFragment * __ptr64,llvm::DenseMapInfo&lt;llvm::MCSection const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="58.9724%" y="133" width="0.0745%" height="15" fill="rgb(242,134,21)" fg:x="792" fg:w="1"/><text x="59.2224%" y="143.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager (1 samples, 0.07%)</title><rect x="58.9724%" y="117" width="0.0745%" height="15" fill="rgb(213,28,48)" fg:x="792" fg:w="1"/><text x="59.2224%" y="127.50"></text></g><g><title>test3`llvm::MCAssembler::layout (4 samples, 0.30%)</title><rect x="58.8235%" y="421" width="0.2978%" height="15" fill="rgb(250,196,2)" fg:x="790" fg:w="4"/><text x="59.0735%" y="431.50"></text></g><g><title>test3`std::tuple&lt;llvm::MCValue &amp; __ptr64,unsigned __int64 &amp; __ptr64,bool &amp; __ptr64&gt;::operator= (1 samples, 0.07%)</title><rect x="59.0469%" y="405" width="0.0745%" height="15" fill="rgb(227,5,17)" fg:x="793" fg:w="1"/><text x="59.2969%" y="415.50"></text></g><g><title>test3`llvm::StringTableBuilder::finalize (1 samples, 0.07%)</title><rect x="59.1214%" y="405" width="0.0745%" height="15" fill="rgb(221,226,24)" fg:x="794" fg:w="1"/><text x="59.3714%" y="415.50"></text></g><g><title>test3`llvm::StringTableBuilder::finalizeStringTable (1 samples, 0.07%)</title><rect x="59.1214%" y="389" width="0.0745%" height="15" fill="rgb(211,5,48)" fg:x="794" fg:w="1"/><text x="59.3714%" y="399.50"></text></g><g><title>test3`llvm::MCStreamer::Finish (6 samples, 0.45%)</title><rect x="58.8235%" y="501" width="0.4468%" height="15" fill="rgb(219,150,6)" fg:x="790" fg:w="6"/><text x="59.0735%" y="511.50"></text></g><g><title>test3`llvm::createX86WinCOFFStreamer (6 samples, 0.45%)</title><rect x="58.8235%" y="485" width="0.4468%" height="15" fill="rgb(251,46,16)" fg:x="790" fg:w="6"/><text x="59.0735%" y="495.50"></text></g><g><title>test3`llvm::MCWinCOFFStreamer::finishImpl (6 samples, 0.45%)</title><rect x="58.8235%" y="469" width="0.4468%" height="15" fill="rgb(220,204,40)" fg:x="790" fg:w="6"/><text x="59.0735%" y="479.50"></text></g><g><title>test3`llvm::MCObjectStreamer::finishImpl (6 samples, 0.45%)</title><rect x="58.8235%" y="453" width="0.4468%" height="15" fill="rgb(211,85,2)" fg:x="790" fg:w="6"/><text x="59.0735%" y="463.50"></text></g><g><title>test3`llvm::MCAssembler::Finish (6 samples, 0.45%)</title><rect x="58.8235%" y="437" width="0.4468%" height="15" fill="rgb(229,17,7)" fg:x="790" fg:w="6"/><text x="59.0735%" y="447.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (2 samples, 0.15%)</title><rect x="59.1214%" y="421" width="0.1489%" height="15" fill="rgb(239,72,28)" fg:x="794" fg:w="2"/><text x="59.3714%" y="431.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="59.1958%" y="405" width="0.0745%" height="15" fill="rgb(230,47,54)" fg:x="795" fg:w="1"/><text x="59.4458%" y="415.50"></text></g><g><title>test3`llvm::createWinCOFFObjectWriter (1 samples, 0.07%)</title><rect x="59.1958%" y="389" width="0.0745%" height="15" fill="rgb(214,50,8)" fg:x="795" fg:w="1"/><text x="59.4458%" y="399.50"></text></g><g><title>test3`llvm::MCWinCOFFStreamer::reset (1 samples, 0.07%)</title><rect x="59.2703%" y="501" width="0.0745%" height="15" fill="rgb(216,198,43)" fg:x="796" fg:w="1"/><text x="59.5203%" y="511.50"></text></g><g><title>test3`llvm::MCObjectStreamer::reset (1 samples, 0.07%)</title><rect x="59.2703%" y="485" width="0.0745%" height="15" fill="rgb(234,20,35)" fg:x="796" fg:w="1"/><text x="59.5203%" y="495.50"></text></g><g><title>test3`llvm::MCStreamer::reset (1 samples, 0.07%)</title><rect x="59.2703%" y="469" width="0.0745%" height="15" fill="rgb(254,45,19)" fg:x="796" fg:w="1"/><text x="59.5203%" y="479.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete&lt;llvm::WinEH::FrameInfo&gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete (1 samples, 0.07%)</title><rect x="59.2703%" y="453" width="0.0745%" height="15" fill="rgb(219,14,44)" fg:x="796" fg:w="1"/><text x="59.5203%" y="463.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete&lt;llvm::WinEH::FrameInfo&gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete (1 samples, 0.07%)</title><rect x="59.2703%" y="437" width="0.0745%" height="15" fill="rgb(217,220,26)" fg:x="796" fg:w="1"/><text x="59.5203%" y="447.50"></text></g><g><title>test3`std::_Destroy_range&lt;std::allocator&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete (1 samples, 0.07%)</title><rect x="59.2703%" y="421" width="0.0745%" height="15" fill="rgb(213,158,28)" fg:x="796" fg:w="1"/><text x="59.5203%" y="431.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete&lt;llvm::WinEH::FrameInfo&gt; &gt; &gt; &gt;::destroy&lt;std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete (1 samples, 0.07%)</title><rect x="59.2703%" y="405" width="0.0745%" height="15" fill="rgb(252,51,52)" fg:x="796" fg:w="1"/><text x="59.5203%" y="415.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete (1 samples, 0.07%)</title><rect x="59.2703%" y="389" width="0.0745%" height="15" fill="rgb(246,89,16)" fg:x="796" fg:w="1"/><text x="59.5203%" y="399.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete&lt;llvm::WinEH::FrameInfo&gt; &gt;::~unique_ptr&lt;llvm::WinEH::FrameInfo,std::default_delete (1 samples, 0.07%)</title><rect x="59.2703%" y="373" width="0.0745%" height="15" fill="rgb(216,158,49)" fg:x="796" fg:w="1"/><text x="59.5203%" y="383.50"></text></g><g><title>test3`llvm::FPPassManager::doFinalization (9 samples, 0.67%)</title><rect x="58.7491%" y="533" width="0.6701%" height="15" fill="rgb(236,107,19)" fg:x="789" fg:w="9"/><text x="58.9991%" y="543.50"></text></g><g><title>test3`llvm::AsmPrinter::doFinalization (9 samples, 0.67%)</title><rect x="58.7491%" y="517" width="0.6701%" height="15" fill="rgb(228,185,30)" fg:x="789" fg:w="9"/><text x="58.9991%" y="527.50"></text></g><g><title>test3`llvm::WinException::endModule (1 samples, 0.07%)</title><rect x="59.3448%" y="501" width="0.0745%" height="15" fill="rgb(246,134,8)" fg:x="797" fg:w="1"/><text x="59.5948%" y="511.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="59.3448%" y="485" width="0.0745%" height="15" fill="rgb(214,143,50)" fg:x="797" fg:w="1"/><text x="59.5948%" y="495.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="59.3448%" y="469" width="0.0745%" height="15" fill="rgb(228,75,8)" fg:x="797" fg:w="1"/><text x="59.5948%" y="479.50"></text></g><g><title>test3`llvm::DwarfDebug::DwarfDebug (1 samples, 0.07%)</title><rect x="59.4192%" y="485" width="0.0745%" height="15" fill="rgb(207,175,4)" fg:x="798" fg:w="1"/><text x="59.6692%" y="495.50"></text></g><g><title>test3`llvm::MCObjectStreamer::emitFileDirective (1 samples, 0.07%)</title><rect x="59.4937%" y="485" width="0.0745%" height="15" fill="rgb(205,108,24)" fg:x="799" fg:w="1"/><text x="59.7437%" y="495.50"></text></g><g><title>test3`llvm::Module::getSDKVersion (1 samples, 0.07%)</title><rect x="59.5681%" y="485" width="0.0745%" height="15" fill="rgb(244,120,49)" fg:x="800" fg:w="1"/><text x="59.8181%" y="495.50"></text></g><g><title>test3`llvm::MCContext::createTempSymbol (1 samples, 0.07%)</title><rect x="59.7171%" y="389" width="0.0745%" height="15" fill="rgb(223,47,38)" fg:x="802" fg:w="1"/><text x="59.9671%" y="399.50"></text></g><g><title>test3`llvm::MCContext::createSymbol (1 samples, 0.07%)</title><rect x="59.7171%" y="373" width="0.0745%" height="15" fill="rgb(229,179,11)" fg:x="802" fg:w="1"/><text x="59.9671%" y="383.50"></text></g><g><title>test3`llvm::MCContext::createSymbolImpl (1 samples, 0.07%)</title><rect x="59.7171%" y="357" width="0.0745%" height="15" fill="rgb(231,122,1)" fg:x="802" fg:w="1"/><text x="59.9671%" y="367.50"></text></g><g><title>test3`std::map&lt;llvm::MCContext::COFFSectionKey,llvm::MCSectionCOFF * __ptr64,std::less&lt;llvm::MCContext::COFFSectionKey&gt;,std::allocator&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt; &gt; &gt;::insert&lt;std::pair (1 samples, 0.07%)</title><rect x="59.7915%" y="389" width="0.0745%" height="15" fill="rgb(245,119,9)" fg:x="803" fg:w="1"/><text x="60.0415%" y="399.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;llvm::MCContext::COFFSectionKey,llvm::MCSectionCOFF * __ptr64,std::less&lt;llvm::MCContext::COFFSectionKey&gt;,std::allocator&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt; &gt;,0&gt; &gt;::emplace&lt;std::pair (1 samples, 0.07%)</title><rect x="59.7915%" y="373" width="0.0745%" height="15" fill="rgb(241,163,25)" fg:x="803" fg:w="1"/><text x="60.0415%" y="383.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;llvm::MCContext::COFFSectionKey,llvm::MCSectionCOFF * __ptr64,std::less&lt;llvm::MCContext::COFFSectionKey&gt;,std::allocator&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt; &gt;,0&gt; &gt;::_Emplace&lt;std::pair (1 samples, 0.07%)</title><rect x="59.7915%" y="357" width="0.0745%" height="15" fill="rgb(217,214,3)" fg:x="803" fg:w="1"/><text x="60.0415%" y="367.50"></text></g><g><title>test3`std::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt;,void * __ptr64&gt; &gt; &gt;&lt;std::pair (1 samples, 0.07%)</title><rect x="59.7915%" y="341" width="0.0745%" height="15" fill="rgb(240,86,28)" fg:x="803" fg:w="1"/><text x="60.0415%" y="351.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt;,void * __ptr64&gt; &gt; &gt;::construct&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt;,std::pair (1 samples, 0.07%)</title><rect x="59.7915%" y="325" width="0.0745%" height="15" fill="rgb(215,47,9)" fg:x="803" fg:w="1"/><text x="60.0415%" y="335.50"></text></g><g><title>test3`std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt;::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt; (1 samples, 0.07%)</title><rect x="59.7915%" y="309" width="0.0745%" height="15" fill="rgb(252,25,45)" fg:x="803" fg:w="1"/><text x="60.0415%" y="319.50"></text></g><g><title>test3`llvm::MCContext::COFFSectionKey::COFFSectionKey (1 samples, 0.07%)</title><rect x="59.7915%" y="293" width="0.0745%" height="15" fill="rgb(251,164,9)" fg:x="803" fg:w="1"/><text x="60.0415%" y="303.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="59.7915%" y="277" width="0.0745%" height="15" fill="rgb(233,194,0)" fg:x="803" fg:w="1"/><text x="60.0415%" y="287.50"></text></g><g><title>test3`std::_Container_base12::_Alloc_proxy&lt;std::allocator (1 samples, 0.07%)</title><rect x="59.7915%" y="261" width="0.0745%" height="15" fill="rgb(249,111,24)" fg:x="803" fg:w="1"/><text x="60.0415%" y="271.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="59.7915%" y="245" width="0.0745%" height="15" fill="rgb(250,223,3)" fg:x="803" fg:w="1"/><text x="60.0415%" y="255.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="59.7915%" y="229" width="0.0745%" height="15" fill="rgb(236,178,37)" fg:x="803" fg:w="1"/><text x="60.0415%" y="239.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="59.7915%" y="213" width="0.0745%" height="15" fill="rgb(241,158,50)" fg:x="803" fg:w="1"/><text x="60.0415%" y="223.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="59.7915%" y="197" width="0.0745%" height="15" fill="rgb(213,121,41)" fg:x="803" fg:w="1"/><text x="60.0415%" y="207.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="59.7915%" y="181" width="0.0745%" height="15" fill="rgb(240,92,3)" fg:x="803" fg:w="1"/><text x="60.0415%" y="191.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="59.7915%" y="165" width="0.0745%" height="15" fill="rgb(205,123,3)" fg:x="803" fg:w="1"/><text x="60.0415%" y="175.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="59.7915%" y="149" width="0.0745%" height="15" fill="rgb(205,97,47)" fg:x="803" fg:w="1"/><text x="60.0415%" y="159.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="59.7915%" y="133" width="0.0745%" height="15" fill="rgb(247,152,14)" fg:x="803" fg:w="1"/><text x="60.0415%" y="143.50"></text></g><g><title>ucrtbased`recalloc (1 samples, 0.07%)</title><rect x="59.7915%" y="117" width="0.0745%" height="15" fill="rgb(248,195,53)" fg:x="803" fg:w="1"/><text x="60.0415%" y="127.50"></text></g><g><title>test3`llvm::TargetLoweringObjectFileCOFF::Initialize (4 samples, 0.30%)</title><rect x="59.6426%" y="485" width="0.2978%" height="15" fill="rgb(226,201,16)" fg:x="801" fg:w="4"/><text x="59.8926%" y="495.50"></text></g><g><title>test3`llvm::TargetLoweringObjectFile::Initialize (4 samples, 0.30%)</title><rect x="59.6426%" y="469" width="0.2978%" height="15" fill="rgb(205,98,0)" fg:x="801" fg:w="4"/><text x="59.8926%" y="479.50"></text></g><g><title>test3`llvm::MCObjectFileInfo::initMCObjectFileInfo (4 samples, 0.30%)</title><rect x="59.6426%" y="453" width="0.2978%" height="15" fill="rgb(214,191,48)" fg:x="801" fg:w="4"/><text x="59.8926%" y="463.50"></text></g><g><title>test3`llvm::MCObjectFileInfo::initCOFFMCObjectFileInfo (4 samples, 0.30%)</title><rect x="59.6426%" y="437" width="0.2978%" height="15" fill="rgb(237,112,39)" fg:x="801" fg:w="4"/><text x="59.8926%" y="447.50"></text></g><g><title>test3`llvm::MCContext::getCOFFSection (3 samples, 0.22%)</title><rect x="59.7171%" y="421" width="0.2234%" height="15" fill="rgb(247,203,27)" fg:x="802" fg:w="3"/><text x="59.9671%" y="431.50"></text></g><g><title>test3`llvm::MCContext::getCOFFSection (3 samples, 0.22%)</title><rect x="59.7171%" y="405" width="0.2234%" height="15" fill="rgb(235,124,28)" fg:x="802" fg:w="3"/><text x="59.9671%" y="415.50"></text></g><g><title>test3`std::pair&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int&gt; const ,llvm::SDNode * __ptr64&gt;::~pair&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="59.8660%" y="389" width="0.0745%" height="15" fill="rgb(208,207,46)" fg:x="804" fg:w="1"/><text x="60.1160%" y="399.50"></text></g><g><title>test3`std::_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="59.8660%" y="373" width="0.0745%" height="15" fill="rgb(234,176,4)" fg:x="804" fg:w="1"/><text x="60.1160%" y="383.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="59.8660%" y="357" width="0.0745%" height="15" fill="rgb(230,133,28)" fg:x="804" fg:w="1"/><text x="60.1160%" y="367.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="59.8660%" y="341" width="0.0745%" height="15" fill="rgb(211,137,40)" fg:x="804" fg:w="1"/><text x="60.1160%" y="351.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="59.8660%" y="325" width="0.0745%" height="15" fill="rgb(254,35,13)" fg:x="804" fg:w="1"/><text x="60.1160%" y="335.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="59.8660%" y="309" width="0.0745%" height="15" fill="rgb(225,49,51)" fg:x="804" fg:w="1"/><text x="60.1160%" y="319.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="59.8660%" y="293" width="0.0745%" height="15" fill="rgb(251,10,15)" fg:x="804" fg:w="1"/><text x="60.1160%" y="303.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="59.8660%" y="277" width="0.0745%" height="15" fill="rgb(228,207,15)" fg:x="804" fg:w="1"/><text x="60.1160%" y="287.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="59.8660%" y="261" width="0.0745%" height="15" fill="rgb(241,99,19)" fg:x="804" fg:w="1"/><text x="60.1160%" y="271.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="59.8660%" y="245" width="0.0745%" height="15" fill="rgb(207,104,49)" fg:x="804" fg:w="1"/><text x="60.1160%" y="255.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="59.8660%" y="229" width="0.0745%" height="15" fill="rgb(234,99,18)" fg:x="804" fg:w="1"/><text x="60.1160%" y="239.50"></text></g><g><title>test3`llvm::X86AsmPrinter::doInitialization (8 samples, 0.60%)</title><rect x="59.4192%" y="517" width="0.5957%" height="15" fill="rgb(213,191,49)" fg:x="798" fg:w="8"/><text x="59.6692%" y="527.50"></text></g><g><title>test3`llvm::AsmPrinter::doInitialization (8 samples, 0.60%)</title><rect x="59.4192%" y="501" width="0.5957%" height="15" fill="rgb(210,226,19)" fg:x="798" fg:w="8"/><text x="59.6692%" y="511.50"></text></g><g><title>test3`llvm::WinException::WinException (1 samples, 0.07%)</title><rect x="59.9404%" y="485" width="0.0745%" height="15" fill="rgb(229,97,18)" fg:x="805" fg:w="1"/><text x="60.1904%" y="495.50"></text></g><g><title>test3`llvm::dbgs (1 samples, 0.07%)</title><rect x="60.0149%" y="501" width="0.0745%" height="15" fill="rgb(211,167,15)" fg:x="806" fg:w="1"/><text x="60.2649%" y="511.50"></text></g><g><title>test3`llvm::initDebugOptions (1 samples, 0.07%)</title><rect x="60.0149%" y="485" width="0.0745%" height="15" fill="rgb(210,169,34)" fg:x="806" fg:w="1"/><text x="60.2649%" y="495.50"></text></g><g><title>test3`llvm::errs (1 samples, 0.07%)</title><rect x="60.0149%" y="469" width="0.0745%" height="15" fill="rgb(241,121,31)" fg:x="806" fg:w="1"/><text x="60.2649%" y="479.50"></text></g><g><title>test3`llvm::raw_fd_ostream::raw_fd_ostream (1 samples, 0.07%)</title><rect x="60.0149%" y="453" width="0.0745%" height="15" fill="rgb(232,40,11)" fg:x="806" fg:w="1"/><text x="60.2649%" y="463.50"></text></g><g><title>test3`llvm::sys::fs::status (1 samples, 0.07%)</title><rect x="60.0149%" y="437" width="0.0745%" height="15" fill="rgb(205,86,26)" fg:x="806" fg:w="1"/><text x="60.2649%" y="447.50"></text></g><g><title>test3`llvm::sys::windows::widenPath (1 samples, 0.07%)</title><rect x="60.0149%" y="421" width="0.0745%" height="15" fill="rgb(231,126,28)" fg:x="806" fg:w="1"/><text x="60.2649%" y="431.50"></text></g><g><title>test3`llvm::FPPassManager::doInitialization (10 samples, 0.74%)</title><rect x="59.4192%" y="533" width="0.7446%" height="15" fill="rgb(219,221,18)" fg:x="798" fg:w="10"/><text x="59.6692%" y="543.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (2 samples, 0.15%)</title><rect x="60.0149%" y="517" width="0.1489%" height="15" fill="rgb(211,40,0)" fg:x="806" fg:w="2"/><text x="60.2649%" y="527.50"></text></g><g><title>test3`std::iter_swap (1 samples, 0.07%)</title><rect x="60.0894%" y="501" width="0.0745%" height="15" fill="rgb(239,85,43)" fg:x="807" fg:w="1"/><text x="60.3394%" y="511.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (1 samples, 0.07%)</title><rect x="60.0894%" y="485" width="0.0745%" height="15" fill="rgb(231,55,21)" fg:x="807" fg:w="1"/><text x="60.3394%" y="495.50"></text></g><g><title>test3`llvm::DominatorTree::DominatorTree (1 samples, 0.07%)</title><rect x="60.0894%" y="469" width="0.0745%" height="15" fill="rgb(225,184,43)" fg:x="807" fg:w="1"/><text x="60.3394%" y="479.50"></text></g><g><title>test3`llvm::MMIAddrLabelMap::UpdateForRAUWBlock (1 samples, 0.07%)</title><rect x="60.1638%" y="501" width="0.0745%" height="15" fill="rgb(251,158,41)" fg:x="808" fg:w="1"/><text x="60.4138%" y="511.50"></text></g><g><title>test3`llvm::MachineModuleInfo::deleteMachineFunctionFor (1 samples, 0.07%)</title><rect x="60.1638%" y="485" width="0.0745%" height="15" fill="rgb(234,159,37)" fg:x="808" fg:w="1"/><text x="60.4138%" y="495.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function const * __ptr64,std::unique_ptr&lt;llvm::MachineFunction,std::default_delete&lt;llvm::MachineFunction&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Function const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function const * __ptr64,std::unique_ptr&lt;llvm::MachineFunction,std::default_delete&lt;llvm::MachineFunction&gt; &gt; &gt; &gt;,llvm::Function const * __ptr64,std::unique_ptr&lt;llvm::MachineFunction,std::default_delete&lt;llvm::MachineFunction&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Function const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Function const * __ptr64,std::unique_ptr&lt;llvm::MachineFunction,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="469" width="0.0745%" height="15" fill="rgb(216,204,22)" fg:x="808" fg:w="1"/><text x="60.4138%" y="479.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::MachineFunction,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="453" width="0.0745%" height="15" fill="rgb(214,17,3)" fg:x="808" fg:w="1"/><text x="60.4138%" y="463.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::MachineFunction,std::default_delete&lt;llvm::MachineFunction&gt; &gt;::~unique_ptr&lt;llvm::MachineFunction,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="437" width="0.0745%" height="15" fill="rgb(212,111,17)" fg:x="808" fg:w="1"/><text x="60.4138%" y="447.50"></text></g><g><title>test3`std::default_delete&lt;llvm::MachineFunction&gt;::operator (1 samples, 0.07%)</title><rect x="60.1638%" y="421" width="0.0745%" height="15" fill="rgb(221,157,24)" fg:x="808" fg:w="1"/><text x="60.4138%" y="431.50"></text></g><g><title>test3`llvm::MachineFunction::`scalar deleting destructor&apos; (1 samples, 0.07%)</title><rect x="60.1638%" y="405" width="0.0745%" height="15" fill="rgb(252,16,13)" fg:x="808" fg:w="1"/><text x="60.4138%" y="415.50"></text></g><g><title>test3`llvm::MachineFunction::~MachineFunction (1 samples, 0.07%)</title><rect x="60.1638%" y="389" width="0.0745%" height="15" fill="rgb(221,62,2)" fg:x="808" fg:w="1"/><text x="60.4138%" y="399.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::PseudoSourceValueManager,std::default_delete&lt;llvm::PseudoSourceValueManager&gt; &gt;::~unique_ptr&lt;llvm::PseudoSourceValueManager,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="373" width="0.0745%" height="15" fill="rgb(247,87,22)" fg:x="808" fg:w="1"/><text x="60.4138%" y="383.50"></text></g><g><title>test3`std::default_delete&lt;llvm::PseudoSourceValueManager&gt;::operator (1 samples, 0.07%)</title><rect x="60.1638%" y="357" width="0.0745%" height="15" fill="rgb(215,73,9)" fg:x="808" fg:w="1"/><text x="60.4138%" y="367.50"></text></g><g><title>test3`llvm::PseudoSourceValueManager::`scalar deleting destructor&apos; (1 samples, 0.07%)</title><rect x="60.1638%" y="341" width="0.0745%" height="15" fill="rgb(207,175,33)" fg:x="808" fg:w="1"/><text x="60.4138%" y="351.50"></text></g><g><title>test3`llvm::PseudoSourceValueManager::~PseudoSourceValueManager (1 samples, 0.07%)</title><rect x="60.1638%" y="325" width="0.0745%" height="15" fill="rgb(243,129,54)" fg:x="808" fg:w="1"/><text x="60.4138%" y="335.50"></text></g><g><title>test3`std::map&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::~map&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="309" width="0.0745%" height="15" fill="rgb(227,119,45)" fg:x="808" fg:w="1"/><text x="60.4138%" y="319.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="293" width="0.0745%" height="15" fill="rgb(205,109,36)" fg:x="808" fg:w="1"/><text x="60.4138%" y="303.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_head&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="277" width="0.0745%" height="15" fill="rgb(205,6,39)" fg:x="808" fg:w="1"/><text x="60.4138%" y="287.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="261" width="0.0745%" height="15" fill="rgb(221,32,16)" fg:x="808" fg:w="1"/><text x="60.4138%" y="271.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="245" width="0.0745%" height="15" fill="rgb(228,144,50)" fg:x="808" fg:w="1"/><text x="60.4138%" y="255.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="229" width="0.0745%" height="15" fill="rgb(229,201,53)" fg:x="808" fg:w="1"/><text x="60.4138%" y="239.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="213" width="0.0745%" height="15" fill="rgb(249,153,27)" fg:x="808" fg:w="1"/><text x="60.4138%" y="223.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="197" width="0.0745%" height="15" fill="rgb(227,106,25)" fg:x="808" fg:w="1"/><text x="60.4138%" y="207.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="181" width="0.0745%" height="15" fill="rgb(230,65,29)" fg:x="808" fg:w="1"/><text x="60.4138%" y="191.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="165" width="0.0745%" height="15" fill="rgb(221,57,46)" fg:x="808" fg:w="1"/><text x="60.4138%" y="175.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="149" width="0.0745%" height="15" fill="rgb(229,161,17)" fg:x="808" fg:w="1"/><text x="60.4138%" y="159.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="133" width="0.0745%" height="15" fill="rgb(222,213,11)" fg:x="808" fg:w="1"/><text x="60.4138%" y="143.50"></text></g><g><title>test3`std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="117" width="0.0745%" height="15" fill="rgb(235,35,13)" fg:x="808" fg:w="1"/><text x="60.4138%" y="127.50"></text></g><g><title>test3`llvm::StringMapEntryStorage&lt;std::unique_ptr&lt;llvm::ExternalSymbolPseudoSourceValue const ,std::default_delete&lt;llvm::ExternalSymbolPseudoSourceValue const &gt; &gt; &gt;::~StringMapEntryStorage&lt;std::unique_ptr&lt;llvm::ExternalSymbolPseudoSourceValue const ,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="101" width="0.0745%" height="15" fill="rgb(233,158,34)" fg:x="808" fg:w="1"/><text x="60.4138%" y="111.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::ExternalSymbolPseudoSourceValue const ,std::default_delete&lt;llvm::ExternalSymbolPseudoSourceValue const &gt; &gt;::~unique_ptr&lt;llvm::ExternalSymbolPseudoSourceValue const ,std::default_delete (1 samples, 0.07%)</title><rect x="60.1638%" y="85" width="0.0745%" height="15" fill="rgb(215,151,48)" fg:x="808" fg:w="1"/><text x="60.4138%" y="95.50"></text></g><g><title>test3`std::default_delete&lt;llvm::ExternalSymbolPseudoSourceValue const &gt;::operator (1 samples, 0.07%)</title><rect x="60.1638%" y="69" width="0.0745%" height="15" fill="rgb(229,84,14)" fg:x="808" fg:w="1"/><text x="60.4138%" y="79.50"></text></g><g><title>test3`llvm::FixedStackPseudoSourceValue::`vector deleting destructor&apos; (1 samples, 0.07%)</title><rect x="60.1638%" y="53" width="0.0745%" height="15" fill="rgb(229,68,14)" fg:x="808" fg:w="1"/><text x="60.4138%" y="63.50"></text></g><g><title>test3`llvm::AMDGPUPseudoSourceValue::~AMDGPUPseudoSourceValue (1 samples, 0.07%)</title><rect x="60.1638%" y="37" width="0.0745%" height="15" fill="rgb(243,106,26)" fg:x="808" fg:w="1"/><text x="60.4138%" y="47.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock,0&gt; &gt;::getChildren (1 samples, 0.07%)</title><rect x="60.2383%" y="373" width="0.0745%" height="15" fill="rgb(206,45,38)" fg:x="809" fg:w="1"/><text x="60.4883%" y="383.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock,0&gt; &gt;::getChildren (1 samples, 0.07%)</title><rect x="60.2383%" y="357" width="0.0745%" height="15" fill="rgb(226,6,15)" fg:x="809" fg:w="1"/><text x="60.4883%" y="367.50"></text></g><g><title>test3`llvm::SmallVector&lt;llvm::MachineBasicBlock * __ptr64,8&gt;::SmallVector&lt;llvm::MachineBasicBlock * __ptr64,8&gt;&lt;std::reverse_iterator&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types (1 samples, 0.07%)</title><rect x="60.2383%" y="341" width="0.0745%" height="15" fill="rgb(232,22,54)" fg:x="809" fg:w="1"/><text x="60.4883%" y="351.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;llvm::MachineBasicBlock * __ptr64&gt;::append&lt;std::reverse_iterator&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types (1 samples, 0.07%)</title><rect x="60.2383%" y="325" width="0.0745%" height="15" fill="rgb(229,222,32)" fg:x="809" fg:w="1"/><text x="60.4883%" y="335.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;llvm::MachineBasicBlock * __ptr64,1&gt;::uninitialized_copy&lt;std::reverse_iterator&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types (1 samples, 0.07%)</title><rect x="60.2383%" y="309" width="0.0745%" height="15" fill="rgb(228,62,29)" fg:x="809" fg:w="1"/><text x="60.4883%" y="319.50"></text></g><g><title>test3`llvm::iterator_adaptor_base&lt;llvm::pointee_iterator&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;llvm::MCSymbol const * __ptr64&gt; &gt; &gt;,llvm::MCSymbol const &gt;,std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;llvm::MCSymbol const * __ptr64&gt; &gt; &gt;,std::random_access_iterator_tag,llvm::MCSymbol const ,__int64,llvm::MCSymbol const * __ptr64,llvm::MCSymbol const &amp; __ptr64&gt;::iterator_adaptor_base&lt;llvm::pointee_iterator&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;llvm::MCSymbol const * __ptr64&gt; &gt; &gt;,llvm::MCSymbol const &gt;,std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types (1 samples, 0.07%)</title><rect x="60.2383%" y="293" width="0.0745%" height="15" fill="rgb(251,103,34)" fg:x="809" fg:w="1"/><text x="60.4883%" y="303.50"></text></g><g><title>test3`std::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="60.2383%" y="277" width="0.0745%" height="15" fill="rgb(233,12,30)" fg:x="809" fg:w="1"/><text x="60.4883%" y="287.50"></text></g><g><title>test3`std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="60.2383%" y="261" width="0.0745%" height="15" fill="rgb(238,52,0)" fg:x="809" fg:w="1"/><text x="60.4883%" y="271.50"></text></g><g><title>test3`std::_Iterator_base12::_Iterator_base12 (1 samples, 0.07%)</title><rect x="60.2383%" y="245" width="0.0745%" height="15" fill="rgb(223,98,5)" fg:x="809" fg:w="1"/><text x="60.4883%" y="255.50"></text></g><g><title>test3`std::_Iterator_base12::operator= (1 samples, 0.07%)</title><rect x="60.2383%" y="229" width="0.0745%" height="15" fill="rgb(228,75,37)" fg:x="809" fg:w="1"/><text x="60.4883%" y="239.50"></text></g><g><title>test3`std::_Iterator_base12::_Assign_locked (1 samples, 0.07%)</title><rect x="60.2383%" y="213" width="0.0745%" height="15" fill="rgb(205,115,49)" fg:x="809" fg:w="1"/><text x="60.4883%" y="223.50"></text></g><g><title>test3`llvm::MachineDominatorTree::runOnMachineFunction (2 samples, 0.15%)</title><rect x="60.2383%" y="485" width="0.1489%" height="15" fill="rgb(250,154,43)" fg:x="809" fg:w="2"/><text x="60.4883%" y="495.50"></text></g><g><title>test3`llvm::MachineDominatorTree::calculate (2 samples, 0.15%)</title><rect x="60.2383%" y="469" width="0.1489%" height="15" fill="rgb(226,43,29)" fg:x="809" fg:w="2"/><text x="60.4883%" y="479.50"></text></g><g><title>test3`llvm::DominatorTreeBase (2 samples, 0.15%)</title><rect x="60.2383%" y="453" width="0.1489%" height="15" fill="rgb(249,228,39)" fg:x="809" fg:w="2"/><text x="60.4883%" y="463.50"></text></g><g><title>test3`llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase (2 samples, 0.15%)</title><rect x="60.2383%" y="437" width="0.1489%" height="15" fill="rgb(216,79,43)" fg:x="809" fg:w="2"/><text x="60.4883%" y="447.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase (2 samples, 0.15%)</title><rect x="60.2383%" y="421" width="0.1489%" height="15" fill="rgb(228,95,12)" fg:x="809" fg:w="2"/><text x="60.4883%" y="431.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock,0&gt; &gt;::doFullDFSWalk&lt;bool (__cdecl*) (2 samples, 0.15%)</title><rect x="60.2383%" y="405" width="0.1489%" height="15" fill="rgb(249,221,15)" fg:x="809" fg:w="2"/><text x="60.4883%" y="415.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock,0&gt; &gt;::runDFS&lt;0,bool (__cdecl*) (2 samples, 0.15%)</title><rect x="60.2383%" y="389" width="0.1489%" height="15" fill="rgb(233,34,13)" fg:x="809" fg:w="2"/><text x="60.4883%" y="399.50"></text></g><g><title>test3`llvm::SmallVector&lt;llvm::MachineBasicBlock * __ptr64,64&gt;::SmallVector (1 samples, 0.07%)</title><rect x="60.3127%" y="373" width="0.0745%" height="15" fill="rgb(214,103,39)" fg:x="810" fg:w="1"/><text x="60.5627%" y="383.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="60.3127%" y="357" width="0.0745%" height="15" fill="rgb(251,126,39)" fg:x="810" fg:w="1"/><text x="60.5627%" y="367.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="60.3127%" y="341" width="0.0745%" height="15" fill="rgb(214,216,36)" fg:x="810" fg:w="1"/><text x="60.5627%" y="351.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;llvm::MachineBasicBlock * __ptr64&gt;::append (1 samples, 0.07%)</title><rect x="60.3127%" y="325" width="0.0745%" height="15" fill="rgb(220,221,8)" fg:x="810" fg:w="1"/><text x="60.5627%" y="335.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="60.3127%" y="309" width="0.0745%" height="15" fill="rgb(240,216,3)" fg:x="810" fg:w="1"/><text x="60.5627%" y="319.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="60.3127%" y="293" width="0.0745%" height="15" fill="rgb(232,218,17)" fg:x="810" fg:w="1"/><text x="60.5627%" y="303.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="60.3127%" y="277" width="0.0745%" height="15" fill="rgb(229,163,45)" fg:x="810" fg:w="1"/><text x="60.5627%" y="287.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="60.3127%" y="261" width="0.0745%" height="15" fill="rgb(231,110,42)" fg:x="810" fg:w="1"/><text x="60.5627%" y="271.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="60.3127%" y="245" width="0.0745%" height="15" fill="rgb(208,170,48)" fg:x="810" fg:w="1"/><text x="60.5627%" y="255.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="60.3127%" y="229" width="0.0745%" height="15" fill="rgb(239,116,25)" fg:x="810" fg:w="1"/><text x="60.5627%" y="239.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="60.3127%" y="213" width="0.0745%" height="15" fill="rgb(219,200,50)" fg:x="810" fg:w="1"/><text x="60.5627%" y="223.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::MachineRegisterInfo (1 samples, 0.07%)</title><rect x="60.3872%" y="437" width="0.0745%" height="15" fill="rgb(245,200,0)" fg:x="811" fg:w="1"/><text x="60.6372%" y="447.50"></text></g><g><title>test3`llvm::IndexedMap&lt;std::pair&lt;llvm::PointerUnion&lt;llvm::TargetRegisterClass const * __ptr64,llvm::RegisterBank const * __ptr64&gt;,llvm::MachineOperand * __ptr64&gt;,llvm::VirtReg2IndexFunctor&gt;::IndexedMap&lt;std::pair&lt;llvm::PointerUnion (1 samples, 0.07%)</title><rect x="60.3872%" y="421" width="0.0745%" height="15" fill="rgb(245,119,33)" fg:x="811" fg:w="1"/><text x="60.6372%" y="431.50"></text></g><g><title>test3`llvm::MachineModuleInfo::getOrCreateMachineFunction (2 samples, 0.15%)</title><rect x="60.3872%" y="485" width="0.1489%" height="15" fill="rgb(231,125,12)" fg:x="811" fg:w="2"/><text x="60.6372%" y="495.50"></text></g><g><title>test3`llvm::MachineFunction::MachineFunction (2 samples, 0.15%)</title><rect x="60.3872%" y="469" width="0.1489%" height="15" fill="rgb(216,96,41)" fg:x="811" fg:w="2"/><text x="60.6372%" y="479.50"></text></g><g><title>test3`llvm::MachineFunction::init (2 samples, 0.15%)</title><rect x="60.3872%" y="453" width="0.1489%" height="15" fill="rgb(248,43,45)" fg:x="811" fg:w="2"/><text x="60.6372%" y="463.50"></text></g><g><title>test3`std::make_unique (1 samples, 0.07%)</title><rect x="60.4617%" y="437" width="0.0745%" height="15" fill="rgb(217,222,7)" fg:x="812" fg:w="1"/><text x="60.7117%" y="447.50"></text></g><g><title>test3`llvm::PseudoSourceValueManager::PseudoSourceValueManager (1 samples, 0.07%)</title><rect x="60.4617%" y="421" width="0.0745%" height="15" fill="rgb(233,28,6)" fg:x="812" fg:w="1"/><text x="60.7117%" y="431.50"></text></g><g><title>test3`std::map&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::map&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.4617%" y="405" width="0.0745%" height="15" fill="rgb(231,218,15)" fg:x="812" fg:w="1"/><text x="60.7117%" y="415.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt;,0&gt; &gt;::_Tree&lt;std::_Tmap_traits&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.4617%" y="389" width="0.0745%" height="15" fill="rgb(226,171,48)" fg:x="812" fg:w="1"/><text x="60.7117%" y="399.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.4617%" y="373" width="0.0745%" height="15" fill="rgb(235,201,9)" fg:x="812" fg:w="1"/><text x="60.7117%" y="383.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt;,void * __ptr64&gt;::_Buyheadnode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="60.4617%" y="357" width="0.0745%" height="15" fill="rgb(217,80,15)" fg:x="812" fg:w="1"/><text x="60.7117%" y="367.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="60.4617%" y="341" width="0.0745%" height="15" fill="rgb(219,152,8)" fg:x="812" fg:w="1"/><text x="60.7117%" y="351.50"></text></g><g><title>test3`llvm::AsmPrinter::SetupMachineFunction (1 samples, 0.07%)</title><rect x="60.5361%" y="469" width="0.0745%" height="15" fill="rgb(243,107,38)" fg:x="813" fg:w="1"/><text x="60.7861%" y="479.50"></text></g><g><title>test3`llvm::MapVector&lt;unsigned int,llvm::AsmPrinter::MBBSectionRange,llvm::DenseMap&lt;unsigned int,unsigned int,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,unsigned int&gt; &gt;,std::vector&lt;std::pair&lt;unsigned int,llvm::AsmPrinter::MBBSectionRange&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="60.5361%" y="453" width="0.0745%" height="15" fill="rgb(231,17,5)" fg:x="813" fg:w="1"/><text x="60.7861%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,unsigned int,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,unsigned int&gt; &gt;,unsigned int,unsigned int,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="60.5361%" y="437" width="0.0745%" height="15" fill="rgb(209,25,54)" fg:x="813" fg:w="1"/><text x="60.7861%" y="447.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="60.5361%" y="421" width="0.0745%" height="15" fill="rgb(219,0,2)" fg:x="813" fg:w="1"/><text x="60.7861%" y="431.50"></text></g><g><title>test3`llvm::AsmPrinter::emitConstantPool (1 samples, 0.07%)</title><rect x="60.6106%" y="437" width="0.0745%" height="15" fill="rgb(246,9,5)" fg:x="814" fg:w="1"/><text x="60.8606%" y="447.50"></text></g><g><title>test3`llvm::TargetLoweringObjectFileCOFF::getSectionForConstant (1 samples, 0.07%)</title><rect x="60.6106%" y="421" width="0.0745%" height="15" fill="rgb(226,159,4)" fg:x="814" fg:w="1"/><text x="60.8606%" y="431.50"></text></g><g><title>test3`llvm::MCContext::getCOFFSection (1 samples, 0.07%)</title><rect x="60.6106%" y="405" width="0.0745%" height="15" fill="rgb(219,175,34)" fg:x="814" fg:w="1"/><text x="60.8606%" y="415.50"></text></g><g><title>test3`std::map&lt;llvm::MCContext::COFFSectionKey,llvm::MCSectionCOFF * __ptr64,std::less&lt;llvm::MCContext::COFFSectionKey&gt;,std::allocator&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt; &gt; &gt;::insert&lt;std::pair (1 samples, 0.07%)</title><rect x="60.6106%" y="389" width="0.0745%" height="15" fill="rgb(236,10,46)" fg:x="814" fg:w="1"/><text x="60.8606%" y="399.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;llvm::MCContext::COFFSectionKey,llvm::MCSectionCOFF * __ptr64,std::less&lt;llvm::MCContext::COFFSectionKey&gt;,std::allocator&lt;std::pair&lt;llvm::MCContext::COFFSectionKey const ,llvm::MCSectionCOFF * __ptr64&gt; &gt;,0&gt; &gt;::emplace&lt;std::pair (1 samples, 0.07%)</title><rect x="60.6106%" y="373" width="0.0745%" height="15" fill="rgb(240,211,16)" fg:x="814" fg:w="1"/><text x="60.8606%" y="383.50"></text></g><g><title>test3`std::_List_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;llvm::MachineInstr * __ptr64&gt; &gt; &gt;::_List_iterator&lt;std::_List_val&lt;std::_List_simple_types (1 samples, 0.07%)</title><rect x="60.6106%" y="357" width="0.0745%" height="15" fill="rgb(205,3,43)" fg:x="814" fg:w="1"/><text x="60.8606%" y="367.50"></text></g><g><title>test3`std::_List_const_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;llvm::MachineInstr * __ptr64&gt; &gt; &gt;::_List_const_iterator&lt;std::_List_val&lt;std::_List_simple_types (1 samples, 0.07%)</title><rect x="60.6106%" y="341" width="0.0745%" height="15" fill="rgb(245,7,22)" fg:x="814" fg:w="1"/><text x="60.8606%" y="351.50"></text></g><g><title>test3`std::_List_unchecked_const_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;llvm::MachineInstr * __ptr64&gt; &gt;,std::_Iterator_base12&gt;::_List_unchecked_const_iterator&lt;std::_List_val&lt;std::_List_simple_types (1 samples, 0.07%)</title><rect x="60.6106%" y="325" width="0.0745%" height="15" fill="rgb(239,132,32)" fg:x="814" fg:w="1"/><text x="60.8606%" y="335.50"></text></g><g><title>test3`std::_Iterator_base12::_Adopt (1 samples, 0.07%)</title><rect x="60.6106%" y="309" width="0.0745%" height="15" fill="rgb(228,202,34)" fg:x="814" fg:w="1"/><text x="60.8606%" y="319.50"></text></g><g><title>test3`std::_Iterator_base12::_Adopt_locked (1 samples, 0.07%)</title><rect x="60.6106%" y="293" width="0.0745%" height="15" fill="rgb(254,200,22)" fg:x="814" fg:w="1"/><text x="60.8606%" y="303.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="60.6106%" y="277" width="0.0745%" height="15" fill="rgb(219,10,39)" fg:x="814" fg:w="1"/><text x="60.8606%" y="287.50"></text></g><g><title>test3`llvm::AsmPrinter::emitFunctionHeader (2 samples, 0.15%)</title><rect x="60.6106%" y="453" width="0.1489%" height="15" fill="rgb(226,210,39)" fg:x="814" fg:w="2"/><text x="60.8606%" y="463.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="60.6850%" y="437" width="0.0745%" height="15" fill="rgb(208,219,16)" fg:x="815" fg:w="1"/><text x="60.9350%" y="447.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="60.6850%" y="421" width="0.0745%" height="15" fill="rgb(216,158,51)" fg:x="815" fg:w="1"/><text x="60.9350%" y="431.50"></text></g><g><title>test3`llvm::AsmPrinter::emitPatchableFunctionEntries (1 samples, 0.07%)</title><rect x="60.7595%" y="453" width="0.0745%" height="15" fill="rgb(233,14,44)" fg:x="816" fg:w="1"/><text x="61.0095%" y="463.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="60.7595%" y="437" width="0.0745%" height="15" fill="rgb(237,97,39)" fg:x="816" fg:w="1"/><text x="61.0095%" y="447.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="60.7595%" y="421" width="0.0745%" height="15" fill="rgb(218,198,43)" fg:x="816" fg:w="1"/><text x="61.0095%" y="431.50"></text></g><g><title>test3`llvm::DebugHandlerBase::endFunction (1 samples, 0.07%)</title><rect x="60.8340%" y="453" width="0.0745%" height="15" fill="rgb(231,104,20)" fg:x="817" fg:w="1"/><text x="61.0840%" y="463.50"></text></g><g><title>test3`llvm::DbgValueHistoryMap::clear (1 samples, 0.07%)</title><rect x="60.8340%" y="437" width="0.0745%" height="15" fill="rgb(254,36,13)" fg:x="817" fg:w="1"/><text x="61.0840%" y="447.50"></text></g><g><title>test3`llvm::MapVector&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector&lt;llvm::DbgValueHistoryMap::Entry,4&gt;,llvm::DenseMap&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,unsigned int,llvm::DenseMapInfo&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt; &gt;,llvm::detail::DenseMapPair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,unsigned int&gt; &gt;,std::vector&lt;std::pair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector&lt;llvm::DbgValueHistoryMap::Entry,4&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector (1 samples, 0.07%)</title><rect x="60.8340%" y="421" width="0.0745%" height="15" fill="rgb(248,14,50)" fg:x="817" fg:w="1"/><text x="61.0840%" y="431.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector&lt;llvm::DbgValueHistoryMap::Entry,4&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector (1 samples, 0.07%)</title><rect x="60.8340%" y="405" width="0.0745%" height="15" fill="rgb(217,107,29)" fg:x="817" fg:w="1"/><text x="61.0840%" y="415.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector&lt;llvm::DbgValueHistoryMap::Entry,4&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;llvm::DINode const * __ptr64,llvm::DILocation const * __ptr64&gt;,llvm::SmallVector (1 samples, 0.07%)</title><rect x="60.8340%" y="389" width="0.0745%" height="15" fill="rgb(251,169,33)" fg:x="817" fg:w="1"/><text x="61.0840%" y="399.50"></text></g><g><title>test3`llvm::DwarfDebug::beginInstruction (1 samples, 0.07%)</title><rect x="60.9084%" y="453" width="0.0745%" height="15" fill="rgb(217,108,32)" fg:x="818" fg:w="1"/><text x="61.1584%" y="463.50"></text></g><g><title>test3`llvm::Function::getSubprogram (1 samples, 0.07%)</title><rect x="60.9084%" y="437" width="0.0745%" height="15" fill="rgb(219,66,42)" fg:x="818" fg:w="1"/><text x="61.1584%" y="447.50"></text></g><g><title>test3`llvm::cast_or_null (1 samples, 0.07%)</title><rect x="60.9084%" y="421" width="0.0745%" height="15" fill="rgb(206,180,7)" fg:x="818" fg:w="1"/><text x="61.1584%" y="431.50"></text></g><g><title>test3`llvm::MachineInstr::getPreInstrSymbol (1 samples, 0.07%)</title><rect x="60.9829%" y="453" width="0.0745%" height="15" fill="rgb(208,226,31)" fg:x="819" fg:w="1"/><text x="61.2329%" y="463.50"></text></g><g><title>test3`llvm::MCAssembler::getRelaxAll (1 samples, 0.07%)</title><rect x="61.0573%" y="389" width="0.0745%" height="15" fill="rgb(218,26,49)" fg:x="820" fg:w="1"/><text x="61.3073%" y="399.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::hasFeature (2 samples, 0.15%)</title><rect x="61.1318%" y="341" width="0.1489%" height="15" fill="rgb(233,197,48)" fg:x="821" fg:w="2"/><text x="61.3818%" y="351.50"></text></g><g><title>test3`llvm::FeatureBitset::operator[] (2 samples, 0.15%)</title><rect x="61.1318%" y="325" width="0.1489%" height="15" fill="rgb(252,181,51)" fg:x="821" fg:w="2"/><text x="61.3818%" y="335.50"></text></g><g><title>test3`llvm::X86AsmPrinter::EmitAndCountInstruction (5 samples, 0.37%)</title><rect x="61.0573%" y="437" width="0.3723%" height="15" fill="rgb(253,90,19)" fg:x="820" fg:w="5"/><text x="61.3073%" y="447.50"></text></g><g><title>test3`llvm::MCObjectStreamer::emitInstruction (5 samples, 0.37%)</title><rect x="61.0573%" y="421" width="0.3723%" height="15" fill="rgb(215,171,30)" fg:x="820" fg:w="5"/><text x="61.3073%" y="431.50"></text></g><g><title>test3`llvm::MCObjectStreamer::emitInstructionImpl (5 samples, 0.37%)</title><rect x="61.0573%" y="405" width="0.3723%" height="15" fill="rgb(214,222,9)" fg:x="820" fg:w="5"/><text x="61.3073%" y="415.50"></text></g><g><title>test3`llvm::MCWinCOFFStreamer::emitInstToData (4 samples, 0.30%)</title><rect x="61.1318%" y="389" width="0.2978%" height="15" fill="rgb(223,3,22)" fg:x="821" fg:w="4"/><text x="61.3818%" y="399.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (4 samples, 0.30%)</title><rect x="61.1318%" y="373" width="0.2978%" height="15" fill="rgb(225,196,46)" fg:x="821" fg:w="4"/><text x="61.3818%" y="383.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (4 samples, 0.30%)</title><rect x="61.1318%" y="357" width="0.2978%" height="15" fill="rgb(209,110,37)" fg:x="821" fg:w="4"/><text x="61.3818%" y="367.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (2 samples, 0.15%)</title><rect x="61.2807%" y="341" width="0.1489%" height="15" fill="rgb(249,89,12)" fg:x="823" fg:w="2"/><text x="61.5307%" y="351.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (2 samples, 0.15%)</title><rect x="61.2807%" y="325" width="0.1489%" height="15" fill="rgb(226,27,33)" fg:x="823" fg:w="2"/><text x="61.5307%" y="335.50"></text></g><g><title>test3`llvm::createX86MCCodeEmitter (2 samples, 0.15%)</title><rect x="61.2807%" y="309" width="0.1489%" height="15" fill="rgb(213,82,22)" fg:x="823" fg:w="2"/><text x="61.5307%" y="319.50"></text></g><g><title>test3`llvm::raw_ostream::operator&lt; (2 samples, 0.15%)</title><rect x="61.2807%" y="293" width="0.1489%" height="15" fill="rgb(248,140,0)" fg:x="823" fg:w="2"/><text x="61.5307%" y="303.50"></text></g><g><title>test3`llvm::raw_ostream::write (2 samples, 0.15%)</title><rect x="61.2807%" y="277" width="0.1489%" height="15" fill="rgb(228,106,3)" fg:x="823" fg:w="2"/><text x="61.5307%" y="287.50"></text></g><g><title>test3`llvm::raw_ostream::flush_tied_then_write (2 samples, 0.15%)</title><rect x="61.2807%" y="261" width="0.1489%" height="15" fill="rgb(209,23,37)" fg:x="823" fg:w="2"/><text x="61.5307%" y="271.50"></text></g><g><title>test3`llvm::raw_svector_ostream::write_impl (2 samples, 0.15%)</title><rect x="61.2807%" y="245" width="0.1489%" height="15" fill="rgb(241,93,50)" fg:x="823" fg:w="2"/><text x="61.5307%" y="255.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;char&gt;::append (2 samples, 0.15%)</title><rect x="61.2807%" y="229" width="0.1489%" height="15" fill="rgb(253,46,43)" fg:x="823" fg:w="2"/><text x="61.5307%" y="239.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (2 samples, 0.15%)</title><rect x="61.2807%" y="213" width="0.1489%" height="15" fill="rgb(226,206,43)" fg:x="823" fg:w="2"/><text x="61.5307%" y="223.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (2 samples, 0.15%)</title><rect x="61.2807%" y="197" width="0.1489%" height="15" fill="rgb(217,54,7)" fg:x="823" fg:w="2"/><text x="61.5307%" y="207.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (2 samples, 0.15%)</title><rect x="61.2807%" y="181" width="0.1489%" height="15" fill="rgb(223,5,52)" fg:x="823" fg:w="2"/><text x="61.5307%" y="191.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (2 samples, 0.15%)</title><rect x="61.2807%" y="165" width="0.1489%" height="15" fill="rgb(206,52,46)" fg:x="823" fg:w="2"/><text x="61.5307%" y="175.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (2 samples, 0.15%)</title><rect x="61.2807%" y="149" width="0.1489%" height="15" fill="rgb(253,136,11)" fg:x="823" fg:w="2"/><text x="61.5307%" y="159.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (2 samples, 0.15%)</title><rect x="61.2807%" y="133" width="0.1489%" height="15" fill="rgb(208,106,33)" fg:x="823" fg:w="2"/><text x="61.5307%" y="143.50"></text></g><g><title>test3`llvm::X86AsmPrinter::EmitSEHInstruction (1 samples, 0.07%)</title><rect x="61.4296%" y="437" width="0.0745%" height="15" fill="rgb(206,54,4)" fg:x="825" fg:w="1"/><text x="61.6796%" y="447.50"></text></g><g><title>test3`llvm::Optional&lt;llvm::DIFile::ChecksumInfo (1 samples, 0.07%)</title><rect x="61.5786%" y="421" width="0.0745%" height="15" fill="rgb(213,3,15)" fg:x="827" fg:w="1"/><text x="61.8286%" y="431.50"></text></g><g><title>test3`llvm::optional_detail::OptionalStorage&lt;llvm::DIFile::ChecksumInfo (1 samples, 0.07%)</title><rect x="61.5786%" y="405" width="0.0745%" height="15" fill="rgb(252,211,39)" fg:x="827" fg:w="1"/><text x="61.8286%" y="415.50"></text></g><g><title>test3`llvm::MCOperand::createExpr (1 samples, 0.07%)</title><rect x="61.6530%" y="389" width="0.0745%" height="15" fill="rgb(223,6,36)" fg:x="828" fg:w="1"/><text x="61.9030%" y="399.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="61.6530%" y="373" width="0.0745%" height="15" fill="rgb(252,169,45)" fg:x="828" fg:w="1"/><text x="61.9030%" y="383.50"></text></g><g><title>test3`llvm::X86AsmPrinter::emitInstruction (10 samples, 0.74%)</title><rect x="61.0573%" y="453" width="0.7446%" height="15" fill="rgb(212,48,26)" fg:x="820" fg:w="10"/><text x="61.3073%" y="463.50"></text></g><g><title>test3`llvm::X86AsmPrinter::emitInstruction (4 samples, 0.30%)</title><rect x="61.5041%" y="437" width="0.2978%" height="15" fill="rgb(251,102,48)" fg:x="826" fg:w="4"/><text x="61.7541%" y="447.50"></text></g><g><title>test3`llvm::X86AsmPrinter::emitInstruction (2 samples, 0.15%)</title><rect x="61.6530%" y="421" width="0.1489%" height="15" fill="rgb(243,208,16)" fg:x="828" fg:w="2"/><text x="61.9030%" y="431.50"></text></g><g><title>test3`llvm::X86AsmPrinter::emitInstruction (2 samples, 0.15%)</title><rect x="61.6530%" y="405" width="0.1489%" height="15" fill="rgb(219,96,24)" fg:x="828" fg:w="2"/><text x="61.9030%" y="415.50"></text></g><g><title>test3`llvm::MachineBasicBlock::getSymbol (1 samples, 0.07%)</title><rect x="61.7275%" y="389" width="0.0745%" height="15" fill="rgb(219,33,29)" fg:x="829" fg:w="1"/><text x="61.9775%" y="399.50"></text></g><g><title>test3`llvm::operator+ (1 samples, 0.07%)</title><rect x="61.7275%" y="373" width="0.0745%" height="15" fill="rgb(223,176,5)" fg:x="829" fg:w="1"/><text x="61.9775%" y="383.50"></text></g><g><title>test3`llvm::Twine::concat (1 samples, 0.07%)</title><rect x="61.7275%" y="357" width="0.0745%" height="15" fill="rgb(228,140,14)" fg:x="829" fg:w="1"/><text x="61.9775%" y="367.50"></text></g><g><title>test3`llvm::X86AsmPrinter::runOnMachineFunction (18 samples, 1.34%)</title><rect x="60.5361%" y="485" width="1.3403%" height="15" fill="rgb(217,179,31)" fg:x="813" fg:w="18"/><text x="60.7861%" y="495.50"></text></g><g><title>test3`llvm::AsmPrinter::emitFunctionBody (17 samples, 1.27%)</title><rect x="60.6106%" y="469" width="1.2658%" height="15" fill="rgb(230,9,30)" fg:x="814" fg:w="17"/><text x="60.8606%" y="479.50"></text></g><g><title>test3`llvm::iterator_facade_base (1 samples, 0.07%)</title><rect x="61.8019%" y="453" width="0.0745%" height="15" fill="rgb(230,136,20)" fg:x="830" fg:w="1"/><text x="62.0519%" y="463.50"></text></g><g><title>test3`llvm::createX86DiscriminateMemOpsPass (1 samples, 0.07%)</title><rect x="61.8764%" y="485" width="0.0745%" height="15" fill="rgb(215,210,22)" fg:x="831" fg:w="1"/><text x="62.1264%" y="495.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="61.8764%" y="469" width="0.0745%" height="15" fill="rgb(218,43,5)" fg:x="831" fg:w="1"/><text x="62.1264%" y="479.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="61.9509%" y="453" width="0.0745%" height="15" fill="rgb(216,11,5)" fg:x="832" fg:w="1"/><text x="62.2009%" y="463.50"></text></g><g><title>test3`llvm::IsCPSRDead (1 samples, 0.07%)</title><rect x="61.9509%" y="437" width="0.0745%" height="15" fill="rgb(209,82,29)" fg:x="832" fg:w="1"/><text x="62.2009%" y="447.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::clear (1 samples, 0.07%)</title><rect x="62.0253%" y="453" width="0.0745%" height="15" fill="rgb(244,115,12)" fg:x="833" fg:w="1"/><text x="62.2753%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64&gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64&gt; &gt; &gt; &gt;,llvm::BasicBlock * __ptr64,llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64&gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::Value * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="62.0253%" y="437" width="0.0745%" height="15" fill="rgb(222,82,18)" fg:x="833" fg:w="1"/><text x="62.2753%" y="447.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager (1 samples, 0.07%)</title><rect x="62.0998%" y="325" width="0.0745%" height="15" fill="rgb(249,227,8)" fg:x="834" fg:w="1"/><text x="62.3498%" y="335.50"></text></g><g><title>test3`llvm::DefaultDOTGraphTraits::getEdgeTarget&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="62.0998%" y="309" width="0.0745%" height="15" fill="rgb(253,141,45)" fg:x="834" fg:w="1"/><text x="62.3498%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="62.0998%" y="437" width="0.1489%" height="15" fill="rgb(234,184,4)" fg:x="834" fg:w="2"/><text x="62.3498%" y="447.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="62.0998%" y="421" width="0.1489%" height="15" fill="rgb(218,194,23)" fg:x="834" fg:w="2"/><text x="62.3498%" y="431.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;::InsertIntoBucket (2 samples, 0.15%)</title><rect x="62.0998%" y="405" width="0.1489%" height="15" fill="rgb(235,66,41)" fg:x="834" fg:w="2"/><text x="62.3498%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;::InsertIntoBucketImpl (2 samples, 0.15%)</title><rect x="62.0998%" y="389" width="0.1489%" height="15" fill="rgb(245,217,1)" fg:x="834" fg:w="2"/><text x="62.3498%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="62.0998%" y="373" width="0.1489%" height="15" fill="rgb(229,91,1)" fg:x="834" fg:w="2"/><text x="62.3498%" y="383.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="62.0998%" y="357" width="0.1489%" height="15" fill="rgb(207,101,30)" fg:x="834" fg:w="2"/><text x="62.3498%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="62.0998%" y="341" width="0.1489%" height="15" fill="rgb(223,82,49)" fg:x="834" fg:w="2"/><text x="62.3498%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;,llvm::Value const * __ptr64,enum llvm::ISD::NodeType,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,enum llvm::ISD::NodeType&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="62.1742%" y="325" width="0.0745%" height="15" fill="rgb(218,167,17)" fg:x="835" fg:w="1"/><text x="62.4242%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="62.1742%" y="309" width="0.0745%" height="15" fill="rgb(208,103,14)" fg:x="835" fg:w="1"/><text x="62.4242%" y="319.50"></text></g><g><title>test3`llvm::ErrorOr&lt;llvm::StringMap&lt;unsigned __int64,llvm::MallocAllocator&gt; &gt;::compareThisIfSameType&lt;llvm::ErrorOr&lt;llvm::StringMap (1 samples, 0.07%)</title><rect x="62.1742%" y="293" width="0.0745%" height="15" fill="rgb(238,20,8)" fg:x="835" fg:w="1"/><text x="62.4242%" y="303.50"></text></g><g><title>test3`llvm::GetReturnInfo (1 samples, 0.07%)</title><rect x="62.2487%" y="437" width="0.0745%" height="15" fill="rgb(218,80,54)" fg:x="836" fg:w="1"/><text x="62.4987%" y="447.50"></text></g><g><title>test3`llvm::ComputeValueVTs (1 samples, 0.07%)</title><rect x="62.2487%" y="421" width="0.0745%" height="15" fill="rgb(240,144,17)" fg:x="836" fg:w="1"/><text x="62.4987%" y="431.50"></text></g><g><title>test3`llvm::ComputeValueVTs (1 samples, 0.07%)</title><rect x="62.2487%" y="405" width="0.0745%" height="15" fill="rgb(245,27,50)" fg:x="836" fg:w="1"/><text x="62.4987%" y="415.50"></text></g><g><title>test3`llvm::ComputeValueVTs (1 samples, 0.07%)</title><rect x="62.2487%" y="389" width="0.0745%" height="15" fill="rgb(251,51,7)" fg:x="836" fg:w="1"/><text x="62.4987%" y="399.50"></text></g><g><title>test3`llvm::TargetLoweringBase::getValueType (1 samples, 0.07%)</title><rect x="62.2487%" y="373" width="0.0745%" height="15" fill="rgb(245,217,29)" fg:x="836" fg:w="1"/><text x="62.4987%" y="383.50"></text></g><g><title>test3`llvm::EVT::getEVT (1 samples, 0.07%)</title><rect x="62.2487%" y="357" width="0.0745%" height="15" fill="rgb(221,176,29)" fg:x="836" fg:w="1"/><text x="62.4987%" y="367.50"></text></g><g><title>test3`llvm::MachineFrameInfo::CreateStackObject (1 samples, 0.07%)</title><rect x="62.3232%" y="437" width="0.0745%" height="15" fill="rgb(212,180,24)" fg:x="837" fg:w="1"/><text x="62.5732%" y="447.50"></text></g><g><title>test3`llvm::MachineFrameInfo::ensureMaxAlignment (1 samples, 0.07%)</title><rect x="62.3232%" y="421" width="0.0745%" height="15" fill="rgb(254,24,2)" fg:x="837" fg:w="1"/><text x="62.5732%" y="431.50"></text></g><g><title>test3`llvm::MachineFunction::CreateMachineBasicBlock (1 samples, 0.07%)</title><rect x="62.3976%" y="437" width="0.0745%" height="15" fill="rgb(230,100,2)" fg:x="838" fg:w="1"/><text x="62.6476%" y="447.50"></text></g><g><title>test3`llvm::MachineBasicBlock::MachineBasicBlock (1 samples, 0.07%)</title><rect x="62.3976%" y="421" width="0.0745%" height="15" fill="rgb(219,142,25)" fg:x="838" fg:w="1"/><text x="62.6476%" y="431.50"></text></g><g><title>test3`llvm::iplist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking&lt;1&gt; &gt;::iplist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking (1 samples, 0.07%)</title><rect x="62.3976%" y="405" width="0.0745%" height="15" fill="rgb(240,73,43)" fg:x="838" fg:w="1"/><text x="62.6476%" y="415.50"></text></g><g><title>test3`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking&lt;1&gt; &gt;,llvm::ilist_traits&lt;llvm::MachineInstr&gt; &gt;::iplist_impl&lt;llvm::simple_ilist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking&lt;1&gt; &gt;,llvm::ilist_traits (1 samples, 0.07%)</title><rect x="62.3976%" y="389" width="0.0745%" height="15" fill="rgb(214,114,15)" fg:x="838" fg:w="1"/><text x="62.6476%" y="399.50"></text></g><g><title>test3`llvm::simple_ilist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking&lt;1&gt; &gt;::simple_ilist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking (1 samples, 0.07%)</title><rect x="62.3976%" y="373" width="0.0745%" height="15" fill="rgb(207,130,4)" fg:x="838" fg:w="1"/><text x="62.6476%" y="383.50"></text></g><g><title>test3`llvm::ilist_sentinel&lt;llvm::ilist_detail::node_options&lt;llvm::MachineInstr,1,1,void&gt; &gt;::ilist_sentinel&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="62.3976%" y="357" width="0.0745%" height="15" fill="rgb(221,25,40)" fg:x="838" fg:w="1"/><text x="62.6476%" y="367.50"></text></g><g><title>test3`llvm::ilist_node_base (1 samples, 0.07%)</title><rect x="62.3976%" y="341" width="0.0745%" height="15" fill="rgb(241,184,7)" fg:x="838" fg:w="1"/><text x="62.6476%" y="351.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::set (6 samples, 0.45%)</title><rect x="62.0998%" y="453" width="0.4468%" height="15" fill="rgb(235,159,4)" fg:x="834" fg:w="6"/><text x="62.3498%" y="463.50"></text></g><g><title>test3`llvm::X86TargetLowering::CanLowerReturn (1 samples, 0.07%)</title><rect x="62.4721%" y="437" width="0.0745%" height="15" fill="rgb(214,87,48)" fg:x="839" fg:w="1"/><text x="62.7221%" y="447.50"></text></g><g><title>test3`llvm::CCState::CheckReturn (1 samples, 0.07%)</title><rect x="62.4721%" y="421" width="0.0745%" height="15" fill="rgb(246,198,24)" fg:x="839" fg:w="1"/><text x="62.7221%" y="431.50"></text></g><g><title>test3`llvm::RetCC_X86 (1 samples, 0.07%)</title><rect x="62.4721%" y="405" width="0.0745%" height="15" fill="rgb(209,66,40)" fg:x="839" fg:w="1"/><text x="62.7221%" y="415.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="62.4721%" y="389" width="0.0745%" height="15" fill="rgb(233,147,39)" fg:x="839" fg:w="1"/><text x="62.7221%" y="399.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="62.4721%" y="373" width="0.0745%" height="15" fill="rgb(231,145,52)" fg:x="839" fg:w="1"/><text x="62.7221%" y="383.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="62.4721%" y="357" width="0.0745%" height="15" fill="rgb(206,20,26)" fg:x="839" fg:w="1"/><text x="62.7221%" y="367.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="62.4721%" y="341" width="0.0745%" height="15" fill="rgb(238,220,4)" fg:x="839" fg:w="1"/><text x="62.7221%" y="351.50"></text></g><g><title>test3`llvm::CCState::AllocateReg (1 samples, 0.07%)</title><rect x="62.4721%" y="325" width="0.0745%" height="15" fill="rgb(252,195,42)" fg:x="839" fg:w="1"/><text x="62.7221%" y="335.50"></text></g><g><title>test3`llvm::CCState::getFirstUnallocated (1 samples, 0.07%)</title><rect x="62.4721%" y="309" width="0.0745%" height="15" fill="rgb(209,10,6)" fg:x="839" fg:w="1"/><text x="62.7221%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64&gt; &gt;,llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="62.6210%" y="437" width="0.0745%" height="15" fill="rgb(229,3,52)" fg:x="841" fg:w="1"/><text x="62.8710%" y="447.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64&gt; &gt;,llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="62.6210%" y="421" width="0.0745%" height="15" fill="rgb(253,49,37)" fg:x="841" fg:w="1"/><text x="62.8710%" y="431.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64&gt; &gt;,llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock const * __ptr64,llvm::MachineBasicBlock * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="62.6210%" y="405" width="0.0745%" height="15" fill="rgb(240,103,49)" fg:x="841" fg:w="1"/><text x="62.8710%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="62.6210%" y="389" width="0.0745%" height="15" fill="rgb(250,182,30)" fg:x="841" fg:w="1"/><text x="62.8710%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Value * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt; &gt; &gt;,llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Value * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AssumptionCacheTracker::FunctionCallbackVH,std::unique_ptr&lt;llvm::AssumptionCache,std::default_delete&lt;llvm::AssumptionCache&gt; &gt; &gt; &gt;::getHashValue (1 samples, 0.07%)</title><rect x="62.6210%" y="373" width="0.0745%" height="15" fill="rgb(248,8,30)" fg:x="841" fg:w="1"/><text x="62.8710%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,unsigned int&gt; &gt;,llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="62.6955%" y="405" width="0.0745%" height="15" fill="rgb(237,120,30)" fg:x="842" fg:w="1"/><text x="62.9455%" y="415.50"></text></g><g><title>test3`llvm::FastISel::flushLocalValueMap (2 samples, 0.15%)</title><rect x="62.6955%" y="421" width="0.1489%" height="15" fill="rgb(221,146,34)" fg:x="842" fg:w="2"/><text x="62.9455%" y="431.50"></text></g><g><title>test3`llvm::detail::DenseSetImpl&lt;llvm::Register,llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="62.7699%" y="405" width="0.0745%" height="15" fill="rgb(242,55,13)" fg:x="843" fg:w="1"/><text x="63.0199%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;,llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="62.7699%" y="389" width="0.0745%" height="15" fill="rgb(242,112,31)" fg:x="843" fg:w="1"/><text x="63.0199%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;,llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="62.7699%" y="373" width="0.0745%" height="15" fill="rgb(249,192,27)" fg:x="843" fg:w="1"/><text x="63.0199%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="62.7699%" y="357" width="0.0745%" height="15" fill="rgb(208,204,44)" fg:x="843" fg:w="1"/><text x="63.0199%" y="367.50"></text></g><g><title>test3`llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="62.7699%" y="341" width="0.0745%" height="15" fill="rgb(208,93,54)" fg:x="843" fg:w="1"/><text x="63.0199%" y="351.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="62.7699%" y="325" width="0.0745%" height="15" fill="rgb(242,1,31)" fg:x="843" fg:w="1"/><text x="63.0199%" y="335.50"></text></g><g><title>test3`llvm::FastISel::handlePHINodesInSuccessorBlocks (1 samples, 0.07%)</title><rect x="62.8444%" y="421" width="0.0745%" height="15" fill="rgb(241,83,25)" fg:x="844" fg:w="1"/><text x="63.0944%" y="431.50"></text></g><g><title>test3`llvm::Instruction::getSuccessor (1 samples, 0.07%)</title><rect x="62.8444%" y="405" width="0.0745%" height="15" fill="rgb(205,169,50)" fg:x="844" fg:w="1"/><text x="63.0944%" y="415.50"></text></g><g><title>test3`llvm::BranchInst::getSuccessor (1 samples, 0.07%)</title><rect x="62.8444%" y="389" width="0.0745%" height="15" fill="rgb(239,186,37)" fg:x="844" fg:w="1"/><text x="63.0944%" y="399.50"></text></g><g><title>test3`llvm::cast_or_null (1 samples, 0.07%)</title><rect x="62.8444%" y="373" width="0.0745%" height="15" fill="rgb(205,221,10)" fg:x="844" fg:w="1"/><text x="63.0944%" y="383.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="62.9188%" y="389" width="0.0745%" height="15" fill="rgb(218,196,15)" fg:x="845" fg:w="1"/><text x="63.1688%" y="399.50"></text></g><g><title>test3`llvm::FastISel::fastEmit_ri_ (2 samples, 0.15%)</title><rect x="62.9933%" y="389" width="0.1489%" height="15" fill="rgb(218,196,35)" fg:x="846" fg:w="2"/><text x="63.2433%" y="399.50"></text></g><g><title>test3`llvm::X86::createFastISel (2 samples, 0.15%)</title><rect x="62.9933%" y="373" width="0.1489%" height="15" fill="rgb(233,63,24)" fg:x="846" fg:w="2"/><text x="63.2433%" y="383.50"></text></g><g><title>test3`llvm::X86::createFastISel (2 samples, 0.15%)</title><rect x="62.9933%" y="357" width="0.1489%" height="15" fill="rgb(225,8,4)" fg:x="846" fg:w="2"/><text x="63.2433%" y="367.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.0678%" y="341" width="0.0745%" height="15" fill="rgb(234,105,35)" fg:x="847" fg:w="1"/><text x="63.3178%" y="351.50"></text></g><g><title>test3`llvm::FastISel::fastEmitInst_ri (1 samples, 0.07%)</title><rect x="63.0678%" y="325" width="0.0745%" height="15" fill="rgb(236,21,32)" fg:x="847" fg:w="1"/><text x="63.3178%" y="335.50"></text></g><g><title>test3`llvm::MipsABIFlagsSection::getGPRSizeValue (1 samples, 0.07%)</title><rect x="63.0678%" y="309" width="0.0745%" height="15" fill="rgb(228,109,6)" fg:x="847" fg:w="1"/><text x="63.3178%" y="319.50"></text></g><g><title>test3`llvm::FastISel::selectBinaryOp (4 samples, 0.30%)</title><rect x="62.9188%" y="405" width="0.2978%" height="15" fill="rgb(229,215,31)" fg:x="845" fg:w="4"/><text x="63.1688%" y="415.50"></text></g><g><title>test3`llvm::FastISel::getRegForValue (1 samples, 0.07%)</title><rect x="63.1422%" y="389" width="0.0745%" height="15" fill="rgb(221,52,54)" fg:x="848" fg:w="1"/><text x="63.3922%" y="399.50"></text></g><g><title>test3`llvm::FastISel::materializeRegForValue (1 samples, 0.07%)</title><rect x="63.1422%" y="373" width="0.0745%" height="15" fill="rgb(252,129,43)" fg:x="848" fg:w="1"/><text x="63.3922%" y="383.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.1422%" y="357" width="0.0745%" height="15" fill="rgb(248,183,27)" fg:x="848" fg:w="1"/><text x="63.3922%" y="367.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.1422%" y="341" width="0.0745%" height="15" fill="rgb(250,0,22)" fg:x="848" fg:w="1"/><text x="63.3922%" y="351.50"></text></g><g><title>test3`llvm::ArrayRef&lt;int&gt;::ArrayRef&lt;int&gt; (1 samples, 0.07%)</title><rect x="63.1422%" y="325" width="0.0745%" height="15" fill="rgb(213,166,10)" fg:x="848" fg:w="1"/><text x="63.3922%" y="335.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="63.2167%" y="389" width="0.0745%" height="15" fill="rgb(207,163,36)" fg:x="849" fg:w="1"/><text x="63.4667%" y="399.50"></text></g><g><title>test3`llvm::FastISel::selectBitCast (2 samples, 0.15%)</title><rect x="63.2167%" y="405" width="0.1489%" height="15" fill="rgb(208,122,22)" fg:x="849" fg:w="2"/><text x="63.4667%" y="415.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.2911%" y="389" width="0.0745%" height="15" fill="rgb(207,104,49)" fg:x="850" fg:w="1"/><text x="63.5411%" y="399.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.2911%" y="373" width="0.0745%" height="15" fill="rgb(248,211,50)" fg:x="850" fg:w="1"/><text x="63.5411%" y="383.50"></text></g><g><title>test3`llvm::MachineInstr::setPhysRegsDeadExcept (1 samples, 0.07%)</title><rect x="63.3656%" y="357" width="0.0745%" height="15" fill="rgb(217,13,45)" fg:x="851" fg:w="1"/><text x="63.6156%" y="367.50"></text></g><g><title>test3`llvm::MachineInstr::addRegisterDefined (1 samples, 0.07%)</title><rect x="63.3656%" y="341" width="0.0745%" height="15" fill="rgb(211,216,49)" fg:x="851" fg:w="1"/><text x="63.6156%" y="351.50"></text></g><g><title>test3`llvm::MachineInstr::findRegisterDefOperand (1 samples, 0.07%)</title><rect x="63.3656%" y="325" width="0.0745%" height="15" fill="rgb(221,58,53)" fg:x="851" fg:w="1"/><text x="63.6156%" y="335.50"></text></g><g><title>test3`llvm::MachineInstr::findRegisterDefOperandIdx (1 samples, 0.07%)</title><rect x="63.3656%" y="309" width="0.0745%" height="15" fill="rgb(220,112,41)" fg:x="851" fg:w="1"/><text x="63.6156%" y="319.50"></text></g><g><title>test3`llvm::MCRegisterInfo::isSubRegister (1 samples, 0.07%)</title><rect x="63.3656%" y="293" width="0.0745%" height="15" fill="rgb(236,38,28)" fg:x="851" fg:w="1"/><text x="63.6156%" y="303.50"></text></g><g><title>test3`llvm::MCRegisterInfo::isSuperRegister (1 samples, 0.07%)</title><rect x="63.3656%" y="277" width="0.0745%" height="15" fill="rgb(227,195,22)" fg:x="851" fg:w="1"/><text x="63.6156%" y="287.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="63.3656%" y="261" width="0.0745%" height="15" fill="rgb(214,55,33)" fg:x="851" fg:w="1"/><text x="63.6156%" y="271.50"></text></g><g><title>test3`llvm::CCState::AnalyzeCallOperands (1 samples, 0.07%)</title><rect x="63.4401%" y="341" width="0.0745%" height="15" fill="rgb(248,80,13)" fg:x="852" fg:w="1"/><text x="63.6901%" y="351.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.4401%" y="325" width="0.0745%" height="15" fill="rgb(238,52,6)" fg:x="852" fg:w="1"/><text x="63.6901%" y="335.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.4401%" y="309" width="0.0745%" height="15" fill="rgb(224,198,47)" fg:x="852" fg:w="1"/><text x="63.6901%" y="319.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.4401%" y="293" width="0.0745%" height="15" fill="rgb(233,171,20)" fg:x="852" fg:w="1"/><text x="63.6901%" y="303.50"></text></g><g><title>test3`llvm::CCState::AllocateReg (1 samples, 0.07%)</title><rect x="63.4401%" y="277" width="0.0745%" height="15" fill="rgb(241,30,25)" fg:x="852" fg:w="1"/><text x="63.6901%" y="287.50"></text></g><g><title>test3`llvm::CCState::MarkAllocated (1 samples, 0.07%)</title><rect x="63.4401%" y="261" width="0.0745%" height="15" fill="rgb(207,171,38)" fg:x="852" fg:w="1"/><text x="63.6901%" y="271.50"></text></g><g><title>test3`llvm::MCRegAliasIterator::operator++ (1 samples, 0.07%)</title><rect x="63.4401%" y="245" width="0.0745%" height="15" fill="rgb(234,70,1)" fg:x="852" fg:w="1"/><text x="63.6901%" y="255.50"></text></g><g><title>test3`llvm::MCRegAliasIterator::advance (1 samples, 0.07%)</title><rect x="63.4401%" y="229" width="0.0745%" height="15" fill="rgb(232,178,18)" fg:x="852" fg:w="1"/><text x="63.6901%" y="239.50"></text></g><g><title>test3`llvm::CCState::AnalyzeCallResult (1 samples, 0.07%)</title><rect x="63.5145%" y="341" width="0.0745%" height="15" fill="rgb(241,78,40)" fg:x="853" fg:w="1"/><text x="63.7645%" y="351.50"></text></g><g><title>test3`llvm::RetCC_X86 (1 samples, 0.07%)</title><rect x="63.5145%" y="325" width="0.0745%" height="15" fill="rgb(222,35,25)" fg:x="853" fg:w="1"/><text x="63.7645%" y="335.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.5145%" y="309" width="0.0745%" height="15" fill="rgb(207,92,16)" fg:x="853" fg:w="1"/><text x="63.7645%" y="319.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.5145%" y="293" width="0.0745%" height="15" fill="rgb(216,59,51)" fg:x="853" fg:w="1"/><text x="63.7645%" y="303.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.5145%" y="277" width="0.0745%" height="15" fill="rgb(213,80,28)" fg:x="853" fg:w="1"/><text x="63.7645%" y="287.50"></text></g><g><title>test3`llvm::CC_X86 (1 samples, 0.07%)</title><rect x="63.5145%" y="261" width="0.0745%" height="15" fill="rgb(220,93,7)" fg:x="853" fg:w="1"/><text x="63.7645%" y="271.50"></text></g><g><title>test3`llvm::CCState::AllocateReg (1 samples, 0.07%)</title><rect x="63.5145%" y="245" width="0.0745%" height="15" fill="rgb(225,24,44)" fg:x="853" fg:w="1"/><text x="63.7645%" y="255.50"></text></g><g><title>test3`llvm::CCState::MarkAllocated (1 samples, 0.07%)</title><rect x="63.5145%" y="229" width="0.0745%" height="15" fill="rgb(243,74,40)" fg:x="853" fg:w="1"/><text x="63.7645%" y="239.50"></text></g><g><title>test3`llvm::MCRegAliasIterator::operator++ (1 samples, 0.07%)</title><rect x="63.5145%" y="213" width="0.0745%" height="15" fill="rgb(228,39,7)" fg:x="853" fg:w="1"/><text x="63.7645%" y="223.50"></text></g><g><title>test3`llvm::MCRegAliasIterator::advance (1 samples, 0.07%)</title><rect x="63.5145%" y="197" width="0.0745%" height="15" fill="rgb(227,79,8)" fg:x="853" fg:w="1"/><text x="63.7645%" y="207.50"></text></g><g><title>test3`llvm::MCRegisterInfo::DiffListIterator::operator++ (1 samples, 0.07%)</title><rect x="63.5145%" y="181" width="0.0745%" height="15" fill="rgb(236,58,11)" fg:x="853" fg:w="1"/><text x="63.7645%" y="191.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="63.5145%" y="165" width="0.0745%" height="15" fill="rgb(249,63,35)" fg:x="853" fg:w="1"/><text x="63.7645%" y="175.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="63.5890%" y="341" width="0.0745%" height="15" fill="rgb(252,114,16)" fg:x="854" fg:w="1"/><text x="63.8390%" y="351.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="63.5890%" y="325" width="0.0745%" height="15" fill="rgb(254,151,24)" fg:x="854" fg:w="1"/><text x="63.8390%" y="335.50"></text></g><g><title>test3`llvm::FastISel::lowerCallTo (5 samples, 0.37%)</title><rect x="63.3656%" y="373" width="0.3723%" height="15" fill="rgb(253,54,39)" fg:x="851" fg:w="5"/><text x="63.6156%" y="383.50"></text></g><g><title>test3`llvm::X86::createFastISel (4 samples, 0.30%)</title><rect x="63.4401%" y="357" width="0.2978%" height="15" fill="rgb(243,25,45)" fg:x="852" fg:w="4"/><text x="63.6901%" y="367.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.6634%" y="341" width="0.0745%" height="15" fill="rgb(234,134,9)" fg:x="855" fg:w="1"/><text x="63.9134%" y="351.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.6634%" y="325" width="0.0745%" height="15" fill="rgb(227,166,31)" fg:x="855" fg:w="1"/><text x="63.9134%" y="335.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.6634%" y="309" width="0.0745%" height="15" fill="rgb(245,143,41)" fg:x="855" fg:w="1"/><text x="63.9134%" y="319.50"></text></g><g><title>test3`llvm::FastISel::getRegForValue (1 samples, 0.07%)</title><rect x="63.6634%" y="293" width="0.0745%" height="15" fill="rgb(238,181,32)" fg:x="855" fg:w="1"/><text x="63.9134%" y="303.50"></text></g><g><title>test3`llvm::FastISel::materializeRegForValue (1 samples, 0.07%)</title><rect x="63.6634%" y="277" width="0.0745%" height="15" fill="rgb(224,113,18)" fg:x="855" fg:w="1"/><text x="63.9134%" y="287.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.6634%" y="261" width="0.0745%" height="15" fill="rgb(240,229,28)" fg:x="855" fg:w="1"/><text x="63.9134%" y="271.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="63.6634%" y="245" width="0.0745%" height="15" fill="rgb(250,185,3)" fg:x="855" fg:w="1"/><text x="63.9134%" y="255.50"></text></g><g><title>test3`llvm::FastISel::fastEmitInst_i (1 samples, 0.07%)</title><rect x="63.6634%" y="229" width="0.0745%" height="15" fill="rgb(212,59,25)" fg:x="855" fg:w="1"/><text x="63.9134%" y="239.50"></text></g><g><title>test3`llvm::BuildMI (1 samples, 0.07%)</title><rect x="63.6634%" y="213" width="0.0745%" height="15" fill="rgb(221,87,20)" fg:x="855" fg:w="1"/><text x="63.9134%" y="223.50"></text></g><g><title>test3`llvm::MachineInstrBuilder::addReg (1 samples, 0.07%)</title><rect x="63.6634%" y="197" width="0.0745%" height="15" fill="rgb(213,74,28)" fg:x="855" fg:w="1"/><text x="63.9134%" y="207.50"></text></g><g><title>test3`llvm::MachineInstr::addOperand (1 samples, 0.07%)</title><rect x="63.6634%" y="181" width="0.0745%" height="15" fill="rgb(224,132,34)" fg:x="855" fg:w="1"/><text x="63.9134%" y="191.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::addRegOperandToUseList (1 samples, 0.07%)</title><rect x="63.6634%" y="165" width="0.0745%" height="15" fill="rgb(222,101,24)" fg:x="855" fg:w="1"/><text x="63.9134%" y="175.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::getRegUseDefListHead (1 samples, 0.07%)</title><rect x="63.6634%" y="149" width="0.0745%" height="15" fill="rgb(254,142,4)" fg:x="855" fg:w="1"/><text x="63.9134%" y="159.50"></text></g><g><title>test3`llvm::IndexedMap&lt;std::pair&lt;llvm::PointerUnion (1 samples, 0.07%)</title><rect x="63.6634%" y="133" width="0.0745%" height="15" fill="rgb(230,229,49)" fg:x="855" fg:w="1"/><text x="63.9134%" y="143.50"></text></g><g><title>test3`llvm::VirtReg2IndexFunctor::operator (1 samples, 0.07%)</title><rect x="63.6634%" y="117" width="0.0745%" height="15" fill="rgb(238,70,47)" fg:x="855" fg:w="1"/><text x="63.9134%" y="127.50"></text></g><g><title>test3`llvm::Register::virtReg2Index (1 samples, 0.07%)</title><rect x="63.6634%" y="101" width="0.0745%" height="15" fill="rgb(231,160,17)" fg:x="855" fg:w="1"/><text x="63.9134%" y="111.50"></text></g><g><title>test3`llvm::Register::isVirtualRegister (1 samples, 0.07%)</title><rect x="63.6634%" y="85" width="0.0745%" height="15" fill="rgb(218,68,53)" fg:x="855" fg:w="1"/><text x="63.9134%" y="95.50"></text></g><g><title>test3`llvm::Register::isStackSlot (1 samples, 0.07%)</title><rect x="63.6634%" y="69" width="0.0745%" height="15" fill="rgb(236,111,10)" fg:x="855" fg:w="1"/><text x="63.9134%" y="79.50"></text></g><g><title>test3`llvm::MCRegister::isStackSlot (1 samples, 0.07%)</title><rect x="63.6634%" y="53" width="0.0745%" height="15" fill="rgb(224,34,41)" fg:x="855" fg:w="1"/><text x="63.9134%" y="63.50"></text></g><g><title>test3`llvm::TargetLoweringBase::ArgListEntry::setAttributes (1 samples, 0.07%)</title><rect x="63.7379%" y="373" width="0.0745%" height="15" fill="rgb(241,118,19)" fg:x="856" fg:w="1"/><text x="63.9879%" y="383.50"></text></g><g><title>test3`llvm::CallBase::paramHasAttr (1 samples, 0.07%)</title><rect x="63.7379%" y="357" width="0.0745%" height="15" fill="rgb(238,129,25)" fg:x="856" fg:w="1"/><text x="63.9879%" y="367.50"></text></g><g><title>test3`llvm::AttributeList::hasParamAttribute (1 samples, 0.07%)</title><rect x="63.7379%" y="341" width="0.0745%" height="15" fill="rgb(238,22,31)" fg:x="856" fg:w="1"/><text x="63.9879%" y="351.50"></text></g><g><title>test3`llvm::AttributeList::hasAttribute (1 samples, 0.07%)</title><rect x="63.7379%" y="325" width="0.0745%" height="15" fill="rgb(222,174,48)" fg:x="856" fg:w="1"/><text x="63.9879%" y="335.50"></text></g><g><title>test3`llvm::AttributeList::getAttributes (1 samples, 0.07%)</title><rect x="63.7379%" y="309" width="0.0745%" height="15" fill="rgb(206,152,40)" fg:x="856" fg:w="1"/><text x="63.9879%" y="319.50"></text></g><g><title>test3`llvm::AAResultBase&lt;llvm::AMDGPUAAResult&gt;::AAResultBase (1 samples, 0.07%)</title><rect x="63.7379%" y="293" width="0.0745%" height="15" fill="rgb(218,99,54)" fg:x="856" fg:w="1"/><text x="63.9879%" y="303.50"></text></g><g><title>test3`llvm::FastISel::selectOperator (13 samples, 0.97%)</title><rect x="62.9188%" y="421" width="0.9680%" height="15" fill="rgb(220,174,26)" fg:x="845" fg:w="13"/><text x="63.1688%" y="431.50"></text></g><g><title>test3`llvm::FastISel::selectCall (7 samples, 0.52%)</title><rect x="63.3656%" y="405" width="0.5212%" height="15" fill="rgb(245,116,9)" fg:x="851" fg:w="7"/><text x="63.6156%" y="415.50"></text></g><g><title>test3`llvm::FastISel::lowerCall (7 samples, 0.52%)</title><rect x="63.3656%" y="389" width="0.5212%" height="15" fill="rgb(209,72,35)" fg:x="851" fg:w="7"/><text x="63.6156%" y="399.50"></text></g><g><title>test3`std::vector&lt;llvm::TargetLoweringBase::ArgListEntry,std::allocator (1 samples, 0.07%)</title><rect x="63.8124%" y="373" width="0.0745%" height="15" fill="rgb(226,126,21)" fg:x="857" fg:w="1"/><text x="64.0624%" y="383.50"></text></g><g><title>test3`std::vector&lt;llvm::TargetLoweringBase::ArgListEntry,std::allocator&lt;llvm::TargetLoweringBase::ArgListEntry&gt; &gt;::emplace_back (1 samples, 0.07%)</title><rect x="63.8124%" y="357" width="0.0745%" height="15" fill="rgb(227,192,1)" fg:x="857" fg:w="1"/><text x="64.0624%" y="367.50"></text></g><g><title>test3`std::vector&lt;llvm::TargetLoweringBase::ArgListEntry,std::allocator&lt;llvm::TargetLoweringBase::ArgListEntry&gt; &gt;::_Emplace_back_with_unused_capacity (1 samples, 0.07%)</title><rect x="63.8124%" y="341" width="0.0745%" height="15" fill="rgb(237,180,29)" fg:x="857" fg:w="1"/><text x="64.0624%" y="351.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;llvm::RelocationValueRef const ,unsigned __int64&gt;,void * __ptr64&gt; &gt; &gt;::construct&lt;std::pair&lt;llvm::RelocationValueRef const ,unsigned __int64&gt;,std::pair (1 samples, 0.07%)</title><rect x="63.8124%" y="325" width="0.0745%" height="15" fill="rgb(230,197,35)" fg:x="857" fg:w="1"/><text x="64.0624%" y="335.50"></text></g><g><title>test3`llvm::DataLayout::getABITypeAlign (1 samples, 0.07%)</title><rect x="63.8868%" y="389" width="0.0745%" height="15" fill="rgb(246,193,31)" fg:x="858" fg:w="1"/><text x="64.1368%" y="399.50"></text></g><g><title>test3`llvm::DataLayout::getAlignment (1 samples, 0.07%)</title><rect x="63.8868%" y="373" width="0.0745%" height="15" fill="rgb(241,36,4)" fg:x="858" fg:w="1"/><text x="64.1368%" y="383.50"></text></g><g><title>test3`llvm::DataLayout::getIntegerAlignment (1 samples, 0.07%)</title><rect x="63.8868%" y="357" width="0.0745%" height="15" fill="rgb(241,130,17)" fg:x="858" fg:w="1"/><text x="64.1368%" y="367.50"></text></g><g><title>test3`llvm::DataLayout::findAlignmentLowerBound (1 samples, 0.07%)</title><rect x="63.8868%" y="341" width="0.0745%" height="15" fill="rgb(206,137,32)" fg:x="858" fg:w="1"/><text x="64.1368%" y="351.50"></text></g><g><title>test3`llvm::DataLayout::findAlignmentLowerBound (1 samples, 0.07%)</title><rect x="63.8868%" y="325" width="0.0745%" height="15" fill="rgb(237,228,51)" fg:x="858" fg:w="1"/><text x="64.1368%" y="335.50"></text></g><g><title>test3`std::move_backward (1 samples, 0.07%)</title><rect x="63.8868%" y="309" width="0.0745%" height="15" fill="rgb(243,6,42)" fg:x="858" fg:w="1"/><text x="64.1368%" y="319.50"></text></g><g><title>test3`std::move_backward (1 samples, 0.07%)</title><rect x="63.8868%" y="293" width="0.0745%" height="15" fill="rgb(251,74,28)" fg:x="858" fg:w="1"/><text x="64.1368%" y="303.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="63.8868%" y="277" width="0.0745%" height="15" fill="rgb(218,20,49)" fg:x="858" fg:w="1"/><text x="64.1368%" y="287.50"></text></g><g><title>test3`llvm::FastISel::createMachineMemOperandFor (1 samples, 0.07%)</title><rect x="63.9613%" y="389" width="0.0745%" height="15" fill="rgb(238,28,14)" fg:x="859" fg:w="1"/><text x="64.2113%" y="399.50"></text></g><g><title>test3`llvm::DataLayout::getTypeStoreSize (1 samples, 0.07%)</title><rect x="63.9613%" y="373" width="0.0745%" height="15" fill="rgb(229,40,46)" fg:x="859" fg:w="1"/><text x="64.2113%" y="383.50"></text></g><g><title>test3`llvm::DataLayout::getTypeSizeInBits (1 samples, 0.07%)</title><rect x="63.9613%" y="357" width="0.0745%" height="15" fill="rgb(244,195,20)" fg:x="859" fg:w="1"/><text x="64.2113%" y="367.50"></text></g><g><title>test3`llvm::Type::getIntegerBitWidth (1 samples, 0.07%)</title><rect x="63.9613%" y="341" width="0.0745%" height="15" fill="rgb(253,56,35)" fg:x="859" fg:w="1"/><text x="64.2113%" y="351.50"></text></g><g><title>test3`llvm::cast (1 samples, 0.07%)</title><rect x="63.9613%" y="325" width="0.0745%" height="15" fill="rgb(210,149,44)" fg:x="859" fg:w="1"/><text x="64.2113%" y="335.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="63.9613%" y="309" width="0.0745%" height="15" fill="rgb(240,135,12)" fg:x="859" fg:w="1"/><text x="64.2113%" y="319.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="63.9613%" y="293" width="0.0745%" height="15" fill="rgb(251,24,50)" fg:x="859" fg:w="1"/><text x="64.2113%" y="303.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="63.9613%" y="277" width="0.0745%" height="15" fill="rgb(243,200,47)" fg:x="859" fg:w="1"/><text x="64.2113%" y="287.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="63.9613%" y="261" width="0.0745%" height="15" fill="rgb(224,166,26)" fg:x="859" fg:w="1"/><text x="64.2113%" y="271.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="63.9613%" y="245" width="0.0745%" height="15" fill="rgb(233,0,47)" fg:x="859" fg:w="1"/><text x="64.2113%" y="255.50"></text></g><g><title>test3`llvm::IntegerType::classof (1 samples, 0.07%)</title><rect x="63.9613%" y="229" width="0.0745%" height="15" fill="rgb(253,80,5)" fg:x="859" fg:w="1"/><text x="64.2113%" y="239.50"></text></g><g><title>test3`llvm::FastISel::finishCondBranch (1 samples, 0.07%)</title><rect x="64.0357%" y="389" width="0.0745%" height="15" fill="rgb(214,133,25)" fg:x="860" fg:w="1"/><text x="64.2857%" y="399.50"></text></g><g><title>test3`llvm::FastISel::fastEmitBranch (1 samples, 0.07%)</title><rect x="64.0357%" y="373" width="0.0745%" height="15" fill="rgb(209,27,14)" fg:x="860" fg:w="1"/><text x="64.2857%" y="383.50"></text></g><g><title>test3`llvm::X86InstrInfo::insertBranch (1 samples, 0.07%)</title><rect x="64.0357%" y="357" width="0.0745%" height="15" fill="rgb(219,102,51)" fg:x="860" fg:w="1"/><text x="64.2857%" y="367.50"></text></g><g><title>test3`llvm::BuildMI (1 samples, 0.07%)</title><rect x="64.0357%" y="341" width="0.0745%" height="15" fill="rgb(237,18,16)" fg:x="860" fg:w="1"/><text x="64.2857%" y="351.50"></text></g><g><title>test3`llvm::BuildMI (1 samples, 0.07%)</title><rect x="64.0357%" y="325" width="0.0745%" height="15" fill="rgb(241,85,17)" fg:x="860" fg:w="1"/><text x="64.2857%" y="335.50"></text></g><g><title>test3`llvm::MachineBasicBlock::insert (1 samples, 0.07%)</title><rect x="64.0357%" y="309" width="0.0745%" height="15" fill="rgb(236,90,42)" fg:x="860" fg:w="1"/><text x="64.2857%" y="319.50"></text></g><g><title>test3`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::MachineInstr,llvm::ilist_sentinel_tracking&lt;1&gt; &gt;,llvm::ilist_traits (1 samples, 0.07%)</title><rect x="64.0357%" y="293" width="0.0745%" height="15" fill="rgb(249,57,21)" fg:x="860" fg:w="1"/><text x="64.2857%" y="303.50"></text></g><g><title>test3`llvm::ilist_traits (1 samples, 0.07%)</title><rect x="64.0357%" y="277" width="0.0745%" height="15" fill="rgb(243,12,36)" fg:x="860" fg:w="1"/><text x="64.2857%" y="287.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="64.1102%" y="373" width="0.0745%" height="15" fill="rgb(253,128,47)" fg:x="861" fg:w="1"/><text x="64.3602%" y="383.50"></text></g><g><title>test3`__security_check_cookie (1 samples, 0.07%)</title><rect x="64.1847%" y="373" width="0.0745%" height="15" fill="rgb(207,33,20)" fg:x="862" fg:w="1"/><text x="64.4347%" y="383.50"></text></g><g><title>test3`llvm::BuildMI (1 samples, 0.07%)</title><rect x="64.2591%" y="373" width="0.0745%" height="15" fill="rgb(233,215,35)" fg:x="863" fg:w="1"/><text x="64.5091%" y="383.50"></text></g><g><title>test3`llvm::MachineFunction::CreateMachineInstr (1 samples, 0.07%)</title><rect x="64.2591%" y="357" width="0.0745%" height="15" fill="rgb(249,188,52)" fg:x="863" fg:w="1"/><text x="64.5091%" y="367.50"></text></g><g><title>test3`llvm::MachineInstr::MachineInstr (1 samples, 0.07%)</title><rect x="64.2591%" y="341" width="0.0745%" height="15" fill="rgb(225,12,32)" fg:x="863" fg:w="1"/><text x="64.5091%" y="351.50"></text></g><g><title>test3`llvm::FastISel::createResultReg (1 samples, 0.07%)</title><rect x="64.3336%" y="373" width="0.0745%" height="15" fill="rgb(247,98,14)" fg:x="864" fg:w="1"/><text x="64.5836%" y="383.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="64.3336%" y="357" width="0.0745%" height="15" fill="rgb(247,219,48)" fg:x="864" fg:w="1"/><text x="64.5836%" y="367.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="64.3336%" y="341" width="0.0745%" height="15" fill="rgb(253,60,48)" fg:x="864" fg:w="1"/><text x="64.5836%" y="351.50"></text></g><g><title>test3`llvm::FastISel::lookUpRegForValue (1 samples, 0.07%)</title><rect x="64.4080%" y="357" width="0.0745%" height="15" fill="rgb(245,15,52)" fg:x="865" fg:w="1"/><text x="64.6580%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.4080%" y="341" width="0.0745%" height="15" fill="rgb(220,133,28)" fg:x="865" fg:w="1"/><text x="64.6580%" y="351.50"></text></g><g><title>test3`llvm::FastISel::materializeRegForValue (1 samples, 0.07%)</title><rect x="64.4825%" y="357" width="0.0745%" height="15" fill="rgb(217,180,4)" fg:x="866" fg:w="1"/><text x="64.7325%" y="367.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="64.4825%" y="341" width="0.0745%" height="15" fill="rgb(251,24,1)" fg:x="866" fg:w="1"/><text x="64.7325%" y="351.50"></text></g><g><title>test3`llvm::X86::createFastISel (1 samples, 0.07%)</title><rect x="64.4825%" y="325" width="0.0745%" height="15" fill="rgb(212,185,49)" fg:x="866" fg:w="1"/><text x="64.7325%" y="335.50"></text></g><g><title>test3`llvm::MVT::operator&gt; (1 samples, 0.07%)</title><rect x="64.4825%" y="309" width="0.0745%" height="15" fill="rgb(215,175,22)" fg:x="866" fg:w="1"/><text x="64.7325%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.5570%" y="341" width="0.0745%" height="15" fill="rgb(250,205,14)" fg:x="867" fg:w="1"/><text x="64.8070%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.5570%" y="325" width="0.0745%" height="15" fill="rgb(225,211,22)" fg:x="867" fg:w="1"/><text x="64.8070%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="64.5570%" y="309" width="0.0745%" height="15" fill="rgb(251,179,42)" fg:x="867" fg:w="1"/><text x="64.8070%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="64.5570%" y="293" width="0.0745%" height="15" fill="rgb(208,216,51)" fg:x="867" fg:w="1"/><text x="64.8070%" y="303.50"></text></g><g><title>test3`llvm::FastISel::getRegForValue (4 samples, 0.30%)</title><rect x="64.4080%" y="373" width="0.2978%" height="15" fill="rgb(235,36,11)" fg:x="865" fg:w="4"/><text x="64.6580%" y="383.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::InitializeRegForValue (2 samples, 0.15%)</title><rect x="64.5570%" y="357" width="0.1489%" height="15" fill="rgb(213,189,28)" fg:x="867" fg:w="2"/><text x="64.8070%" y="367.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::CreateRegs (1 samples, 0.07%)</title><rect x="64.6314%" y="341" width="0.0745%" height="15" fill="rgb(227,203,42)" fg:x="868" fg:w="1"/><text x="64.8814%" y="351.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::CreateRegs (1 samples, 0.07%)</title><rect x="64.6314%" y="325" width="0.0745%" height="15" fill="rgb(244,72,36)" fg:x="868" fg:w="1"/><text x="64.8814%" y="335.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::CreateReg (1 samples, 0.07%)</title><rect x="64.6314%" y="309" width="0.0745%" height="15" fill="rgb(213,53,17)" fg:x="868" fg:w="1"/><text x="64.8814%" y="319.50"></text></g><g><title>test3`llvm::FastISel::getRegForValue (1 samples, 0.07%)</title><rect x="64.7059%" y="357" width="0.0745%" height="15" fill="rgb(207,167,3)" fg:x="869" fg:w="1"/><text x="64.9559%" y="367.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::InitializeRegForValue (1 samples, 0.07%)</title><rect x="64.7059%" y="341" width="0.0745%" height="15" fill="rgb(216,98,30)" fg:x="869" fg:w="1"/><text x="64.9559%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.7059%" y="325" width="0.0745%" height="15" fill="rgb(236,123,15)" fg:x="869" fg:w="1"/><text x="64.9559%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.7059%" y="309" width="0.0745%" height="15" fill="rgb(248,81,50)" fg:x="869" fg:w="1"/><text x="64.9559%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="64.7059%" y="293" width="0.0745%" height="15" fill="rgb(214,120,4)" fg:x="869" fg:w="1"/><text x="64.9559%" y="303.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="64.7059%" y="277" width="0.0745%" height="15" fill="rgb(208,179,34)" fg:x="869" fg:w="1"/><text x="64.9559%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.7059%" y="261" width="0.0745%" height="15" fill="rgb(227,140,7)" fg:x="869" fg:w="1"/><text x="64.9559%" y="271.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.7059%" y="245" width="0.0745%" height="15" fill="rgb(214,22,6)" fg:x="869" fg:w="1"/><text x="64.9559%" y="255.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::Register&gt; &gt;,llvm::Value const * __ptr64,llvm::Register,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="64.7059%" y="229" width="0.0745%" height="15" fill="rgb(207,137,27)" fg:x="869" fg:w="1"/><text x="64.9559%" y="239.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager (1 samples, 0.07%)</title><rect x="64.7059%" y="213" width="0.0745%" height="15" fill="rgb(210,8,46)" fg:x="869" fg:w="1"/><text x="64.9559%" y="223.50"></text></g><g><title>test3`llvm::MachineInstrBuilder::addImm (1 samples, 0.07%)</title><rect x="64.7803%" y="325" width="0.0745%" height="15" fill="rgb(240,16,54)" fg:x="870" fg:w="1"/><text x="65.0303%" y="335.50"></text></g><g><title>test3`llvm::MachineOperand::CreateImm (1 samples, 0.07%)</title><rect x="64.7803%" y="309" width="0.0745%" height="15" fill="rgb(211,209,29)" fg:x="870" fg:w="1"/><text x="65.0303%" y="319.50"></text></g><g><title>test3`llvm::FastISel::selectInstruction (30 samples, 2.23%)</title><rect x="62.6955%" y="437" width="2.2338%" height="15" fill="rgb(226,228,24)" fg:x="842" fg:w="30"/><text x="62.9455%" y="447.50">t..</text></g><g><title>test3`llvm::X86::createFastISel (14 samples, 1.04%)</title><rect x="63.8868%" y="421" width="1.0424%" height="15" fill="rgb(222,84,9)" fg:x="858" fg:w="14"/><text x="64.1368%" y="431.50"></text></g><g><title>test3`llvm::X86::createFastISel (14 samples, 1.04%)</title><rect x="63.8868%" y="405" width="1.0424%" height="15" fill="rgb(234,203,30)" fg:x="858" fg:w="14"/><text x="64.1368%" y="415.50"></text></g><g><title>test3`llvm::X86::createFastISel (11 samples, 0.82%)</title><rect x="64.1102%" y="389" width="0.8191%" height="15" fill="rgb(238,109,14)" fg:x="861" fg:w="11"/><text x="64.3602%" y="399.50"></text></g><g><title>test3`llvm::X86::createFastISel (3 samples, 0.22%)</title><rect x="64.7059%" y="373" width="0.2234%" height="15" fill="rgb(233,206,34)" fg:x="869" fg:w="3"/><text x="64.9559%" y="383.50"></text></g><g><title>test3`llvm::X86::createFastISel (2 samples, 0.15%)</title><rect x="64.7803%" y="357" width="0.1489%" height="15" fill="rgb(220,167,47)" fg:x="870" fg:w="2"/><text x="65.0303%" y="367.50"></text></g><g><title>test3`llvm::ArrayRef&lt;int&gt;::ArrayRef&lt;int&gt; (2 samples, 0.15%)</title><rect x="64.7803%" y="341" width="0.1489%" height="15" fill="rgb(238,105,10)" fg:x="870" fg:w="2"/><text x="65.0303%" y="351.50"></text></g><g><title>test3`llvm::MachineInstrBuilder::addReg (1 samples, 0.07%)</title><rect x="64.8548%" y="325" width="0.0745%" height="15" fill="rgb(213,227,17)" fg:x="871" fg:w="1"/><text x="65.1048%" y="335.50"></text></g><g><title>test3`llvm::MachineOperand::CreateReg (1 samples, 0.07%)</title><rect x="64.8548%" y="309" width="0.0745%" height="15" fill="rgb(217,132,38)" fg:x="871" fg:w="1"/><text x="65.1048%" y="319.50"></text></g><g><title>test3`llvm::FastISel::startNewBlock (1 samples, 0.07%)</title><rect x="64.9293%" y="437" width="0.0745%" height="15" fill="rgb(242,146,4)" fg:x="872" fg:w="1"/><text x="65.1793%" y="447.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::hasOneUse (1 samples, 0.07%)</title><rect x="65.0037%" y="421" width="0.0745%" height="15" fill="rgb(212,61,9)" fg:x="873" fg:w="1"/><text x="65.2537%" y="431.50"></text></g><g><title>test3`llvm::hasSingleElement&lt;llvm::iterator_range&lt;llvm::MachineRegisterInfo::defusechain_iterator (1 samples, 0.07%)</title><rect x="65.0037%" y="405" width="0.0745%" height="15" fill="rgb(247,126,22)" fg:x="873" fg:w="1"/><text x="65.2537%" y="415.50"></text></g><g><title>test3`std::next&lt;llvm::MachineRegisterInfo::defusechain_iterator (1 samples, 0.07%)</title><rect x="65.0037%" y="389" width="0.0745%" height="15" fill="rgb(220,196,2)" fg:x="873" fg:w="1"/><text x="65.2537%" y="399.50"></text></g><g><title>test3`std::advance&lt;llvm::MachineRegisterInfo::defusechain_iterator (1 samples, 0.07%)</title><rect x="65.0037%" y="373" width="0.0745%" height="15" fill="rgb(208,46,4)" fg:x="873" fg:w="1"/><text x="65.2537%" y="383.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::defusechain_iterator (1 samples, 0.07%)</title><rect x="65.0037%" y="357" width="0.0745%" height="15" fill="rgb(252,104,46)" fg:x="873" fg:w="1"/><text x="65.2537%" y="367.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="65.0037%" y="341" width="0.0745%" height="15" fill="rgb(237,152,48)" fg:x="873" fg:w="1"/><text x="65.2537%" y="351.50"></text></g><g><title>test3`llvm::lookupUnfoldTable (1 samples, 0.07%)</title><rect x="65.0782%" y="373" width="0.0745%" height="15" fill="rgb(221,59,37)" fg:x="874" fg:w="1"/><text x="65.3282%" y="383.50"></text></g><g><title>test3`std::adjacent_find (1 samples, 0.07%)</title><rect x="65.0782%" y="357" width="0.0745%" height="15" fill="rgb(209,202,51)" fg:x="874" fg:w="1"/><text x="65.3282%" y="367.50"></text></g><g><title>test3`std::adjacent_find&lt;llvm::X86MemoryFoldTableEntry const * __ptr64,std::equal_to (1 samples, 0.07%)</title><rect x="65.0782%" y="341" width="0.0745%" height="15" fill="rgb(228,81,30)" fg:x="874" fg:w="1"/><text x="65.3282%" y="351.50"></text></g><g><title>test3`std::equal_to&lt;void&gt;::operator() (1 samples, 0.07%)</title><rect x="65.0782%" y="325" width="0.0745%" height="15" fill="rgb(227,42,39)" fg:x="874" fg:w="1"/><text x="65.3282%" y="335.50"></text></g><g><title>test3`llvm::FastISel::tryToFoldLoad (3 samples, 0.22%)</title><rect x="65.0037%" y="437" width="0.2234%" height="15" fill="rgb(221,26,2)" fg:x="873" fg:w="3"/><text x="65.2537%" y="447.50"></text></g><g><title>test3`llvm::X86::createFastISel (2 samples, 0.15%)</title><rect x="65.0782%" y="421" width="0.1489%" height="15" fill="rgb(254,61,31)" fg:x="874" fg:w="2"/><text x="65.3282%" y="431.50"></text></g><g><title>test3`llvm::X86InstrInfo::foldMemoryOperandImpl (2 samples, 0.15%)</title><rect x="65.0782%" y="405" width="0.1489%" height="15" fill="rgb(222,173,38)" fg:x="874" fg:w="2"/><text x="65.3282%" y="415.50"></text></g><g><title>test3`llvm::lookupFoldTable (2 samples, 0.15%)</title><rect x="65.0782%" y="389" width="0.1489%" height="15" fill="rgb(218,50,12)" fg:x="874" fg:w="2"/><text x="65.3282%" y="399.50"></text></g><g><title>test3`llvm::makeArrayRef (1 samples, 0.07%)</title><rect x="65.1526%" y="373" width="0.0745%" height="15" fill="rgb(223,88,40)" fg:x="875" fg:w="1"/><text x="65.4026%" y="383.50"></text></g><g><title>test3`llvm::ArrayRef&lt;llvm::X86MemoryFoldTableEntry&gt;::ArrayRef&lt;llvm::X86MemoryFoldTableEntry&gt; (1 samples, 0.07%)</title><rect x="65.1526%" y="357" width="0.0745%" height="15" fill="rgb(237,54,19)" fg:x="875" fg:w="1"/><text x="65.4026%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::clear (1 samples, 0.07%)</title><rect x="65.2271%" y="437" width="0.0745%" height="15" fill="rgb(251,129,25)" fg:x="876" fg:w="1"/><text x="65.4771%" y="447.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value const * __ptr64,llvm::SDValue,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value const * __ptr64,llvm::SDValue&gt; &gt;,llvm::Value const * __ptr64,llvm::SDValue,llvm::DenseMapInfo&lt;llvm::Value const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="65.2271%" y="421" width="0.0745%" height="15" fill="rgb(238,97,19)" fg:x="876" fg:w="1"/><text x="65.4771%" y="431.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::EmitPhysRegCopy (1 samples, 0.07%)</title><rect x="65.3760%" y="405" width="0.0745%" height="15" fill="rgb(240,169,18)" fg:x="878" fg:w="1"/><text x="65.6260%" y="415.50"></text></g><g><title>test3`llvm::InstrEmitter::EmitNode (1 samples, 0.07%)</title><rect x="65.3760%" y="389" width="0.0745%" height="15" fill="rgb(230,187,49)" fg:x="878" fg:w="1"/><text x="65.6260%" y="399.50"></text></g><g><title>test3`llvm::InstrEmitter::EmitMachineNode (1 samples, 0.07%)</title><rect x="65.3760%" y="373" width="0.0745%" height="15" fill="rgb(209,44,26)" fg:x="878" fg:w="1"/><text x="65.6260%" y="383.50"></text></g><g><title>test3`llvm::MachineInstrBuilder::setMemRefs (1 samples, 0.07%)</title><rect x="65.3760%" y="357" width="0.0745%" height="15" fill="rgb(244,0,6)" fg:x="878" fg:w="1"/><text x="65.6260%" y="367.50"></text></g><g><title>test3`llvm::MachineInstr::setMemRefs (1 samples, 0.07%)</title><rect x="65.3760%" y="341" width="0.0745%" height="15" fill="rgb(248,18,21)" fg:x="878" fg:w="1"/><text x="65.6260%" y="351.50"></text></g><g><title>test3`llvm::MachineInstr::setExtraInfo (1 samples, 0.07%)</title><rect x="65.3760%" y="325" width="0.0745%" height="15" fill="rgb(245,180,19)" fg:x="878" fg:w="1"/><text x="65.6260%" y="335.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::EmitSchedule (2 samples, 0.15%)</title><rect x="65.3760%" y="421" width="0.1489%" height="15" fill="rgb(252,118,36)" fg:x="878" fg:w="2"/><text x="65.6260%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAG::getHeapAllocSite (1 samples, 0.07%)</title><rect x="65.4505%" y="405" width="0.0745%" height="15" fill="rgb(210,224,19)" fg:x="879" fg:w="1"/><text x="65.7005%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo,llvm::DenseMapInfo&lt;llvm::SDNode const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo&gt; &gt;,llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo,llvm::DenseMapInfo&lt;llvm::SDNode const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="65.4505%" y="389" width="0.0745%" height="15" fill="rgb(218,30,24)" fg:x="879" fg:w="1"/><text x="65.7005%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo,llvm::DenseMapInfo&lt;llvm::SDNode const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo&gt; &gt;,llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo,llvm::DenseMapInfo&lt;llvm::SDNode const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode const * __ptr64,llvm::SelectionDAG::CallSiteDbgInfo&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="65.4505%" y="373" width="0.0745%" height="15" fill="rgb(219,75,50)" fg:x="879" fg:w="1"/><text x="65.7005%" y="383.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::BuildSchedUnits (1 samples, 0.07%)</title><rect x="65.5249%" y="373" width="0.0745%" height="15" fill="rgb(234,72,50)" fg:x="880" fg:w="1"/><text x="65.7749%" y="383.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="65.5249%" y="357" width="0.0745%" height="15" fill="rgb(219,100,48)" fg:x="880" fg:w="1"/><text x="65.7749%" y="367.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::insert_imp (1 samples, 0.07%)</title><rect x="65.5249%" y="341" width="0.0745%" height="15" fill="rgb(253,5,41)" fg:x="880" fg:w="1"/><text x="65.7749%" y="351.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::isSmall (1 samples, 0.07%)</title><rect x="65.5249%" y="325" width="0.0745%" height="15" fill="rgb(247,181,11)" fg:x="880" fg:w="1"/><text x="65.7749%" y="335.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::BuildSchedGraph (2 samples, 0.15%)</title><rect x="65.5249%" y="389" width="0.1489%" height="15" fill="rgb(222,223,25)" fg:x="880" fg:w="2"/><text x="65.7749%" y="399.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::ClusterNodes (1 samples, 0.07%)</title><rect x="65.5994%" y="373" width="0.0745%" height="15" fill="rgb(214,198,28)" fg:x="881" fg:w="1"/><text x="65.8494%" y="383.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::ClusterNeighboringLoads (1 samples, 0.07%)</title><rect x="65.5994%" y="357" width="0.0745%" height="15" fill="rgb(230,46,43)" fg:x="881" fg:w="1"/><text x="65.8494%" y="367.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="65.5994%" y="341" width="0.0745%" height="15" fill="rgb(233,65,53)" fg:x="881" fg:w="1"/><text x="65.8494%" y="351.50"></text></g><g><title>test3`std::make_pair&lt;std::pair (1 samples, 0.07%)</title><rect x="65.5994%" y="325" width="0.0745%" height="15" fill="rgb(221,121,27)" fg:x="881" fg:w="1"/><text x="65.8494%" y="335.50"></text></g><g><title>test3`&lt;move&gt;&lt;llvm::Optional (1 samples, 0.07%)</title><rect x="65.5994%" y="309" width="0.0745%" height="15" fill="rgb(247,70,47)" fg:x="881" fg:w="1"/><text x="65.8494%" y="319.50"></text></g><g><title>test3`llvm::MachineBasicBlock::isSuccessor (1 samples, 0.07%)</title><rect x="65.6739%" y="373" width="0.0745%" height="15" fill="rgb(228,85,35)" fg:x="882" fg:w="1"/><text x="65.9239%" y="383.50"></text></g><g><title>test3`llvm::MachineBasicBlock::successors (1 samples, 0.07%)</title><rect x="65.6739%" y="357" width="0.0745%" height="15" fill="rgb(209,50,18)" fg:x="882" fg:w="1"/><text x="65.9239%" y="367.50"></text></g><g><title>test3`llvm::make_range&lt;std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="65.6739%" y="341" width="0.0745%" height="15" fill="rgb(250,19,35)" fg:x="882" fg:w="1"/><text x="65.9239%" y="351.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::Run (4 samples, 0.30%)</title><rect x="65.5249%" y="421" width="0.2978%" height="15" fill="rgb(253,107,29)" fg:x="880" fg:w="4"/><text x="65.7749%" y="431.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (4 samples, 0.30%)</title><rect x="65.5249%" y="405" width="0.2978%" height="15" fill="rgb(252,179,29)" fg:x="880" fg:w="4"/><text x="65.7749%" y="415.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (2 samples, 0.15%)</title><rect x="65.6739%" y="389" width="0.1489%" height="15" fill="rgb(238,194,6)" fg:x="882" fg:w="2"/><text x="65.9239%" y="399.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="65.7483%" y="373" width="0.0745%" height="15" fill="rgb(238,164,29)" fg:x="883" fg:w="1"/><text x="65.9983%" y="383.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="65.7483%" y="357" width="0.0745%" height="15" fill="rgb(224,25,9)" fg:x="883" fg:w="1"/><text x="65.9983%" y="367.50"></text></g><g><title>test3`std::make_pair&lt;llvm::SUnit * __ptr64 &amp; __ptr64,llvm::SmallVector (1 samples, 0.07%)</title><rect x="65.7483%" y="341" width="0.0745%" height="15" fill="rgb(244,153,23)" fg:x="883" fg:w="1"/><text x="65.9983%" y="351.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="65.7483%" y="325" width="0.0745%" height="15" fill="rgb(212,203,14)" fg:x="883" fg:w="1"/><text x="65.9983%" y="335.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="65.7483%" y="309" width="0.0745%" height="15" fill="rgb(220,164,20)" fg:x="883" fg:w="1"/><text x="65.9983%" y="319.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="65.7483%" y="293" width="0.0745%" height="15" fill="rgb(222,203,48)" fg:x="883" fg:w="1"/><text x="65.9983%" y="303.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="65.7483%" y="277" width="0.0745%" height="15" fill="rgb(215,159,22)" fg:x="883" fg:w="1"/><text x="65.9983%" y="287.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="65.7483%" y="261" width="0.0745%" height="15" fill="rgb(216,183,47)" fg:x="883" fg:w="1"/><text x="65.9983%" y="271.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="65.7483%" y="245" width="0.0745%" height="15" fill="rgb(229,195,25)" fg:x="883" fg:w="1"/><text x="65.9983%" y="255.50"></text></g><g><title>test3`llvm::MapVector&lt;llvm::Value * __ptr64,llvm::WeakTrackingVH,llvm::SmallDenseMap&lt;llvm::Value * __ptr64,unsigned int,16,llvm::DenseMapInfo&lt;llvm::Value * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::Value * __ptr64,unsigned int&gt; &gt;,llvm::SmallVector&lt;std::pair (1 samples, 0.07%)</title><rect x="65.9717%" y="357" width="0.0745%" height="15" fill="rgb(224,132,51)" fg:x="886" fg:w="1"/><text x="66.2217%" y="367.50"></text></g><g><title>test3`llvm::SmallVectorBase (1 samples, 0.07%)</title><rect x="65.9717%" y="341" width="0.0745%" height="15" fill="rgb(240,63,7)" fg:x="886" fg:w="1"/><text x="66.2217%" y="351.50"></text></g><g><title>test3`llvm::SmallSetVector&lt;llvm::SDNode * __ptr64,16&gt;::SmallSetVector (1 samples, 0.07%)</title><rect x="66.0462%" y="341" width="0.0745%" height="15" fill="rgb(249,182,41)" fg:x="887" fg:w="1"/><text x="66.2962%" y="351.50"></text></g><g><title>test3`llvm::SetVector&lt;llvm::SDNode * __ptr64,llvm::SmallVector&lt;llvm::SDNode * __ptr64,16&gt;,llvm::SmallDenseSet&lt;llvm::SDNode * __ptr64,16,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt; &gt; &gt;::SetVector&lt;llvm::SDNode * __ptr64,llvm::SmallVector&lt;llvm::SDNode * __ptr64,16&gt;,llvm::SmallDenseSet&lt;llvm::SDNode * __ptr64,16,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="66.0462%" y="325" width="0.0745%" height="15" fill="rgb(243,47,26)" fg:x="887" fg:w="1"/><text x="66.2962%" y="335.50"></text></g><g><title>test3`llvm::SmallDenseSet&lt;llvm::SDNode * __ptr64,16,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt; &gt;::SmallDenseSet&lt;llvm::SDNode * __ptr64,16,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="66.0462%" y="309" width="0.0745%" height="15" fill="rgb(233,48,2)" fg:x="887" fg:w="1"/><text x="66.2962%" y="319.50"></text></g><g><title>test3`llvm::SelectionDAG::Combine (5 samples, 0.37%)</title><rect x="65.8228%" y="421" width="0.3723%" height="15" fill="rgb(244,165,34)" fg:x="884" fg:w="5"/><text x="66.0728%" y="431.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (5 samples, 0.37%)</title><rect x="65.8228%" y="405" width="0.3723%" height="15" fill="rgb(207,89,7)" fg:x="884" fg:w="5"/><text x="66.0728%" y="415.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (5 samples, 0.37%)</title><rect x="65.8228%" y="389" width="0.3723%" height="15" fill="rgb(244,117,36)" fg:x="884" fg:w="5"/><text x="66.0728%" y="399.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (4 samples, 0.30%)</title><rect x="65.8972%" y="373" width="0.2978%" height="15" fill="rgb(226,144,34)" fg:x="885" fg:w="4"/><text x="66.1472%" y="383.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (2 samples, 0.15%)</title><rect x="66.0462%" y="357" width="0.1489%" height="15" fill="rgb(213,23,19)" fg:x="887" fg:w="2"/><text x="66.2962%" y="367.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (1 samples, 0.07%)</title><rect x="66.1206%" y="341" width="0.0745%" height="15" fill="rgb(217,75,12)" fg:x="888" fg:w="1"/><text x="66.3706%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::Legalize (1 samples, 0.07%)</title><rect x="66.1951%" y="421" width="0.0745%" height="15" fill="rgb(224,159,17)" fg:x="889" fg:w="1"/><text x="66.4451%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (1 samples, 0.07%)</title><rect x="66.1951%" y="405" width="0.0745%" height="15" fill="rgb(217,118,1)" fg:x="889" fg:w="1"/><text x="66.4451%" y="415.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="66.1951%" y="389" width="0.0745%" height="15" fill="rgb(232,180,48)" fg:x="889" fg:w="1"/><text x="66.4451%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeVectors (1 samples, 0.07%)</title><rect x="66.2695%" y="421" width="0.0745%" height="15" fill="rgb(230,27,33)" fg:x="890" fg:w="1"/><text x="66.5195%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeVectors (1 samples, 0.07%)</title><rect x="66.2695%" y="405" width="0.0745%" height="15" fill="rgb(205,31,21)" fg:x="890" fg:w="1"/><text x="66.5195%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAGISel::CreateScheduler (1 samples, 0.07%)</title><rect x="66.3440%" y="421" width="0.0745%" height="15" fill="rgb(253,59,4)" fg:x="891" fg:w="1"/><text x="66.5940%" y="431.50"></text></g><g><title>test3`llvm::createDefaultScheduler (1 samples, 0.07%)</title><rect x="66.3440%" y="405" width="0.0745%" height="15" fill="rgb(224,201,9)" fg:x="891" fg:w="1"/><text x="66.5940%" y="415.50"></text></g><g><title>test3`llvm::createSourceListDAGScheduler (1 samples, 0.07%)</title><rect x="66.3440%" y="389" width="0.0745%" height="15" fill="rgb(229,206,30)" fg:x="891" fg:w="1"/><text x="66.5940%" y="399.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="66.7163%" y="357" width="0.0745%" height="15" fill="rgb(212,67,47)" fg:x="896" fg:w="1"/><text x="66.9663%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAGISel::DoInstructionSelection (6 samples, 0.45%)</title><rect x="66.4185%" y="421" width="0.4468%" height="15" fill="rgb(211,96,50)" fg:x="892" fg:w="6"/><text x="66.6685%" y="431.50"></text></g><g><title>test3`llvm::createX86ISelDag (6 samples, 0.45%)</title><rect x="66.4185%" y="405" width="0.4468%" height="15" fill="rgb(252,114,18)" fg:x="892" fg:w="6"/><text x="66.6685%" y="415.50"></text></g><g><title>test3`llvm::createX86ISelDag (6 samples, 0.45%)</title><rect x="66.4185%" y="389" width="0.4468%" height="15" fill="rgb(223,58,37)" fg:x="892" fg:w="6"/><text x="66.6685%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAGISel::SelectCodeCommon (6 samples, 0.45%)</title><rect x="66.4185%" y="373" width="0.4468%" height="15" fill="rgb(237,70,4)" fg:x="892" fg:w="6"/><text x="66.6685%" y="383.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="66.7908%" y="357" width="0.0745%" height="15" fill="rgb(244,85,46)" fg:x="897" fg:w="1"/><text x="67.0408%" y="367.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="66.7908%" y="341" width="0.0745%" height="15" fill="rgb(223,39,52)" fg:x="897" fg:w="1"/><text x="67.0408%" y="351.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="66.7908%" y="325" width="0.0745%" height="15" fill="rgb(218,200,14)" fg:x="897" fg:w="1"/><text x="67.0408%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAG::getTargetFrameIndex (1 samples, 0.07%)</title><rect x="66.7908%" y="309" width="0.0745%" height="15" fill="rgb(208,171,16)" fg:x="897" fg:w="1"/><text x="67.0408%" y="319.50"></text></g><g><title>test3`llvm::SelectionDAG::getFrameIndex (1 samples, 0.07%)</title><rect x="66.7908%" y="293" width="0.0745%" height="15" fill="rgb(234,200,18)" fg:x="897" fg:w="1"/><text x="67.0408%" y="303.50"></text></g><g><title>test3`llvm::FoldingSetImpl&lt;llvm::FoldingSet (1 samples, 0.07%)</title><rect x="66.7908%" y="277" width="0.0745%" height="15" fill="rgb(228,45,11)" fg:x="897" fg:w="1"/><text x="67.0408%" y="287.50"></text></g><g><title>test3`llvm::FoldingSetBase::InsertNode (1 samples, 0.07%)</title><rect x="66.7908%" y="261" width="0.0745%" height="15" fill="rgb(237,182,11)" fg:x="897" fg:w="1"/><text x="67.0408%" y="271.50"></text></g><g><title>test3`llvm::SelectionDAGISel::CodeGenAndEmitDAG (22 samples, 1.64%)</title><rect x="65.3016%" y="437" width="1.6381%" height="15" fill="rgb(241,175,49)" fg:x="877" fg:w="22"/><text x="65.5516%" y="447.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="66.8652%" y="421" width="0.0745%" height="15" fill="rgb(247,38,35)" fg:x="898" fg:w="1"/><text x="67.1152%" y="431.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="66.8652%" y="405" width="0.0745%" height="15" fill="rgb(228,39,49)" fg:x="898" fg:w="1"/><text x="67.1152%" y="415.50"></text></g><g><title>test3`std::unique_ptr&lt;char [0],std::default_delete&lt;char [0]&gt; &gt;::~unique_ptr&lt;char [0],std::default_delete (1 samples, 0.07%)</title><rect x="66.8652%" y="389" width="0.0745%" height="15" fill="rgb(226,101,26)" fg:x="898" fg:w="1"/><text x="67.1152%" y="399.50"></text></g><g><title>test3`std::default_delete&lt;char [0]&gt;::operator() (1 samples, 0.07%)</title><rect x="66.8652%" y="373" width="0.0745%" height="15" fill="rgb(206,141,19)" fg:x="898" fg:w="1"/><text x="67.1152%" y="383.50"></text></g><g><title>test3`operator delete[] (1 samples, 0.07%)</title><rect x="66.8652%" y="357" width="0.0745%" height="15" fill="rgb(211,200,13)" fg:x="898" fg:w="1"/><text x="67.1152%" y="367.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="66.8652%" y="341" width="0.0745%" height="15" fill="rgb(241,121,6)" fg:x="898" fg:w="1"/><text x="67.1152%" y="351.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="66.8652%" y="325" width="0.0745%" height="15" fill="rgb(234,221,29)" fg:x="898" fg:w="1"/><text x="67.1152%" y="335.50"></text></g><g><title>ucrtbased`recalloc (1 samples, 0.07%)</title><rect x="66.8652%" y="309" width="0.0745%" height="15" fill="rgb(229,136,5)" fg:x="898" fg:w="1"/><text x="67.1152%" y="319.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="66.8652%" y="293" width="0.0745%" height="15" fill="rgb(238,36,11)" fg:x="898" fg:w="1"/><text x="67.1152%" y="303.50"></text></g><g><title>test3`llvm::SelectionDAGISel::FinishBasicBlock (1 samples, 0.07%)</title><rect x="66.9397%" y="437" width="0.0745%" height="15" fill="rgb(251,55,41)" fg:x="899" fg:w="1"/><text x="67.1897%" y="447.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;llvm::Instruction * __ptr64,llvm::BitVector&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="66.9397%" y="421" width="0.0745%" height="15" fill="rgb(242,34,40)" fg:x="899" fg:w="1"/><text x="67.1897%" y="431.50"></text></g><g><title>test3`llvm::MVT::getStoreSize (1 samples, 0.07%)</title><rect x="67.0141%" y="421" width="0.0745%" height="15" fill="rgb(215,42,17)" fg:x="900" fg:w="1"/><text x="67.2641%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::CopyToExportRegsIfNeeded (1 samples, 0.07%)</title><rect x="67.0886%" y="421" width="0.0745%" height="15" fill="rgb(207,44,46)" fg:x="901" fg:w="1"/><text x="67.3386%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::CopyValueToVirtualRegister (1 samples, 0.07%)</title><rect x="67.0886%" y="405" width="0.0745%" height="15" fill="rgb(211,206,28)" fg:x="901" fg:w="1"/><text x="67.3386%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::getNonRegisterValue (1 samples, 0.07%)</title><rect x="67.0886%" y="389" width="0.0745%" height="15" fill="rgb(237,167,16)" fg:x="901" fg:w="1"/><text x="67.3386%" y="399.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="67.0886%" y="373" width="0.0745%" height="15" fill="rgb(233,66,6)" fg:x="901" fg:w="1"/><text x="67.3386%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAGISel::LowerArguments (1 samples, 0.07%)</title><rect x="67.1631%" y="421" width="0.0745%" height="15" fill="rgb(246,123,29)" fg:x="902" fg:w="1"/><text x="67.4131%" y="431.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,int&gt; &gt;,int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="67.1631%" y="405" width="0.0745%" height="15" fill="rgb(209,62,40)" fg:x="902" fg:w="1"/><text x="67.4131%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,int&gt; &gt;,int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,int&gt; &gt;::try_emplace (1 samples, 0.07%)</title><rect x="67.1631%" y="389" width="0.0745%" height="15" fill="rgb(218,4,25)" fg:x="902" fg:w="1"/><text x="67.4131%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAG::getCopyFromReg (2 samples, 0.15%)</title><rect x="67.2375%" y="405" width="0.1489%" height="15" fill="rgb(253,91,49)" fg:x="903" fg:w="2"/><text x="67.4875%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.3120%" y="389" width="0.0745%" height="15" fill="rgb(228,155,29)" fg:x="904" fg:w="1"/><text x="67.5620%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.3120%" y="373" width="0.0745%" height="15" fill="rgb(243,57,37)" fg:x="904" fg:w="1"/><text x="67.5620%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::createOperands (1 samples, 0.07%)</title><rect x="67.3120%" y="357" width="0.0745%" height="15" fill="rgb(244,167,17)" fg:x="904" fg:w="1"/><text x="67.5620%" y="367.50"></text></g><g><title>test3`llvm::SDNode::isDivergent (1 samples, 0.07%)</title><rect x="67.3120%" y="341" width="0.0745%" height="15" fill="rgb(207,181,38)" fg:x="904" fg:w="1"/><text x="67.5620%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.3864%" y="405" width="0.0745%" height="15" fill="rgb(211,8,23)" fg:x="905" fg:w="1"/><text x="67.6364%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.3864%" y="389" width="0.0745%" height="15" fill="rgb(235,11,44)" fg:x="905" fg:w="1"/><text x="67.6364%" y="399.50"></text></g><g><title>test3`llvm::MachinePointerInfo::getFixedStack (1 samples, 0.07%)</title><rect x="67.4609%" y="389" width="0.0745%" height="15" fill="rgb(248,18,52)" fg:x="906" fg:w="1"/><text x="67.7109%" y="399.50"></text></g><g><title>test3`llvm::PseudoSourceValueManager::getFixedStack (1 samples, 0.07%)</title><rect x="67.4609%" y="373" width="0.0745%" height="15" fill="rgb(208,4,7)" fg:x="906" fg:w="1"/><text x="67.7109%" y="383.50"></text></g><g><title>test3`std::map&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete (1 samples, 0.07%)</title><rect x="67.4609%" y="357" width="0.0745%" height="15" fill="rgb(240,17,39)" fg:x="906" fg:w="1"/><text x="67.7109%" y="367.50"></text></g><g><title>test3`std::map&lt;int,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt;,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,std::unique_ptr&lt;llvm::FixedStackPseudoSourceValue,std::default_delete&lt;llvm::FixedStackPseudoSourceValue&gt; &gt; &gt; &gt; &gt;::_Try_emplace (1 samples, 0.07%)</title><rect x="67.4609%" y="341" width="0.0745%" height="15" fill="rgb(207,170,3)" fg:x="906" fg:w="1"/><text x="67.7109%" y="351.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;int,llvm::TargetRegisterClass const * __ptr64,std::less&lt;int&gt;,std::allocator&lt;std::pair&lt;int const ,llvm::TargetRegisterClass const * __ptr64&gt; &gt;,0&gt; &gt;::_Lower_bound_duplicate (1 samples, 0.07%)</title><rect x="67.4609%" y="325" width="0.0745%" height="15" fill="rgb(236,100,52)" fg:x="906" fg:w="1"/><text x="67.7109%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAGISel::LowerArguments (8 samples, 0.60%)</title><rect x="67.0141%" y="437" width="0.5957%" height="15" fill="rgb(246,78,51)" fg:x="900" fg:w="8"/><text x="67.2641%" y="447.50"></text></g><g><title>test3`llvm::X86TargetLowering::LowerFormalArguments (5 samples, 0.37%)</title><rect x="67.2375%" y="421" width="0.3723%" height="15" fill="rgb(211,17,15)" fg:x="903" fg:w="5"/><text x="67.4875%" y="431.50"></text></g><g><title>test3`llvm::X86TargetLowering::LowerMemArgument (2 samples, 0.15%)</title><rect x="67.4609%" y="405" width="0.1489%" height="15" fill="rgb(209,59,46)" fg:x="906" fg:w="2"/><text x="67.7109%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAG::getLoad (1 samples, 0.07%)</title><rect x="67.5354%" y="389" width="0.0745%" height="15" fill="rgb(210,92,25)" fg:x="907" fg:w="1"/><text x="67.7854%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAG::getLoad (1 samples, 0.07%)</title><rect x="67.5354%" y="373" width="0.0745%" height="15" fill="rgb(238,174,52)" fg:x="907" fg:w="1"/><text x="67.7854%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::getEVTAlign (1 samples, 0.07%)</title><rect x="67.5354%" y="357" width="0.0745%" height="15" fill="rgb(230,73,7)" fg:x="907" fg:w="1"/><text x="67.7854%" y="367.50"></text></g><g><title>test3`llvm::DataLayout::getABITypeAlign (1 samples, 0.07%)</title><rect x="67.5354%" y="341" width="0.0745%" height="15" fill="rgb(243,124,40)" fg:x="907" fg:w="1"/><text x="67.7854%" y="351.50"></text></g><g><title>test3`llvm::DataLayout::getAlignment (1 samples, 0.07%)</title><rect x="67.5354%" y="325" width="0.0745%" height="15" fill="rgb(244,170,11)" fg:x="907" fg:w="1"/><text x="67.7854%" y="335.50"></text></g><g><title>test3`llvm::Type::getIntegerBitWidth (1 samples, 0.07%)</title><rect x="67.5354%" y="309" width="0.0745%" height="15" fill="rgb(207,114,54)" fg:x="907" fg:w="1"/><text x="67.7854%" y="319.50"></text></g><g><title>test3`llvm::cast (1 samples, 0.07%)</title><rect x="67.5354%" y="293" width="0.0745%" height="15" fill="rgb(205,42,20)" fg:x="907" fg:w="1"/><text x="67.7854%" y="303.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="67.5354%" y="277" width="0.0745%" height="15" fill="rgb(230,30,28)" fg:x="907" fg:w="1"/><text x="67.7854%" y="287.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="67.5354%" y="261" width="0.0745%" height="15" fill="rgb(205,73,54)" fg:x="907" fg:w="1"/><text x="67.7854%" y="271.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="67.5354%" y="245" width="0.0745%" height="15" fill="rgb(254,227,23)" fg:x="907" fg:w="1"/><text x="67.7854%" y="255.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="67.5354%" y="229" width="0.0745%" height="15" fill="rgb(228,202,34)" fg:x="907" fg:w="1"/><text x="67.7854%" y="239.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="67.5354%" y="213" width="0.0745%" height="15" fill="rgb(222,225,37)" fg:x="907" fg:w="1"/><text x="67.7854%" y="223.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::CopyToExportRegsIfNeeded (1 samples, 0.07%)</title><rect x="67.6098%" y="405" width="0.0745%" height="15" fill="rgb(221,14,54)" fg:x="908" fg:w="1"/><text x="67.8598%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::CopyValueToVirtualRegister (1 samples, 0.07%)</title><rect x="67.6098%" y="389" width="0.0745%" height="15" fill="rgb(254,102,2)" fg:x="908" fg:w="1"/><text x="67.8598%" y="399.50"></text></g><g><title>test3`llvm::RegsForValue::getCopyToRegs (1 samples, 0.07%)</title><rect x="67.6098%" y="373" width="0.0745%" height="15" fill="rgb(232,104,17)" fg:x="908" fg:w="1"/><text x="67.8598%" y="383.50"></text></g><g><title>test3`std::pair&lt;llvm::Instruction * __ptr64,unsigned int&gt;::pair&lt;llvm::Instruction * __ptr64,unsigned int&gt; (1 samples, 0.07%)</title><rect x="67.6098%" y="357" width="0.0745%" height="15" fill="rgb(250,220,14)" fg:x="908" fg:w="1"/><text x="67.8598%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitFRem (1 samples, 0.07%)</title><rect x="67.6843%" y="389" width="0.0745%" height="15" fill="rgb(241,158,9)" fg:x="909" fg:w="1"/><text x="67.9343%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitBinary (1 samples, 0.07%)</title><rect x="67.6843%" y="373" width="0.0745%" height="15" fill="rgb(246,9,43)" fg:x="909" fg:w="1"/><text x="67.9343%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.6843%" y="357" width="0.0745%" height="15" fill="rgb(206,73,33)" fg:x="909" fg:w="1"/><text x="67.9343%" y="367.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="67.6843%" y="341" width="0.0745%" height="15" fill="rgb(222,79,8)" fg:x="909" fg:w="1"/><text x="67.9343%" y="351.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="67.6843%" y="325" width="0.0745%" height="15" fill="rgb(234,8,54)" fg:x="909" fg:w="1"/><text x="67.9343%" y="335.50"></text></g><g><title>test3`llvm::ComputeLinearIndex (1 samples, 0.07%)</title><rect x="67.7587%" y="373" width="0.0745%" height="15" fill="rgb(209,134,38)" fg:x="910" fg:w="1"/><text x="68.0087%" y="383.50"></text></g><g><title>test3`llvm::ComputeLinearIndex (1 samples, 0.07%)</title><rect x="67.7587%" y="357" width="0.0745%" height="15" fill="rgb(230,127,29)" fg:x="910" fg:w="1"/><text x="68.0087%" y="367.50"></text></g><g><title>test3`llvm::dyn_cast (1 samples, 0.07%)</title><rect x="67.7587%" y="341" width="0.0745%" height="15" fill="rgb(242,44,41)" fg:x="910" fg:w="1"/><text x="68.0087%" y="351.50"></text></g><g><title>test3`llvm::cast (1 samples, 0.07%)</title><rect x="67.7587%" y="325" width="0.0745%" height="15" fill="rgb(222,56,43)" fg:x="910" fg:w="1"/><text x="68.0087%" y="335.50"></text></g><g><title>test3`llvm::ComputeValueVTs (1 samples, 0.07%)</title><rect x="67.8332%" y="373" width="0.0745%" height="15" fill="rgb(238,39,47)" fg:x="911" fg:w="1"/><text x="68.0832%" y="383.50"></text></g><g><title>test3`llvm::ComputeValueVTs (1 samples, 0.07%)</title><rect x="67.8332%" y="357" width="0.0745%" height="15" fill="rgb(226,79,43)" fg:x="911" fg:w="1"/><text x="68.0832%" y="367.50"></text></g><g><title>test3`llvm::DataLayout::getTypeAllocSize (1 samples, 0.07%)</title><rect x="67.8332%" y="341" width="0.0745%" height="15" fill="rgb(242,105,53)" fg:x="911" fg:w="1"/><text x="68.0832%" y="351.50"></text></g><g><title>test3`llvm::DataLayout::getTypeStoreSize (1 samples, 0.07%)</title><rect x="67.8332%" y="325" width="0.0745%" height="15" fill="rgb(251,132,46)" fg:x="911" fg:w="1"/><text x="68.0832%" y="335.50"></text></g><g><title>test3`llvm::DataLayout::getTypeSizeInBits (1 samples, 0.07%)</title><rect x="67.8332%" y="309" width="0.0745%" height="15" fill="rgb(231,77,14)" fg:x="911" fg:w="1"/><text x="68.0832%" y="319.50"></text></g><g><title>test3`llvm::TypeSize::Fixed (1 samples, 0.07%)</title><rect x="67.8332%" y="293" width="0.0745%" height="15" fill="rgb(240,135,9)" fg:x="911" fg:w="1"/><text x="68.0832%" y="303.50"></text></g><g><title>test3`llvm::TypeSize::TypeSize (1 samples, 0.07%)</title><rect x="67.8332%" y="277" width="0.0745%" height="15" fill="rgb(248,109,14)" fg:x="911" fg:w="1"/><text x="68.0832%" y="287.50"></text></g><g><title>test3`llvm::LinearPolySize (1 samples, 0.07%)</title><rect x="67.8332%" y="261" width="0.0745%" height="15" fill="rgb(227,146,52)" fg:x="911" fg:w="1"/><text x="68.0832%" y="271.50"></text></g><g><title>test3`llvm::LinearPolySize&lt;llvm::TypeSize&gt;::LinearPolySize (1 samples, 0.07%)</title><rect x="67.8332%" y="245" width="0.0745%" height="15" fill="rgb(232,54,3)" fg:x="911" fg:w="1"/><text x="68.0832%" y="255.50"></text></g><g><title>test3`llvm::UnivariateLinearPolyBase&lt;llvm::TypeSize&gt;::UnivariateLinearPolyBase (1 samples, 0.07%)</title><rect x="67.8332%" y="229" width="0.0745%" height="15" fill="rgb(229,201,43)" fg:x="911" fg:w="1"/><text x="68.0832%" y="239.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitInsertValue (3 samples, 0.22%)</title><rect x="67.7587%" y="389" width="0.2234%" height="15" fill="rgb(252,161,33)" fg:x="910" fg:w="3"/><text x="68.0087%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.9077%" y="373" width="0.0745%" height="15" fill="rgb(226,146,40)" fg:x="912" fg:w="1"/><text x="68.1577%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="67.9077%" y="357" width="0.0745%" height="15" fill="rgb(219,47,25)" fg:x="912" fg:w="1"/><text x="68.1577%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::createOperands (1 samples, 0.07%)</title><rect x="67.9077%" y="341" width="0.0745%" height="15" fill="rgb(250,135,13)" fg:x="912" fg:w="1"/><text x="68.1577%" y="351.50"></text></g><g><title>test3`std::_Tuple_get (1 samples, 0.07%)</title><rect x="67.9077%" y="325" width="0.0745%" height="15" fill="rgb(219,229,18)" fg:x="912" fg:w="1"/><text x="68.1577%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::getCopyFromRegs (1 samples, 0.07%)</title><rect x="67.9821%" y="357" width="0.0745%" height="15" fill="rgb(217,152,27)" fg:x="913" fg:w="1"/><text x="68.2321%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::getValue (2 samples, 0.15%)</title><rect x="67.9821%" y="373" width="0.1489%" height="15" fill="rgb(225,71,47)" fg:x="913" fg:w="2"/><text x="68.2321%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::getValueImpl (1 samples, 0.07%)</title><rect x="68.0566%" y="357" width="0.0745%" height="15" fill="rgb(220,139,14)" fg:x="914" fg:w="1"/><text x="68.3066%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::getFrameIndex (1 samples, 0.07%)</title><rect x="68.0566%" y="341" width="0.0745%" height="15" fill="rgb(247,54,32)" fg:x="914" fg:w="1"/><text x="68.3066%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::getVTList (1 samples, 0.07%)</title><rect x="68.0566%" y="325" width="0.0745%" height="15" fill="rgb(252,131,39)" fg:x="914" fg:w="1"/><text x="68.3066%" y="335.50"></text></g><g><title>test3`llvm::SDNode::getValueTypeList (1 samples, 0.07%)</title><rect x="68.0566%" y="309" width="0.0745%" height="15" fill="rgb(210,108,39)" fg:x="914" fg:w="1"/><text x="68.3066%" y="319.50"></text></g><g><title>test3`llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.0566%" y="293" width="0.0745%" height="15" fill="rgb(205,23,29)" fg:x="914" fg:w="1"/><text x="68.3066%" y="303.50"></text></g><g><title>test3`llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.0566%" y="277" width="0.0745%" height="15" fill="rgb(246,139,46)" fg:x="914" fg:w="1"/><text x="68.3066%" y="287.50"></text></g><g><title>test3`std::_Atomic_storage (1 samples, 0.07%)</title><rect x="68.0566%" y="261" width="0.0745%" height="15" fill="rgb(250,81,26)" fg:x="914" fg:w="1"/><text x="68.3066%" y="271.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitLoad (3 samples, 0.22%)</title><rect x="67.9821%" y="389" width="0.2234%" height="15" fill="rgb(214,104,7)" fg:x="913" fg:w="3"/><text x="68.2321%" y="399.50"></text></g><g><title>test3`llvm::SmallVector&lt;double,0&gt;::~SmallVector (1 samples, 0.07%)</title><rect x="68.1310%" y="373" width="0.0745%" height="15" fill="rgb(233,189,8)" fg:x="915" fg:w="1"/><text x="68.3810%" y="383.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;int&gt;::~SmallVectorImpl (1 samples, 0.07%)</title><rect x="68.1310%" y="357" width="0.0745%" height="15" fill="rgb(228,141,17)" fg:x="915" fg:w="1"/><text x="68.3810%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::getCopyFromReg (1 samples, 0.07%)</title><rect x="68.2055%" y="373" width="0.0745%" height="15" fill="rgb(247,157,1)" fg:x="916" fg:w="1"/><text x="68.4555%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::getRegister (1 samples, 0.07%)</title><rect x="68.2055%" y="357" width="0.0745%" height="15" fill="rgb(249,225,5)" fg:x="916" fg:w="1"/><text x="68.4555%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::InsertNode (1 samples, 0.07%)</title><rect x="68.2055%" y="341" width="0.0745%" height="15" fill="rgb(242,55,13)" fg:x="916" fg:w="1"/><text x="68.4555%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.2055%" y="325" width="0.0745%" height="15" fill="rgb(230,49,50)" fg:x="916" fg:w="1"/><text x="68.4555%" y="335.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="68.2055%" y="309" width="0.0745%" height="15" fill="rgb(241,111,38)" fg:x="916" fg:w="1"/><text x="68.4555%" y="319.50"></text></g><g><title>test3`llvm::SelectionDAG::getObjectPtrOffset (1 samples, 0.07%)</title><rect x="68.2800%" y="373" width="0.0745%" height="15" fill="rgb(252,155,4)" fg:x="917" fg:w="1"/><text x="68.5300%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::getMemBasePlusOffset (1 samples, 0.07%)</title><rect x="68.2800%" y="357" width="0.0745%" height="15" fill="rgb(212,69,32)" fg:x="917" fg:w="1"/><text x="68.5300%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::getMemBasePlusOffset (1 samples, 0.07%)</title><rect x="68.2800%" y="341" width="0.0745%" height="15" fill="rgb(243,107,47)" fg:x="917" fg:w="1"/><text x="68.5300%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitRet (3 samples, 0.22%)</title><rect x="68.2055%" y="389" width="0.2234%" height="15" fill="rgb(247,130,12)" fg:x="916" fg:w="3"/><text x="68.4555%" y="399.50"></text></g><g><title>test3`llvm::SelectionDAG::getStore (1 samples, 0.07%)</title><rect x="68.3544%" y="373" width="0.0745%" height="15" fill="rgb(233,74,16)" fg:x="918" fg:w="1"/><text x="68.6044%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::getStore (1 samples, 0.07%)</title><rect x="68.3544%" y="357" width="0.0745%" height="15" fill="rgb(208,58,18)" fg:x="918" fg:w="1"/><text x="68.6044%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.3544%" y="341" width="0.0745%" height="15" fill="rgb(242,225,1)" fg:x="918" fg:w="1"/><text x="68.6044%" y="351.50"></text></g><g><title>test3`llvm::FoldingSetImpl&lt;llvm::FoldingSet (1 samples, 0.07%)</title><rect x="68.3544%" y="325" width="0.0745%" height="15" fill="rgb(249,39,40)" fg:x="918" fg:w="1"/><text x="68.6044%" y="335.50"></text></g><g><title>test3`llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.3544%" y="309" width="0.0745%" height="15" fill="rgb(207,72,44)" fg:x="918" fg:w="1"/><text x="68.6044%" y="319.50"></text></g><g><title>test3`llvm::FoldingSet (1 samples, 0.07%)</title><rect x="68.3544%" y="293" width="0.0745%" height="15" fill="rgb(215,193,12)" fg:x="918" fg:w="1"/><text x="68.6044%" y="303.50"></text></g><g><title>test3`llvm::DefaultFoldingSetTrait (1 samples, 0.07%)</title><rect x="68.3544%" y="277" width="0.0745%" height="15" fill="rgb(248,41,39)" fg:x="918" fg:w="1"/><text x="68.6044%" y="287.50"></text></g><g><title>test3`llvm::DefaultFoldingSetTrait (1 samples, 0.07%)</title><rect x="68.3544%" y="261" width="0.0745%" height="15" fill="rgb(253,85,4)" fg:x="918" fg:w="1"/><text x="68.6044%" y="271.50"></text></g><g><title>test3`llvm::SDNode::Profile (1 samples, 0.07%)</title><rect x="68.3544%" y="245" width="0.0745%" height="15" fill="rgb(243,70,31)" fg:x="918" fg:w="1"/><text x="68.6044%" y="255.50"></text></g><g><title>test3`llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.3544%" y="229" width="0.0745%" height="15" fill="rgb(253,195,26)" fg:x="918" fg:w="1"/><text x="68.6044%" y="239.50"></text></g><g><title>test3`llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.07%)</title><rect x="68.3544%" y="213" width="0.0745%" height="15" fill="rgb(243,42,11)" fg:x="918" fg:w="1"/><text x="68.6044%" y="223.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddPointer (1 samples, 0.07%)</title><rect x="68.3544%" y="197" width="0.0745%" height="15" fill="rgb(239,66,17)" fg:x="918" fg:w="1"/><text x="68.6044%" y="207.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddInteger (1 samples, 0.07%)</title><rect x="68.3544%" y="181" width="0.0745%" height="15" fill="rgb(217,132,21)" fg:x="918" fg:w="1"/><text x="68.6044%" y="191.50"></text></g><g><title>test3`llvm::FoldingSetNodeID::AddInteger (1 samples, 0.07%)</title><rect x="68.3544%" y="165" width="0.0745%" height="15" fill="rgb(252,202,21)" fg:x="918" fg:w="1"/><text x="68.6044%" y="175.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="68.3544%" y="149" width="0.0745%" height="15" fill="rgb(233,98,36)" fg:x="918" fg:w="1"/><text x="68.6044%" y="159.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="68.3544%" y="133" width="0.0745%" height="15" fill="rgb(216,153,54)" fg:x="918" fg:w="1"/><text x="68.6044%" y="143.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon&lt;unsigned int,void&gt;::reserveForParamAndGetAddressImpl&lt;llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="68.3544%" y="117" width="0.0745%" height="15" fill="rgb(250,99,7)" fg:x="918" fg:w="1"/><text x="68.6044%" y="127.50"></text></g><g><title>test3`llvm::const_set_bits_iterator_impl (1 samples, 0.07%)</title><rect x="68.3544%" y="101" width="0.0745%" height="15" fill="rgb(207,56,50)" fg:x="918" fg:w="1"/><text x="68.6044%" y="111.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::lowerWorkItem (1 samples, 0.07%)</title><rect x="68.4289%" y="373" width="0.0745%" height="15" fill="rgb(244,61,34)" fg:x="919" fg:w="1"/><text x="68.6789%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitSwitchCase (1 samples, 0.07%)</title><rect x="68.4289%" y="357" width="0.0745%" height="15" fill="rgb(241,50,38)" fg:x="919" fg:w="1"/><text x="68.6789%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::getSetCC (1 samples, 0.07%)</title><rect x="68.4289%" y="341" width="0.0745%" height="15" fill="rgb(212,166,30)" fg:x="919" fg:w="1"/><text x="68.6789%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::getCondCode (1 samples, 0.07%)</title><rect x="68.4289%" y="325" width="0.0745%" height="15" fill="rgb(249,127,32)" fg:x="919" fg:w="1"/><text x="68.6789%" y="335.50"></text></g><g><title>test3`std::vector&lt;llvm::CondCodeSDNode * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="68.4289%" y="309" width="0.0745%" height="15" fill="rgb(209,103,0)" fg:x="919" fg:w="1"/><text x="68.6789%" y="319.50"></text></g><g><title>test3`std::vector&lt;llvm::CondCodeSDNode * __ptr64,std::allocator&lt;llvm::CondCodeSDNode * __ptr64&gt; &gt;::_Resize (1 samples, 0.07%)</title><rect x="68.4289%" y="293" width="0.0745%" height="15" fill="rgb(238,209,51)" fg:x="919" fg:w="1"/><text x="68.6789%" y="303.50"></text></g><g><title>test3`std::vector&lt;llvm::CondCodeSDNode * __ptr64,std::allocator&lt;llvm::CondCodeSDNode * __ptr64&gt; &gt;::_Resize_reallocate (1 samples, 0.07%)</title><rect x="68.4289%" y="277" width="0.0745%" height="15" fill="rgb(237,56,23)" fg:x="919" fg:w="1"/><text x="68.6789%" y="287.50"></text></g><g><title>test3`std::vector&lt;llvm::CondCodeSDNode * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="68.4289%" y="261" width="0.0745%" height="15" fill="rgb(215,153,46)" fg:x="919" fg:w="1"/><text x="68.6789%" y="271.50"></text></g><g><title>test3`std::vector&lt;llvm::CondCodeSDNode * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="68.4289%" y="245" width="0.0745%" height="15" fill="rgb(224,49,31)" fg:x="919" fg:w="1"/><text x="68.6789%" y="255.50"></text></g><g><title>test3`std::_Uninitialized_move&lt;llvm::CondCodeSDNode * __ptr64 * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="68.4289%" y="229" width="0.0745%" height="15" fill="rgb(250,18,42)" fg:x="919" fg:w="1"/><text x="68.6789%" y="239.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="68.4289%" y="213" width="0.0745%" height="15" fill="rgb(215,176,39)" fg:x="919" fg:w="1"/><text x="68.6789%" y="223.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visit (13 samples, 0.97%)</title><rect x="67.6098%" y="421" width="0.9680%" height="15" fill="rgb(223,77,29)" fg:x="908" fg:w="13"/><text x="67.8598%" y="431.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visit (12 samples, 0.89%)</title><rect x="67.6843%" y="405" width="0.8935%" height="15" fill="rgb(234,94,52)" fg:x="909" fg:w="12"/><text x="67.9343%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAGBuilder::visitSwitch (2 samples, 0.15%)</title><rect x="68.4289%" y="389" width="0.1489%" height="15" fill="rgb(220,154,50)" fg:x="919" fg:w="2"/><text x="68.6789%" y="399.50"></text></g><g><title>test3`llvm::SwitchCG::SwitchLowering::findJumpTables (1 samples, 0.07%)</title><rect x="68.5034%" y="373" width="0.0745%" height="15" fill="rgb(212,11,10)" fg:x="920" fg:w="1"/><text x="68.7534%" y="383.50"></text></g><g><title>test3`llvm::X86TargetLowering::areJTsAllowed (1 samples, 0.07%)</title><rect x="68.5034%" y="357" width="0.0745%" height="15" fill="rgb(205,166,19)" fg:x="920" fg:w="1"/><text x="68.7534%" y="367.50"></text></g><g><title>test3`llvm::TargetLoweringBase::areJTsAllowed (1 samples, 0.07%)</title><rect x="68.5034%" y="341" width="0.0745%" height="15" fill="rgb(244,198,16)" fg:x="920" fg:w="1"/><text x="68.7534%" y="351.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="68.5034%" y="325" width="0.0745%" height="15" fill="rgb(219,69,12)" fg:x="920" fg:w="1"/><text x="68.7534%" y="335.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="68.5034%" y="309" width="0.0745%" height="15" fill="rgb(245,30,7)" fg:x="920" fg:w="1"/><text x="68.7534%" y="319.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::SDValue,llvm::Register,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair&lt;llvm::SDValue,llvm::Register&gt; &gt;::~DenseMap&lt;llvm::SDValue,llvm::Register,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="68.5778%" y="389" width="0.0745%" height="15" fill="rgb(218,221,48)" fg:x="921" fg:w="1"/><text x="68.8278%" y="399.50"></text></g><g><title>test3`llvm::deallocate_buffer (1 samples, 0.07%)</title><rect x="68.5778%" y="373" width="0.0745%" height="15" fill="rgb(216,66,15)" fg:x="921" fg:w="1"/><text x="68.8278%" y="383.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="68.5778%" y="357" width="0.0745%" height="15" fill="rgb(226,122,50)" fg:x="921" fg:w="1"/><text x="68.8278%" y="367.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="68.5778%" y="341" width="0.0745%" height="15" fill="rgb(239,156,16)" fg:x="921" fg:w="1"/><text x="68.8278%" y="351.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="68.5778%" y="325" width="0.0745%" height="15" fill="rgb(224,27,38)" fg:x="921" fg:w="1"/><text x="68.8278%" y="335.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="68.5778%" y="309" width="0.0745%" height="15" fill="rgb(224,39,27)" fg:x="921" fg:w="1"/><text x="68.8278%" y="319.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="68.5778%" y="293" width="0.0745%" height="15" fill="rgb(215,92,29)" fg:x="921" fg:w="1"/><text x="68.8278%" y="303.50"></text></g><g><title>test3`llvm::InstrEmitter::EmitNode (2 samples, 0.15%)</title><rect x="68.6523%" y="373" width="0.1489%" height="15" fill="rgb(207,159,16)" fg:x="922" fg:w="2"/><text x="68.9023%" y="383.50"></text></g><g><title>test3`llvm::InstrEmitter::EmitMachineNode (2 samples, 0.15%)</title><rect x="68.6523%" y="357" width="0.1489%" height="15" fill="rgb(238,163,47)" fg:x="922" fg:w="2"/><text x="68.9023%" y="367.50"></text></g><g><title>test3`llvm::MachineInstr::setPhysRegsDeadExcept (1 samples, 0.07%)</title><rect x="68.7267%" y="341" width="0.0745%" height="15" fill="rgb(219,91,49)" fg:x="923" fg:w="1"/><text x="68.9767%" y="351.50"></text></g><g><title>test3`std::make_unique (1 samples, 0.07%)</title><rect x="68.7267%" y="325" width="0.0745%" height="15" fill="rgb(227,167,31)" fg:x="923" fg:w="1"/><text x="68.9767%" y="335.50"></text></g><g><title>test3`std::make_unique (1 samples, 0.07%)</title><rect x="68.7267%" y="309" width="0.0745%" height="15" fill="rgb(234,80,54)" fg:x="923" fg:w="1"/><text x="68.9767%" y="319.50"></text></g><g><title>test3`std::_Adl_verify_range (1 samples, 0.07%)</title><rect x="68.7267%" y="293" width="0.0745%" height="15" fill="rgb(212,114,2)" fg:x="923" fg:w="1"/><text x="68.9767%" y="303.50"></text></g><g><title>test3`std::_Verify_range (1 samples, 0.07%)</title><rect x="68.7267%" y="277" width="0.0745%" height="15" fill="rgb(234,50,24)" fg:x="923" fg:w="1"/><text x="68.9767%" y="287.50"></text></g><g><title>test3`llvm::InstrEmitter::getInsertPos (1 samples, 0.07%)</title><rect x="68.8012%" y="373" width="0.0745%" height="15" fill="rgb(221,68,8)" fg:x="924" fg:w="1"/><text x="69.0512%" y="383.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::EmitPhysRegCopy (4 samples, 0.30%)</title><rect x="68.6523%" y="389" width="0.2978%" height="15" fill="rgb(254,180,31)" fg:x="922" fg:w="4"/><text x="68.9023%" y="399.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::EmitPhysRegCopy (1 samples, 0.07%)</title><rect x="68.8757%" y="373" width="0.0745%" height="15" fill="rgb(247,130,50)" fg:x="925" fg:w="1"/><text x="69.1257%" y="383.50"></text></g><g><title>test3`llvm::MachineBasicBlock::begin (1 samples, 0.07%)</title><rect x="68.8757%" y="357" width="0.0745%" height="15" fill="rgb(211,109,4)" fg:x="925" fg:w="1"/><text x="69.1257%" y="367.50"></text></g><g><title>test3`llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr const ,1&gt;::MachineInstrBundleIterator (1 samples, 0.07%)</title><rect x="68.8757%" y="341" width="0.0745%" height="15" fill="rgb(238,50,21)" fg:x="925" fg:w="1"/><text x="69.1257%" y="351.50"></text></g><g><title>test3`llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="68.8757%" y="325" width="0.0745%" height="15" fill="rgb(225,57,45)" fg:x="925" fg:w="1"/><text x="69.1257%" y="335.50"></text></g><g><title>test3`llvm::ilist_node_base (1 samples, 0.07%)</title><rect x="68.8757%" y="309" width="0.0745%" height="15" fill="rgb(209,196,50)" fg:x="925" fg:w="1"/><text x="69.1257%" y="319.50"></text></g><g><title>test3`llvm::ilist_node_base (1 samples, 0.07%)</title><rect x="68.8757%" y="293" width="0.0745%" height="15" fill="rgb(242,140,13)" fg:x="925" fg:w="1"/><text x="69.1257%" y="303.50"></text></g><g><title>test3`llvm::PointerIntPair&lt;llvm::AADepGraphNode * __ptr64,1,unsigned int,llvm::PointerLikeTypeTraits&lt;llvm::AADepGraphNode * __ptr64&gt;,llvm::PointerIntPairInfo&lt;llvm::AADepGraphNode * __ptr64,1,llvm::PointerLikeTypeTraits (1 samples, 0.07%)</title><rect x="68.8757%" y="277" width="0.0745%" height="15" fill="rgb(217,111,7)" fg:x="925" fg:w="1"/><text x="69.1257%" y="287.50"></text></g><g><title>test3`llvm::PointerIntPairInfo&lt;llvm::AADepGraphNode * __ptr64,1,llvm::PointerLikeTypeTraits (1 samples, 0.07%)</title><rect x="68.8757%" y="261" width="0.0745%" height="15" fill="rgb(253,193,51)" fg:x="925" fg:w="1"/><text x="69.1257%" y="271.50"></text></g><g><title>test3`llvm::early_inc_iterator_impl&lt;llvm::MachineInstrBundleIterator (1 samples, 0.07%)</title><rect x="68.9501%" y="389" width="0.0745%" height="15" fill="rgb(252,70,29)" fg:x="926" fg:w="1"/><text x="69.2001%" y="399.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::EmitSchedule (7 samples, 0.52%)</title><rect x="68.5778%" y="405" width="0.5212%" height="15" fill="rgb(232,127,12)" fg:x="921" fg:w="7"/><text x="68.8278%" y="415.50"></text></g><g><title>test3`llvm::make_early_inc_range&lt;llvm::iterator_range&lt;llvm::MachineInstrBundleIterator (1 samples, 0.07%)</title><rect x="69.0246%" y="389" width="0.0745%" height="15" fill="rgb(211,180,21)" fg:x="927" fg:w="1"/><text x="69.2746%" y="399.50"></text></g><g><title>test3`std::end&lt;llvm::iterator_range&lt;llvm::pointee_iterator (1 samples, 0.07%)</title><rect x="69.0246%" y="373" width="0.0745%" height="15" fill="rgb(229,72,13)" fg:x="927" fg:w="1"/><text x="69.2746%" y="383.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::AddSchedEdges (1 samples, 0.07%)</title><rect x="69.0990%" y="357" width="0.0745%" height="15" fill="rgb(240,211,49)" fg:x="928" fg:w="1"/><text x="69.3490%" y="367.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::isPassiveNode (1 samples, 0.07%)</title><rect x="69.0990%" y="341" width="0.0745%" height="15" fill="rgb(219,149,40)" fg:x="928" fg:w="1"/><text x="69.3490%" y="351.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="69.0990%" y="325" width="0.0745%" height="15" fill="rgb(210,127,46)" fg:x="928" fg:w="1"/><text x="69.3490%" y="335.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="69.0990%" y="309" width="0.0745%" height="15" fill="rgb(220,106,7)" fg:x="928" fg:w="1"/><text x="69.3490%" y="319.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="69.0990%" y="293" width="0.0745%" height="15" fill="rgb(249,31,22)" fg:x="928" fg:w="1"/><text x="69.3490%" y="303.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::isPassiveNode (1 samples, 0.07%)</title><rect x="69.1735%" y="341" width="0.0745%" height="15" fill="rgb(253,1,49)" fg:x="929" fg:w="1"/><text x="69.4235%" y="351.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="69.1735%" y="325" width="0.0745%" height="15" fill="rgb(227,144,33)" fg:x="929" fg:w="1"/><text x="69.4235%" y="335.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="69.1735%" y="309" width="0.0745%" height="15" fill="rgb(249,163,44)" fg:x="929" fg:w="1"/><text x="69.4235%" y="319.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="69.1735%" y="293" width="0.0745%" height="15" fill="rgb(234,15,39)" fg:x="929" fg:w="1"/><text x="69.4235%" y="303.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="69.1735%" y="277" width="0.0745%" height="15" fill="rgb(207,66,16)" fg:x="929" fg:w="1"/><text x="69.4235%" y="287.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="69.1735%" y="261" width="0.0745%" height="15" fill="rgb(233,112,24)" fg:x="929" fg:w="1"/><text x="69.4235%" y="271.50"></text></g><g><title>test3`llvm::BasicBlockSDNode::classof (1 samples, 0.07%)</title><rect x="69.1735%" y="245" width="0.0745%" height="15" fill="rgb(230,90,22)" fg:x="929" fg:w="1"/><text x="69.4235%" y="255.50"></text></g><g><title>test3`llvm::MCRegisterClass::getID (1 samples, 0.07%)</title><rect x="69.1735%" y="229" width="0.0745%" height="15" fill="rgb(229,61,13)" fg:x="929" fg:w="1"/><text x="69.4235%" y="239.50"></text></g><g><title>test3`std::_List_unchecked_const_iterator&lt;std::_List_val&lt;std::_List_simple_types (1 samples, 0.07%)</title><rect x="69.2480%" y="341" width="0.0745%" height="15" fill="rgb(225,57,24)" fg:x="930" fg:w="1"/><text x="69.4980%" y="351.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::BuildSchedGraph (4 samples, 0.30%)</title><rect x="69.0990%" y="373" width="0.2978%" height="15" fill="rgb(208,169,48)" fg:x="928" fg:w="4"/><text x="69.3490%" y="383.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::BuildSchedUnits (3 samples, 0.22%)</title><rect x="69.1735%" y="357" width="0.2234%" height="15" fill="rgb(244,218,51)" fg:x="929" fg:w="3"/><text x="69.4235%" y="367.50"></text></g><g><title>test3`std::vector&lt;llvm::SUnit,std::allocator (1 samples, 0.07%)</title><rect x="69.3224%" y="341" width="0.0745%" height="15" fill="rgb(214,148,10)" fg:x="931" fg:w="1"/><text x="69.5724%" y="351.50"></text></g><g><title>test3`std::vector&lt;llvm::SUnit,std::allocator (1 samples, 0.07%)</title><rect x="69.3224%" y="325" width="0.0745%" height="15" fill="rgb(225,174,27)" fg:x="931" fg:w="1"/><text x="69.5724%" y="335.50"></text></g><g><title>test3`std::allocator&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl (1 samples, 0.07%)</title><rect x="69.3224%" y="309" width="0.0745%" height="15" fill="rgb(230,96,26)" fg:x="931" fg:w="1"/><text x="69.5724%" y="319.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="69.3224%" y="293" width="0.0745%" height="15" fill="rgb(232,10,30)" fg:x="931" fg:w="1"/><text x="69.5724%" y="303.50"></text></g><g><title>test3`std::_Allocate_manually_vector_aligned (1 samples, 0.07%)</title><rect x="69.3224%" y="277" width="0.0745%" height="15" fill="rgb(222,8,50)" fg:x="931" fg:w="1"/><text x="69.5724%" y="287.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="69.3224%" y="261" width="0.0745%" height="15" fill="rgb(213,81,27)" fg:x="931" fg:w="1"/><text x="69.5724%" y="271.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="69.3224%" y="245" width="0.0745%" height="15" fill="rgb(245,50,10)" fg:x="931" fg:w="1"/><text x="69.5724%" y="255.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="69.3224%" y="229" width="0.0745%" height="15" fill="rgb(216,100,18)" fg:x="931" fg:w="1"/><text x="69.5724%" y="239.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="69.3224%" y="213" width="0.0745%" height="15" fill="rgb(236,147,54)" fg:x="931" fg:w="1"/><text x="69.5724%" y="223.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="69.3224%" y="197" width="0.0745%" height="15" fill="rgb(205,143,26)" fg:x="931" fg:w="1"/><text x="69.5724%" y="207.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="69.3224%" y="181" width="0.0745%" height="15" fill="rgb(236,26,9)" fg:x="931" fg:w="1"/><text x="69.5724%" y="191.50"></text></g><g><title>ucrtbased`local_unwind (1 samples, 0.07%)</title><rect x="69.3224%" y="165" width="0.0745%" height="15" fill="rgb(221,165,53)" fg:x="931" fg:w="1"/><text x="69.5724%" y="175.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="69.3969%" y="309" width="0.0745%" height="15" fill="rgb(214,110,17)" fg:x="932" fg:w="1"/><text x="69.6469%" y="319.50"></text></g><g><title>test3`llvm::ScheduleDAGSDNodes::Run (6 samples, 0.45%)</title><rect x="69.0990%" y="405" width="0.4468%" height="15" fill="rgb(237,197,12)" fg:x="928" fg:w="6"/><text x="69.3490%" y="415.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (6 samples, 0.45%)</title><rect x="69.0990%" y="389" width="0.4468%" height="15" fill="rgb(205,84,17)" fg:x="928" fg:w="6"/><text x="69.3490%" y="399.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (2 samples, 0.15%)</title><rect x="69.3969%" y="373" width="0.1489%" height="15" fill="rgb(237,18,45)" fg:x="932" fg:w="2"/><text x="69.6469%" y="383.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (2 samples, 0.15%)</title><rect x="69.3969%" y="357" width="0.1489%" height="15" fill="rgb(221,87,14)" fg:x="932" fg:w="2"/><text x="69.6469%" y="367.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (2 samples, 0.15%)</title><rect x="69.3969%" y="341" width="0.1489%" height="15" fill="rgb(238,186,15)" fg:x="932" fg:w="2"/><text x="69.6469%" y="351.50"></text></g><g><title>test3`std::make_pair&lt;llvm::SUnit * __ptr64 &amp; __ptr64,llvm::SmallVector (2 samples, 0.15%)</title><rect x="69.3969%" y="325" width="0.1489%" height="15" fill="rgb(208,115,11)" fg:x="932" fg:w="2"/><text x="69.6469%" y="335.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="69.4713%" y="309" width="0.0745%" height="15" fill="rgb(254,175,0)" fg:x="933" fg:w="1"/><text x="69.7213%" y="319.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="69.4713%" y="293" width="0.0745%" height="15" fill="rgb(227,24,42)" fg:x="933" fg:w="1"/><text x="69.7213%" y="303.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="69.4713%" y="277" width="0.0745%" height="15" fill="rgb(223,211,37)" fg:x="933" fg:w="1"/><text x="69.7213%" y="287.50"></text></g><g><title>test3`llvm::SDNode::op_values (1 samples, 0.07%)</title><rect x="69.7692%" y="373" width="0.0745%" height="15" fill="rgb(235,49,27)" fg:x="937" fg:w="1"/><text x="70.0192%" y="383.50"></text></g><g><title>test3`llvm::make_range&lt;llvm::detail::SafeIntIterator (1 samples, 0.07%)</title><rect x="69.7692%" y="357" width="0.0745%" height="15" fill="rgb(254,97,51)" fg:x="937" fg:w="1"/><text x="70.0192%" y="367.50"></text></g><g><title>test3`llvm::iterator_range&lt;llvm::detail::SafeIntIterator&lt;enum llvm::MVT::SimpleValueType,1&gt; &gt;::iterator_range&lt;llvm::detail::SafeIntIterator (1 samples, 0.07%)</title><rect x="69.7692%" y="341" width="0.0745%" height="15" fill="rgb(249,51,40)" fg:x="937" fg:w="1"/><text x="70.0192%" y="351.50"></text></g><g><title>test3`&lt;move&gt;&lt;llvm::Optional (1 samples, 0.07%)</title><rect x="69.7692%" y="325" width="0.0745%" height="15" fill="rgb(210,128,45)" fg:x="937" fg:w="1"/><text x="70.0192%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (1 samples, 0.07%)</title><rect x="69.8436%" y="373" width="0.0745%" height="15" fill="rgb(224,137,50)" fg:x="938" fg:w="1"/><text x="70.0936%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (1 samples, 0.07%)</title><rect x="69.8436%" y="357" width="0.0745%" height="15" fill="rgb(242,15,9)" fg:x="938" fg:w="1"/><text x="70.0936%" y="367.50"></text></g><g><title>test3`llvm::TargetLoweringBase::getTypeAction (1 samples, 0.07%)</title><rect x="69.8436%" y="341" width="0.0745%" height="15" fill="rgb(233,187,41)" fg:x="938" fg:w="1"/><text x="70.0936%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::RemoveDeadNodes (1 samples, 0.07%)</title><rect x="69.9181%" y="373" width="0.0745%" height="15" fill="rgb(227,2,29)" fg:x="939" fg:w="1"/><text x="70.1681%" y="383.50"></text></g><g><title>test3`llvm::HandleSDNode::HandleSDNode (1 samples, 0.07%)</title><rect x="69.9181%" y="357" width="0.0745%" height="15" fill="rgb(222,70,3)" fg:x="939" fg:w="1"/><text x="70.1681%" y="367.50"></text></g><g><title>test3`llvm::SDUse::setInitial (1 samples, 0.07%)</title><rect x="69.9181%" y="341" width="0.0745%" height="15" fill="rgb(213,11,42)" fg:x="939" fg:w="1"/><text x="70.1681%" y="351.50"></text></g><g><title>test3`llvm::SDNode::addUse (1 samples, 0.07%)</title><rect x="69.9181%" y="325" width="0.0745%" height="15" fill="rgb(225,150,9)" fg:x="939" fg:w="1"/><text x="70.1681%" y="335.50"></text></g><g><title>test3`llvm::SDUse::addToList (1 samples, 0.07%)</title><rect x="69.9181%" y="309" width="0.0745%" height="15" fill="rgb(230,162,45)" fg:x="939" fg:w="1"/><text x="70.1681%" y="319.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (2 samples, 0.15%)</title><rect x="69.9926%" y="373" width="0.1489%" height="15" fill="rgb(222,14,52)" fg:x="940" fg:w="2"/><text x="70.2426%" y="383.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::find_imp (2 samples, 0.15%)</title><rect x="69.9926%" y="357" width="0.1489%" height="15" fill="rgb(254,198,14)" fg:x="940" fg:w="2"/><text x="70.2426%" y="367.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::EndPointer (2 samples, 0.15%)</title><rect x="69.9926%" y="341" width="0.1489%" height="15" fill="rgb(220,217,30)" fg:x="940" fg:w="2"/><text x="70.2426%" y="351.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::isSmall (1 samples, 0.07%)</title><rect x="70.0670%" y="325" width="0.0745%" height="15" fill="rgb(215,146,41)" fg:x="941" fg:w="1"/><text x="70.3170%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;,llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="70.1415%" y="325" width="0.0745%" height="15" fill="rgb(217,27,36)" fg:x="942" fg:w="1"/><text x="70.3915%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;,llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="70.1415%" y="309" width="0.0745%" height="15" fill="rgb(219,218,39)" fg:x="942" fg:w="1"/><text x="70.3915%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;,llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="70.1415%" y="293" width="0.0745%" height="15" fill="rgb(219,4,42)" fg:x="942" fg:w="1"/><text x="70.3915%" y="303.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="70.1415%" y="277" width="0.0745%" height="15" fill="rgb(249,119,36)" fg:x="942" fg:w="1"/><text x="70.3915%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager (1 samples, 0.07%)</title><rect x="70.1415%" y="261" width="0.0745%" height="15" fill="rgb(209,23,33)" fg:x="942" fg:w="1"/><text x="70.3915%" y="271.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;,llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="70.1415%" y="357" width="0.1489%" height="15" fill="rgb(211,10,0)" fg:x="942" fg:w="2"/><text x="70.3915%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;,llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;::try_emplace (2 samples, 0.15%)</title><rect x="70.1415%" y="341" width="0.1489%" height="15" fill="rgb(208,99,37)" fg:x="942" fg:w="2"/><text x="70.3915%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;,llvm::SDNode * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::SDNode * __ptr64,unsigned int&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="70.2159%" y="325" width="0.0745%" height="15" fill="rgb(213,132,31)" fg:x="943" fg:w="1"/><text x="70.4659%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="70.2159%" y="309" width="0.0745%" height="15" fill="rgb(243,129,40)" fg:x="943" fg:w="1"/><text x="70.4659%" y="319.50"></text></g><g><title>test3`llvm::SetVector&lt;llvm::SDNode * __ptr64,llvm::SmallVector&lt;llvm::SDNode * __ptr64,32&gt;,llvm::SmallDenseSet&lt;llvm::SDNode * __ptr64,32,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="70.2904%" y="341" width="0.0745%" height="15" fill="rgb(210,66,33)" fg:x="944" fg:w="1"/><text x="70.5404%" y="351.50"></text></g><g><title>test3`llvm::SetVector&lt;llvm::SDNode * __ptr64,llvm::SmallVector&lt;llvm::SDNode * __ptr64,32&gt;,llvm::SmallDenseSet&lt;llvm::SDNode * __ptr64,32,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="70.2904%" y="325" width="0.0745%" height="15" fill="rgb(209,189,4)" fg:x="944" fg:w="1"/><text x="70.5404%" y="335.50"></text></g><g><title>test3`llvm::detail::DenseSetImpl&lt;llvm::SDNode * __ptr64,llvm::SmallDenseMap&lt;llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,32,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseSetPair&lt;llvm::SDNode * __ptr64&gt; &gt;,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="70.2904%" y="309" width="0.0745%" height="15" fill="rgb(214,107,37)" fg:x="944" fg:w="1"/><text x="70.5404%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,32,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseSetPair&lt;llvm::SDNode * __ptr64&gt; &gt;,llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="70.2904%" y="293" width="0.0745%" height="15" fill="rgb(245,88,54)" fg:x="944" fg:w="1"/><text x="70.5404%" y="303.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,32,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseSetPair&lt;llvm::SDNode * __ptr64&gt; &gt;,llvm::SDNode * __ptr64,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::SDNode * __ptr64&gt;,llvm::detail::DenseSetPair&lt;llvm::SDNode * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="70.2904%" y="277" width="0.0745%" height="15" fill="rgb(205,146,20)" fg:x="944" fg:w="1"/><text x="70.5404%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::BasicBlock * __ptr64,llvm::detail::DenseSetEmpty,32,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseSetPair&lt;llvm::BasicBlock * __ptr64&gt; &gt;,llvm::BasicBlock * __ptr64,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseSetPair&lt;llvm::BasicBlock * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="70.2904%" y="261" width="0.0745%" height="15" fill="rgb(220,161,25)" fg:x="944" fg:w="1"/><text x="70.5404%" y="271.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;unsigned short,llvm::detail::DenseSetEmpty,4,llvm::DenseMapInfo&lt;unsigned short&gt;,llvm::detail::DenseSetPair&lt;unsigned short&gt; &gt;,unsigned short,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;unsigned short&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="70.2904%" y="245" width="0.0745%" height="15" fill="rgb(215,152,15)" fg:x="944" fg:w="1"/><text x="70.5404%" y="255.50"></text></g><g><title>test3`llvm::SmallDenseMap&lt;unsigned short,llvm::detail::DenseSetEmpty,4,llvm::DenseMapInfo&lt;unsigned short&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="70.2904%" y="229" width="0.0745%" height="15" fill="rgb(233,192,44)" fg:x="944" fg:w="1"/><text x="70.5404%" y="239.50"></text></g><g><title>test3`_RTC_CheckStackVars (2 samples, 0.15%)</title><rect x="70.4393%" y="325" width="0.1489%" height="15" fill="rgb(240,170,46)" fg:x="946" fg:w="2"/><text x="70.6893%" y="335.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="70.6627%" y="309" width="0.0745%" height="15" fill="rgb(207,104,33)" fg:x="949" fg:w="1"/><text x="70.9127%" y="319.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="70.7372%" y="293" width="0.0745%" height="15" fill="rgb(219,21,39)" fg:x="950" fg:w="1"/><text x="70.9872%" y="303.50"></text></g><g><title>test3`llvm::SDNode::hasOneUse (1 samples, 0.07%)</title><rect x="70.8116%" y="245" width="0.0745%" height="15" fill="rgb(214,133,29)" fg:x="951" fg:w="1"/><text x="71.0616%" y="255.50"></text></g><g><title>test3`llvm::hasSingleElement&lt;llvm::iterator_range (1 samples, 0.07%)</title><rect x="70.8116%" y="229" width="0.0745%" height="15" fill="rgb(226,93,6)" fg:x="951" fg:w="1"/><text x="71.0616%" y="239.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="70.8116%" y="213" width="0.0745%" height="15" fill="rgb(252,222,34)" fg:x="951" fg:w="1"/><text x="71.0616%" y="223.50"></text></g><g><title>test3`llvm::SelectionDAG::computeKnownBits (1 samples, 0.07%)</title><rect x="70.8861%" y="245" width="0.0745%" height="15" fill="rgb(252,92,48)" fg:x="952" fg:w="1"/><text x="71.1361%" y="255.50"></text></g><g><title>test3`llvm::SelectionDAG::computeKnownBits (1 samples, 0.07%)</title><rect x="70.8861%" y="229" width="0.0745%" height="15" fill="rgb(245,223,24)" fg:x="952" fg:w="1"/><text x="71.1361%" y="239.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="70.8861%" y="213" width="0.0745%" height="15" fill="rgb(205,176,3)" fg:x="952" fg:w="1"/><text x="71.1361%" y="223.50"></text></g><g><title>test3`llvm::SDNode::hasOneUse (1 samples, 0.07%)</title><rect x="70.9605%" y="229" width="0.0745%" height="15" fill="rgb(235,151,15)" fg:x="953" fg:w="1"/><text x="71.2105%" y="239.50"></text></g><g><title>test3`llvm::SDNode::uses (1 samples, 0.07%)</title><rect x="70.9605%" y="213" width="0.0745%" height="15" fill="rgb(237,209,11)" fg:x="953" fg:w="1"/><text x="71.2105%" y="223.50"></text></g><g><title>test3`llvm::make_range (1 samples, 0.07%)</title><rect x="70.9605%" y="197" width="0.0745%" height="15" fill="rgb(243,227,24)" fg:x="953" fg:w="1"/><text x="71.2105%" y="207.50"></text></g><g><title>test3`llvm::BasicBlock::phi_iterator_impl&lt;llvm::PHINode const ,llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction,0,0,void&gt;,0,1&gt; &gt;::phi_iterator_impl&lt;llvm::PHINode const ,llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::Instruction,0,0,void&gt;,0,1&gt; &gt;&lt;llvm::PHINode,llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="70.9605%" y="181" width="0.0745%" height="15" fill="rgb(239,193,16)" fg:x="953" fg:w="1"/><text x="71.2105%" y="191.50"></text></g><g><title>test3`llvm::TargetLowering::SimplifyDemandedBits (2 samples, 0.15%)</title><rect x="70.9605%" y="245" width="0.1489%" height="15" fill="rgb(231,27,9)" fg:x="953" fg:w="2"/><text x="71.2105%" y="255.50"></text></g><g><title>test3`llvm::SelectionDAG::computeKnownBits (1 samples, 0.07%)</title><rect x="71.0350%" y="229" width="0.0745%" height="15" fill="rgb(219,169,10)" fg:x="954" fg:w="1"/><text x="71.2850%" y="239.50"></text></g><g><title>test3`llvm::KnownBits::hasConflict (1 samples, 0.07%)</title><rect x="71.0350%" y="213" width="0.0745%" height="15" fill="rgb(244,229,43)" fg:x="954" fg:w="1"/><text x="71.2850%" y="223.50"></text></g><g><title>test3`llvm::APInt::intersects (1 samples, 0.07%)</title><rect x="71.0350%" y="197" width="0.0745%" height="15" fill="rgb(254,38,20)" fg:x="954" fg:w="1"/><text x="71.2850%" y="207.50"></text></g><g><title>test3`llvm::TargetLowering::SimplifyDemandedBits (5 samples, 0.37%)</title><rect x="70.8116%" y="277" width="0.3723%" height="15" fill="rgb(250,47,30)" fg:x="951" fg:w="5"/><text x="71.0616%" y="287.50"></text></g><g><title>test3`llvm::TargetLowering::SimplifyDemandedBits (5 samples, 0.37%)</title><rect x="70.8116%" y="261" width="0.3723%" height="15" fill="rgb(224,124,36)" fg:x="951" fg:w="5"/><text x="71.0616%" y="271.50"></text></g><g><title>test3`std::_Tuple_val&lt;llvm::DebugLoc&gt;::~_Tuple_val (1 samples, 0.07%)</title><rect x="71.1095%" y="245" width="0.0745%" height="15" fill="rgb(246,68,51)" fg:x="955" fg:w="1"/><text x="71.3595%" y="255.50"></text></g><g><title>test3`llvm::DebugLoc::~DebugLoc (1 samples, 0.07%)</title><rect x="71.1095%" y="229" width="0.0745%" height="15" fill="rgb(253,43,49)" fg:x="955" fg:w="1"/><text x="71.3595%" y="239.50"></text></g><g><title>test3`llvm::TypedTrackingMDRef&lt;llvm::DICompositeType&gt;::~TypedTrackingMDRef (1 samples, 0.07%)</title><rect x="71.1095%" y="213" width="0.0745%" height="15" fill="rgb(219,54,36)" fg:x="955" fg:w="1"/><text x="71.3595%" y="223.50"></text></g><g><title>test3`llvm::TrackingMDRef::~TrackingMDRef (1 samples, 0.07%)</title><rect x="71.1095%" y="197" width="0.0745%" height="15" fill="rgb(227,133,34)" fg:x="955" fg:w="1"/><text x="71.3595%" y="207.50"></text></g><g><title>test3`llvm::TrackingMDRef::untrack (1 samples, 0.07%)</title><rect x="71.1095%" y="181" width="0.0745%" height="15" fill="rgb(247,227,15)" fg:x="955" fg:w="1"/><text x="71.3595%" y="191.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (7 samples, 0.52%)</title><rect x="70.7372%" y="309" width="0.5212%" height="15" fill="rgb(229,96,14)" fg:x="950" fg:w="7"/><text x="70.9872%" y="319.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (6 samples, 0.45%)</title><rect x="70.8116%" y="293" width="0.4468%" height="15" fill="rgb(220,79,17)" fg:x="951" fg:w="6"/><text x="71.0616%" y="303.50"></text></g><g><title>test3`llvm::TrackingStatistic::operator++ (1 samples, 0.07%)</title><rect x="71.1839%" y="277" width="0.0745%" height="15" fill="rgb(205,131,53)" fg:x="956" fg:w="1"/><text x="71.4339%" y="287.50"></text></g><g><title>test3`std::_Atomic_integral (1 samples, 0.07%)</title><rect x="71.1839%" y="261" width="0.0745%" height="15" fill="rgb(209,50,29)" fg:x="956" fg:w="1"/><text x="71.4339%" y="271.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (10 samples, 0.74%)</title><rect x="70.5882%" y="325" width="0.7446%" height="15" fill="rgb(245,86,46)" fg:x="948" fg:w="10"/><text x="70.8382%" y="335.50"></text></g><g><title>test3`llvm::TargetLowering::SimplifySetCC (1 samples, 0.07%)</title><rect x="71.2584%" y="309" width="0.0745%" height="15" fill="rgb(235,66,46)" fg:x="957" fg:w="1"/><text x="71.5084%" y="319.50"></text></g><g><title>test3`llvm::TargetLowering::buildSREMEqFold (1 samples, 0.07%)</title><rect x="71.2584%" y="293" width="0.0745%" height="15" fill="rgb(232,148,31)" fg:x="957" fg:w="1"/><text x="71.5084%" y="303.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="71.2584%" y="277" width="0.0745%" height="15" fill="rgb(217,149,8)" fg:x="957" fg:w="1"/><text x="71.5084%" y="287.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (15 samples, 1.12%)</title><rect x="70.2904%" y="357" width="1.1169%" height="15" fill="rgb(209,183,11)" fg:x="944" fg:w="15"/><text x="70.5404%" y="367.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (14 samples, 1.04%)</title><rect x="70.3649%" y="341" width="1.0424%" height="15" fill="rgb(208,55,20)" fg:x="945" fg:w="14"/><text x="70.6149%" y="351.50"></text></g><g><title>test3`llvm::dyn_cast (1 samples, 0.07%)</title><rect x="71.3328%" y="325" width="0.0745%" height="15" fill="rgb(218,39,14)" fg:x="958" fg:w="1"/><text x="71.5828%" y="335.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="71.3328%" y="309" width="0.0745%" height="15" fill="rgb(216,169,33)" fg:x="958" fg:w="1"/><text x="71.5828%" y="319.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="71.3328%" y="293" width="0.0745%" height="15" fill="rgb(233,80,24)" fg:x="958" fg:w="1"/><text x="71.5828%" y="303.50"></text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (19 samples, 1.41%)</title><rect x="70.1415%" y="373" width="1.4147%" height="15" fill="rgb(213,179,31)" fg:x="942" fg:w="19"/><text x="70.3915%" y="383.50"></text></g><g><title>test3`llvm::X86TargetLowering::PerformDAGCombine (2 samples, 0.15%)</title><rect x="71.4073%" y="357" width="0.1489%" height="15" fill="rgb(209,19,5)" fg:x="959" fg:w="2"/><text x="71.6573%" y="367.50"></text></g><g><title>test3`llvm::createSplat2ShuffleMask (2 samples, 0.15%)</title><rect x="71.4073%" y="341" width="0.1489%" height="15" fill="rgb(219,18,35)" fg:x="959" fg:w="2"/><text x="71.6573%" y="351.50"></text></g><g><title>test3`llvm::detail::SafeIntIterator (2 samples, 0.15%)</title><rect x="71.5562%" y="373" width="0.1489%" height="15" fill="rgb(209,169,16)" fg:x="961" fg:w="2"/><text x="71.8062%" y="383.50"></text></g><g><title>test3`llvm::detail::SafeIntIterator (2 samples, 0.15%)</title><rect x="71.5562%" y="357" width="0.1489%" height="15" fill="rgb(245,90,51)" fg:x="961" fg:w="2"/><text x="71.8062%" y="367.50"></text></g><g><title>test3`llvm::detail::CheckedInt::operator+ (2 samples, 0.15%)</title><rect x="71.5562%" y="341" width="0.1489%" height="15" fill="rgb(220,99,45)" fg:x="961" fg:w="2"/><text x="71.8062%" y="351.50"></text></g><g><title>test3`llvm::AddOverflow (1 samples, 0.07%)</title><rect x="71.6307%" y="325" width="0.0745%" height="15" fill="rgb(249,89,25)" fg:x="962" fg:w="1"/><text x="71.8807%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAG::Combine (30 samples, 2.23%)</title><rect x="69.5458%" y="405" width="2.2338%" height="15" fill="rgb(239,193,0)" fg:x="934" fg:w="30"/><text x="69.7958%" y="415.50">t..</text></g><g><title>test3`llvm::TargetLowering::DAGCombinerInfo::CommitTargetLoweringOpt (30 samples, 2.23%)</title><rect x="69.5458%" y="389" width="2.2338%" height="15" fill="rgb(231,126,1)" fg:x="934" fg:w="30"/><text x="69.7958%" y="399.50">t..</text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="71.7051%" y="373" width="0.0745%" height="15" fill="rgb(243,166,3)" fg:x="963" fg:w="1"/><text x="71.9551%" y="383.50"></text></g><g><title>test3`llvm::SDNode::uses (1 samples, 0.07%)</title><rect x="71.7796%" y="373" width="0.0745%" height="15" fill="rgb(223,22,34)" fg:x="964" fg:w="1"/><text x="72.0296%" y="383.50"></text></g><g><title>test3`llvm::make_range (1 samples, 0.07%)</title><rect x="71.7796%" y="357" width="0.0745%" height="15" fill="rgb(251,52,51)" fg:x="964" fg:w="1"/><text x="72.0296%" y="367.50"></text></g><g><title>test3`llvm::iterator_range&lt;llvm::SDNode::use_iterator&gt;::iterator_range (1 samples, 0.07%)</title><rect x="71.7796%" y="341" width="0.0745%" height="15" fill="rgb(221,165,28)" fg:x="964" fg:w="1"/><text x="72.0296%" y="351.50"></text></g><g><title>test3`&lt;move&gt;&lt;llvm::Optional (1 samples, 0.07%)</title><rect x="71.7796%" y="325" width="0.0745%" height="15" fill="rgb(218,121,47)" fg:x="964" fg:w="1"/><text x="72.0296%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAG::AssignTopologicalOrder (2 samples, 0.15%)</title><rect x="71.7796%" y="389" width="0.1489%" height="15" fill="rgb(209,120,9)" fg:x="964" fg:w="2"/><text x="72.0296%" y="399.50"></text></g><g><title>test3`llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="71.8541%" y="373" width="0.0745%" height="15" fill="rgb(236,68,12)" fg:x="965" fg:w="1"/><text x="72.1041%" y="383.50"></text></g><g><title>test3`std::end (1 samples, 0.07%)</title><rect x="71.8541%" y="357" width="0.0745%" height="15" fill="rgb(225,194,26)" fg:x="965" fg:w="1"/><text x="72.1041%" y="367.50"></text></g><g><title>test3`std::_Tuple_get (1 samples, 0.07%)</title><rect x="71.8541%" y="341" width="0.0745%" height="15" fill="rgb(231,84,39)" fg:x="965" fg:w="1"/><text x="72.1041%" y="351.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="72.0030%" y="357" width="0.0745%" height="15" fill="rgb(210,11,45)" fg:x="967" fg:w="1"/><text x="72.2530%" y="367.50"></text></g><g><title>test3`llvm::ISD::ArgFlagsTy::setOrigAlign (1 samples, 0.07%)</title><rect x="72.0774%" y="293" width="0.0745%" height="15" fill="rgb(224,54,52)" fg:x="968" fg:w="1"/><text x="72.3274%" y="303.50"></text></g><g><title>test3`llvm::encode (1 samples, 0.07%)</title><rect x="72.0774%" y="277" width="0.0745%" height="15" fill="rgb(238,102,14)" fg:x="968" fg:w="1"/><text x="72.3274%" y="287.50"></text></g><g><title>test3`llvm::MaybeAlign::MaybeAlign (1 samples, 0.07%)</title><rect x="72.0774%" y="261" width="0.0745%" height="15" fill="rgb(243,160,52)" fg:x="968" fg:w="1"/><text x="72.3274%" y="271.50"></text></g><g><title>test3`llvm::Optional&lt;llvm::Align&gt;::Optional (1 samples, 0.07%)</title><rect x="72.0774%" y="245" width="0.0745%" height="15" fill="rgb(216,114,19)" fg:x="968" fg:w="1"/><text x="72.3274%" y="255.50"></text></g><g><title>test3`llvm::TargetLowering::LowerCallTo (2 samples, 0.15%)</title><rect x="72.0774%" y="309" width="0.1489%" height="15" fill="rgb(244,166,37)" fg:x="968" fg:w="2"/><text x="72.3274%" y="319.50"></text></g><g><title>test3`llvm::X86TargetLowering::LowerCall (1 samples, 0.07%)</title><rect x="72.1519%" y="293" width="0.0745%" height="15" fill="rgb(246,29,44)" fg:x="969" fg:w="1"/><text x="72.4019%" y="303.50"></text></g><g><title>test3`llvm::SelectionDAG::getRegisterMask (1 samples, 0.07%)</title><rect x="72.1519%" y="277" width="0.0745%" height="15" fill="rgb(215,56,53)" fg:x="969" fg:w="1"/><text x="72.4019%" y="287.50"></text></g><g><title>test3`llvm::EVT::EVT (1 samples, 0.07%)</title><rect x="72.1519%" y="261" width="0.0745%" height="15" fill="rgb(217,60,2)" fg:x="969" fg:w="1"/><text x="72.4019%" y="271.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (5 samples, 0.37%)</title><rect x="71.9285%" y="373" width="0.3723%" height="15" fill="rgb(207,26,24)" fg:x="966" fg:w="5"/><text x="72.1785%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (3 samples, 0.22%)</title><rect x="72.0774%" y="357" width="0.2234%" height="15" fill="rgb(252,210,15)" fg:x="968" fg:w="3"/><text x="72.3274%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (3 samples, 0.22%)</title><rect x="72.0774%" y="341" width="0.2234%" height="15" fill="rgb(253,209,26)" fg:x="968" fg:w="3"/><text x="72.3274%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (3 samples, 0.22%)</title><rect x="72.0774%" y="325" width="0.2234%" height="15" fill="rgb(238,170,14)" fg:x="968" fg:w="3"/><text x="72.3274%" y="335.50"></text></g><g><title>test3`llvm::TargetLowering::isInTailCallPosition (1 samples, 0.07%)</title><rect x="72.2264%" y="309" width="0.0745%" height="15" fill="rgb(216,178,15)" fg:x="970" fg:w="1"/><text x="72.4764%" y="319.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="72.2264%" y="293" width="0.0745%" height="15" fill="rgb(250,197,2)" fg:x="970" fg:w="1"/><text x="72.4764%" y="303.50"></text></g><g><title>test3`llvm::SelectionDAG::Legalize (8 samples, 0.60%)</title><rect x="71.7796%" y="405" width="0.5957%" height="15" fill="rgb(212,70,42)" fg:x="964" fg:w="8"/><text x="72.0296%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeOp (6 samples, 0.45%)</title><rect x="71.9285%" y="389" width="0.4468%" height="15" fill="rgb(227,213,9)" fg:x="966" fg:w="6"/><text x="72.1785%" y="399.50"></text></g><g><title>test3`llvm::X86TargetLowering::LowerOperation (1 samples, 0.07%)</title><rect x="72.3008%" y="373" width="0.0745%" height="15" fill="rgb(245,99,25)" fg:x="971" fg:w="1"/><text x="72.5508%" y="383.50"></text></g><g><title>test3`llvm::X86TargetLowering::LowerBRCOND (1 samples, 0.07%)</title><rect x="72.3008%" y="357" width="0.0745%" height="15" fill="rgb(250,82,29)" fg:x="971" fg:w="1"/><text x="72.5508%" y="367.50"></text></g><g><title>test3`llvm::X86TargetLowering::emitFlagsForSetcc (1 samples, 0.07%)</title><rect x="72.3008%" y="341" width="0.0745%" height="15" fill="rgb(241,226,54)" fg:x="971" fg:w="1"/><text x="72.5508%" y="351.50"></text></g><g><title>test3`llvm::createSplat2ShuffleMask (1 samples, 0.07%)</title><rect x="72.3008%" y="325" width="0.0745%" height="15" fill="rgb(221,99,41)" fg:x="971" fg:w="1"/><text x="72.5508%" y="335.50"></text></g><g><title>test3`llvm::createSplat2ShuffleMask (1 samples, 0.07%)</title><rect x="72.3008%" y="309" width="0.0745%" height="15" fill="rgb(213,90,21)" fg:x="971" fg:w="1"/><text x="72.5508%" y="319.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::PromoteIntegerOperand (1 samples, 0.07%)</title><rect x="72.3753%" y="373" width="0.0745%" height="15" fill="rgb(205,208,24)" fg:x="972" fg:w="1"/><text x="72.6253%" y="383.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::PromoteIntOp_ZERO_EXTEND (1 samples, 0.07%)</title><rect x="72.3753%" y="357" width="0.0745%" height="15" fill="rgb(246,31,12)" fg:x="972" fg:w="1"/><text x="72.6253%" y="367.50"></text></g><g><title>test3`llvm::SelectionDAG::getZeroExtendInReg (1 samples, 0.07%)</title><rect x="72.3753%" y="341" width="0.0745%" height="15" fill="rgb(213,154,6)" fg:x="972" fg:w="1"/><text x="72.6253%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::getNode (1 samples, 0.07%)</title><rect x="72.3753%" y="325" width="0.0745%" height="15" fill="rgb(222,163,29)" fg:x="972" fg:w="1"/><text x="72.6253%" y="335.50"></text></g><g><title>test3`llvm::SelectionDAG::LegalizeTypes (3 samples, 0.22%)</title><rect x="72.3753%" y="405" width="0.2234%" height="15" fill="rgb(227,201,8)" fg:x="972" fg:w="3"/><text x="72.6253%" y="415.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::run (3 samples, 0.22%)</title><rect x="72.3753%" y="389" width="0.2234%" height="15" fill="rgb(233,9,32)" fg:x="972" fg:w="3"/><text x="72.6253%" y="399.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::PromoteIntegerResult (2 samples, 0.15%)</title><rect x="72.4497%" y="373" width="0.1489%" height="15" fill="rgb(217,54,24)" fg:x="973" fg:w="2"/><text x="72.6997%" y="383.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::SetPromotedInteger (1 samples, 0.07%)</title><rect x="72.5242%" y="357" width="0.0745%" height="15" fill="rgb(235,192,0)" fg:x="974" fg:w="1"/><text x="72.7742%" y="367.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::AnalyzeNewValue (1 samples, 0.07%)</title><rect x="72.5242%" y="341" width="0.0745%" height="15" fill="rgb(235,45,9)" fg:x="974" fg:w="1"/><text x="72.7742%" y="351.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::AnalyzeNewNode (1 samples, 0.07%)</title><rect x="72.5242%" y="325" width="0.0745%" height="15" fill="rgb(246,42,40)" fg:x="974" fg:w="1"/><text x="72.7742%" y="335.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::AnalyzeNewValue (1 samples, 0.07%)</title><rect x="72.5242%" y="309" width="0.0745%" height="15" fill="rgb(248,111,24)" fg:x="974" fg:w="1"/><text x="72.7742%" y="319.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::RemapValue (1 samples, 0.07%)</title><rect x="72.5242%" y="293" width="0.0745%" height="15" fill="rgb(249,65,22)" fg:x="974" fg:w="1"/><text x="72.7742%" y="303.50"></text></g><g><title>test3`llvm::DAGTypeLegalizer::getTableId (1 samples, 0.07%)</title><rect x="72.5242%" y="277" width="0.0745%" height="15" fill="rgb(238,111,51)" fg:x="974" fg:w="1"/><text x="72.7742%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::SDValue,unsigned int,8,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair&lt;llvm::SDValue,unsigned int&gt; &gt;,llvm::SDValue,unsigned int,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="72.5242%" y="261" width="0.0745%" height="15" fill="rgb(250,118,22)" fg:x="974" fg:w="1"/><text x="72.7742%" y="271.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;llvm::SDValue,unsigned int,8,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair&lt;llvm::SDValue,unsigned int&gt; &gt;,llvm::SDValue,unsigned int,llvm::DenseMapInfo&lt;llvm::SDValue&gt;,llvm::detail::DenseMapPair&lt;llvm::SDValue,unsigned int&gt; &gt;::try_emplace (1 samples, 0.07%)</title><rect x="72.5242%" y="245" width="0.0745%" height="15" fill="rgb(234,84,26)" fg:x="974" fg:w="1"/><text x="72.7742%" y="255.50"></text></g><g><title>test3`llvm::SelectionDAGISel::CreateScheduler (1 samples, 0.07%)</title><rect x="72.5987%" y="405" width="0.0745%" height="15" fill="rgb(243,172,12)" fg:x="975" fg:w="1"/><text x="72.8487%" y="415.50"></text></g><g><title>test3`llvm::createDefaultScheduler (1 samples, 0.07%)</title><rect x="72.5987%" y="389" width="0.0745%" height="15" fill="rgb(236,150,49)" fg:x="975" fg:w="1"/><text x="72.8487%" y="399.50"></text></g><g><title>test3`llvm::createSourceListDAGScheduler (1 samples, 0.07%)</title><rect x="72.5987%" y="373" width="0.0745%" height="15" fill="rgb(225,197,26)" fg:x="975" fg:w="1"/><text x="72.8487%" y="383.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="72.5987%" y="357" width="0.0745%" height="15" fill="rgb(214,17,42)" fg:x="975" fg:w="1"/><text x="72.8487%" y="367.50"></text></g><g><title>test3`llvm::createILPListDAGScheduler (1 samples, 0.07%)</title><rect x="72.5987%" y="341" width="0.0745%" height="15" fill="rgb(224,165,40)" fg:x="975" fg:w="1"/><text x="72.8487%" y="351.50"></text></g><g><title>test3`std::vector&lt;char,std::allocator&lt;char&gt; &gt;::vector&lt;char,std::allocator (1 samples, 0.07%)</title><rect x="72.5987%" y="325" width="0.0745%" height="15" fill="rgb(246,100,4)" fg:x="975" fg:w="1"/><text x="72.8487%" y="335.50"></text></g><g><title>test3`std::_Container_base12::_Alloc_proxy&lt;std::allocator (1 samples, 0.07%)</title><rect x="72.5987%" y="309" width="0.0745%" height="15" fill="rgb(222,103,0)" fg:x="975" fg:w="1"/><text x="72.8487%" y="319.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="72.5987%" y="293" width="0.0745%" height="15" fill="rgb(227,189,26)" fg:x="975" fg:w="1"/><text x="72.8487%" y="303.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="72.5987%" y="277" width="0.0745%" height="15" fill="rgb(214,202,17)" fg:x="975" fg:w="1"/><text x="72.8487%" y="287.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="72.5987%" y="261" width="0.0745%" height="15" fill="rgb(229,111,3)" fg:x="975" fg:w="1"/><text x="72.8487%" y="271.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="72.5987%" y="245" width="0.0745%" height="15" fill="rgb(229,172,15)" fg:x="975" fg:w="1"/><text x="72.8487%" y="255.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="72.5987%" y="229" width="0.0745%" height="15" fill="rgb(230,224,35)" fg:x="975" fg:w="1"/><text x="72.8487%" y="239.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="72.5987%" y="213" width="0.0745%" height="15" fill="rgb(251,141,6)" fg:x="975" fg:w="1"/><text x="72.8487%" y="223.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="72.5987%" y="197" width="0.0745%" height="15" fill="rgb(225,208,6)" fg:x="975" fg:w="1"/><text x="72.8487%" y="207.50"></text></g><g><title>ucrtbased`query_new_mode (1 samples, 0.07%)</title><rect x="72.5987%" y="181" width="0.0745%" height="15" fill="rgb(246,181,16)" fg:x="975" fg:w="1"/><text x="72.8487%" y="191.50"></text></g><g><title>ucrtbased`set_new_handler (1 samples, 0.07%)</title><rect x="72.5987%" y="165" width="0.0745%" height="15" fill="rgb(227,129,36)" fg:x="975" fg:w="1"/><text x="72.8487%" y="175.50"></text></g><g><title>ucrtbased`set_new_handler (1 samples, 0.07%)</title><rect x="72.5987%" y="149" width="0.0745%" height="15" fill="rgb(248,117,24)" fg:x="975" fg:w="1"/><text x="72.8487%" y="159.50"></text></g><g><title>test3`llvm::SelectionDAG::getVTList (1 samples, 0.07%)</title><rect x="72.7476%" y="341" width="0.0745%" height="15" fill="rgb(214,185,35)" fg:x="977" fg:w="1"/><text x="72.9976%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::RemoveDeadNodes (1 samples, 0.07%)</title><rect x="72.8220%" y="309" width="0.0745%" height="15" fill="rgb(236,150,34)" fg:x="978" fg:w="1"/><text x="73.0720%" y="319.50"></text></g><g><title>test3`llvm::SelectionDAGISel::MorphNode (2 samples, 0.15%)</title><rect x="72.8220%" y="341" width="0.1489%" height="15" fill="rgb(243,228,27)" fg:x="978" fg:w="2"/><text x="73.0720%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAG::MorphNodeTo (2 samples, 0.15%)</title><rect x="72.8220%" y="325" width="0.1489%" height="15" fill="rgb(245,77,44)" fg:x="978" fg:w="2"/><text x="73.0720%" y="335.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="72.8965%" y="309" width="0.0745%" height="15" fill="rgb(235,214,42)" fg:x="979" fg:w="1"/><text x="73.1465%" y="319.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;std::pair (1 samples, 0.07%)</title><rect x="72.9710%" y="341" width="0.0745%" height="15" fill="rgb(221,74,3)" fg:x="980" fg:w="1"/><text x="73.2210%" y="351.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;std::pair (1 samples, 0.07%)</title><rect x="72.9710%" y="325" width="0.0745%" height="15" fill="rgb(206,121,29)" fg:x="980" fg:w="1"/><text x="73.2210%" y="335.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon&lt;std::pair&lt;llvm::SDValue,llvm::SDNode * __ptr64&gt;,void&gt;::reserveForParamAndGetAddressImpl&lt;llvm::SmallVectorTemplateBase&lt;std::pair (1 samples, 0.07%)</title><rect x="72.9710%" y="309" width="0.0745%" height="15" fill="rgb(249,131,53)" fg:x="980" fg:w="1"/><text x="73.2210%" y="319.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;std::pair (1 samples, 0.07%)</title><rect x="72.9710%" y="293" width="0.0745%" height="15" fill="rgb(236,170,29)" fg:x="980" fg:w="1"/><text x="73.2210%" y="303.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="72.9710%" y="277" width="0.0745%" height="15" fill="rgb(247,96,15)" fg:x="980" fg:w="1"/><text x="73.2210%" y="287.50"></text></g><g><title>test3`llvm::SmallVectorBase (1 samples, 0.07%)</title><rect x="72.9710%" y="261" width="0.0745%" height="15" fill="rgb(211,210,7)" fg:x="980" fg:w="1"/><text x="73.2210%" y="271.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="72.9710%" y="245" width="0.0745%" height="15" fill="rgb(240,88,50)" fg:x="980" fg:w="1"/><text x="73.2210%" y="255.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="72.9710%" y="229" width="0.0745%" height="15" fill="rgb(209,229,26)" fg:x="980" fg:w="1"/><text x="73.2210%" y="239.50"></text></g><g><title>test3`llvm::TargetLowering::AdjustInstrPostInstrSelection (1 samples, 0.07%)</title><rect x="73.0454%" y="341" width="0.0745%" height="15" fill="rgb(210,68,23)" fg:x="981" fg:w="1"/><text x="73.2954%" y="351.50"></text></g><g><title>test3`llvm::SelectionDAGISel::SelectBasicBlock (75 samples, 5.58%)</title><rect x="67.6098%" y="437" width="5.5845%" height="15" fill="rgb(229,180,13)" fg:x="908" fg:w="75"/><text x="67.8598%" y="447.50">test3`l..</text></g><g><title>test3`llvm::SelectionDAGISel::CodeGenAndEmitDAG (62 samples, 4.62%)</title><rect x="68.5778%" y="421" width="4.6165%" height="15" fill="rgb(236,53,44)" fg:x="921" fg:w="62"/><text x="68.8278%" y="431.50">test3..</text></g><g><title>test3`llvm::SelectionDAGISel::DoInstructionSelection (7 samples, 0.52%)</title><rect x="72.6731%" y="405" width="0.5212%" height="15" fill="rgb(244,214,29)" fg:x="976" fg:w="7"/><text x="72.9231%" y="415.50"></text></g><g><title>test3`llvm::createX86ISelDag (7 samples, 0.52%)</title><rect x="72.6731%" y="389" width="0.5212%" height="15" fill="rgb(220,75,29)" fg:x="976" fg:w="7"/><text x="72.9231%" y="399.50"></text></g><g><title>test3`llvm::createX86ISelDag (6 samples, 0.45%)</title><rect x="72.7476%" y="373" width="0.4468%" height="15" fill="rgb(214,183,37)" fg:x="977" fg:w="6"/><text x="72.9976%" y="383.50"></text></g><g><title>test3`llvm::SelectionDAGISel::SelectCodeCommon (6 samples, 0.45%)</title><rect x="72.7476%" y="357" width="0.4468%" height="15" fill="rgb(239,117,29)" fg:x="977" fg:w="6"/><text x="72.9976%" y="367.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="73.1199%" y="341" width="0.0745%" height="15" fill="rgb(237,171,35)" fg:x="982" fg:w="1"/><text x="73.3699%" y="351.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="73.1199%" y="325" width="0.0745%" height="15" fill="rgb(229,178,53)" fg:x="982" fg:w="1"/><text x="73.3699%" y="335.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="73.1199%" y="309" width="0.0745%" height="15" fill="rgb(210,102,19)" fg:x="982" fg:w="1"/><text x="73.3699%" y="319.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="73.1199%" y="293" width="0.0745%" height="15" fill="rgb(235,127,22)" fg:x="982" fg:w="1"/><text x="73.3699%" y="303.50"></text></g><g><title>test3`llvm::SelectionDAG::getTargetConstant (1 samples, 0.07%)</title><rect x="73.1199%" y="277" width="0.0745%" height="15" fill="rgb(244,31,31)" fg:x="982" fg:w="1"/><text x="73.3699%" y="287.50"></text></g><g><title>test3`llvm::SelectionDAG::getConstant (1 samples, 0.07%)</title><rect x="73.1199%" y="261" width="0.0745%" height="15" fill="rgb(231,43,21)" fg:x="982" fg:w="1"/><text x="73.3699%" y="271.50"></text></g><g><title>test3`llvm::SelectionDAG::getConstant (1 samples, 0.07%)</title><rect x="73.1199%" y="245" width="0.0745%" height="15" fill="rgb(217,131,35)" fg:x="982" fg:w="1"/><text x="73.3699%" y="255.50"></text></g><g><title>test3`llvm::SelectionDAG::getConstant (1 samples, 0.07%)</title><rect x="73.1199%" y="229" width="0.0745%" height="15" fill="rgb(221,149,4)" fg:x="982" fg:w="1"/><text x="73.3699%" y="239.50"></text></g><g><title>test3`llvm::OptimizationRemarkEmitter::emit (1 samples, 0.07%)</title><rect x="73.1943%" y="421" width="0.0745%" height="15" fill="rgb(232,170,28)" fg:x="983" fg:w="1"/><text x="73.4443%" y="431.50"></text></g><g><title>test3`llvm::LLVMContext::getDiagnosticsHotnessThreshold (1 samples, 0.07%)</title><rect x="73.1943%" y="405" width="0.0745%" height="15" fill="rgb(238,56,10)" fg:x="983" fg:w="1"/><text x="73.4443%" y="415.50"></text></g><g><title>test3`llvm::Optional&lt;llvm::MDString * __ptr64&gt;::getValueOr (1 samples, 0.07%)</title><rect x="73.1943%" y="389" width="0.0745%" height="15" fill="rgb(235,196,14)" fg:x="983" fg:w="1"/><text x="73.4443%" y="399.50"></text></g><g><title>test3`llvm::TargetLowering::AdjustInstrPostInstrSelection (2 samples, 0.15%)</title><rect x="73.1943%" y="437" width="0.1489%" height="15" fill="rgb(216,45,48)" fg:x="983" fg:w="2"/><text x="73.4443%" y="447.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="73.2688%" y="421" width="0.0745%" height="15" fill="rgb(238,213,17)" fg:x="984" fg:w="1"/><text x="73.5188%" y="431.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="405" width="0.0745%" height="15" fill="rgb(212,13,2)" fg:x="984" fg:w="1"/><text x="73.5188%" y="415.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="389" width="0.0745%" height="15" fill="rgb(240,114,20)" fg:x="984" fg:w="1"/><text x="73.5188%" y="399.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="73.2688%" y="373" width="0.0745%" height="15" fill="rgb(228,41,40)" fg:x="984" fg:w="1"/><text x="73.5188%" y="383.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="73.2688%" y="357" width="0.0745%" height="15" fill="rgb(244,132,35)" fg:x="984" fg:w="1"/><text x="73.5188%" y="367.50"></text></g><g><title>test3`llvm::DbgInfoIntrinsic::classof (1 samples, 0.07%)</title><rect x="73.2688%" y="341" width="0.0745%" height="15" fill="rgb(253,189,4)" fg:x="984" fg:w="1"/><text x="73.5188%" y="351.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="73.2688%" y="325" width="0.0745%" height="15" fill="rgb(224,37,19)" fg:x="984" fg:w="1"/><text x="73.5188%" y="335.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="309" width="0.0745%" height="15" fill="rgb(235,223,18)" fg:x="984" fg:w="1"/><text x="73.5188%" y="319.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="293" width="0.0745%" height="15" fill="rgb(235,163,25)" fg:x="984" fg:w="1"/><text x="73.5188%" y="303.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="73.2688%" y="277" width="0.0745%" height="15" fill="rgb(217,145,28)" fg:x="984" fg:w="1"/><text x="73.5188%" y="287.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="73.2688%" y="261" width="0.0745%" height="15" fill="rgb(223,223,32)" fg:x="984" fg:w="1"/><text x="73.5188%" y="271.50"></text></g><g><title>test3`llvm::IntrinsicInst::classof (1 samples, 0.07%)</title><rect x="73.2688%" y="245" width="0.0745%" height="15" fill="rgb(227,189,39)" fg:x="984" fg:w="1"/><text x="73.5188%" y="255.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="73.2688%" y="229" width="0.0745%" height="15" fill="rgb(248,10,22)" fg:x="984" fg:w="1"/><text x="73.5188%" y="239.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="213" width="0.0745%" height="15" fill="rgb(248,46,39)" fg:x="984" fg:w="1"/><text x="73.5188%" y="223.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="197" width="0.0745%" height="15" fill="rgb(248,113,48)" fg:x="984" fg:w="1"/><text x="73.5188%" y="207.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="73.2688%" y="181" width="0.0745%" height="15" fill="rgb(245,16,25)" fg:x="984" fg:w="1"/><text x="73.5188%" y="191.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="73.2688%" y="165" width="0.0745%" height="15" fill="rgb(249,152,16)" fg:x="984" fg:w="1"/><text x="73.5188%" y="175.50"></text></g><g><title>test3`llvm::CallInst::classof (1 samples, 0.07%)</title><rect x="73.2688%" y="149" width="0.0745%" height="15" fill="rgb(250,16,1)" fg:x="984" fg:w="1"/><text x="73.5188%" y="159.50"></text></g><g><title>test3`llvm::cast (1 samples, 0.07%)</title><rect x="73.2688%" y="133" width="0.0745%" height="15" fill="rgb(249,138,3)" fg:x="984" fg:w="1"/><text x="73.5188%" y="143.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="73.2688%" y="117" width="0.0745%" height="15" fill="rgb(227,71,41)" fg:x="984" fg:w="1"/><text x="73.5188%" y="127.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="101" width="0.0745%" height="15" fill="rgb(209,184,23)" fg:x="984" fg:w="1"/><text x="73.5188%" y="111.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="73.2688%" y="85" width="0.0745%" height="15" fill="rgb(223,215,31)" fg:x="984" fg:w="1"/><text x="73.5188%" y="95.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="73.2688%" y="69" width="0.0745%" height="15" fill="rgb(210,146,28)" fg:x="984" fg:w="1"/><text x="73.5188%" y="79.50"></text></g><g><title>test3`llvm::Instruction::classof (1 samples, 0.07%)</title><rect x="73.2688%" y="53" width="0.0745%" height="15" fill="rgb(209,183,41)" fg:x="984" fg:w="1"/><text x="73.5188%" y="63.50"></text></g><g><title>test3`llvm::MCAsmParserExtension::HasBracketExpressions (1 samples, 0.07%)</title><rect x="73.2688%" y="37" width="0.0745%" height="15" fill="rgb(209,224,45)" fg:x="984" fg:w="1"/><text x="73.5188%" y="47.50"></text></g><g><title>test3`llvm::SelectionDAGISel::SelectAllBasicBlocks (146 samples, 10.87%)</title><rect x="62.5465%" y="453" width="10.8712%" height="15" fill="rgb(224,209,51)" fg:x="840" fg:w="146"/><text x="62.7965%" y="463.50">test3`llvm::Sele..</text></g><g><title>test3`llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="73.3433%" y="437" width="0.0745%" height="15" fill="rgb(223,17,39)" fg:x="985" fg:w="1"/><text x="73.5933%" y="447.50"></text></g><g><title>test3`llvm::ilist_detail::SpecificNodeAccess&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="73.3433%" y="421" width="0.0745%" height="15" fill="rgb(234,204,37)" fg:x="985" fg:w="1"/><text x="73.5933%" y="431.50"></text></g><g><title>test3`llvm::createX86ISelDag (155 samples, 11.54%)</title><rect x="61.9509%" y="485" width="11.5413%" height="15" fill="rgb(236,120,5)" fg:x="832" fg:w="155"/><text x="62.2009%" y="495.50">test3`llvm::creat..</text></g><g><title>test3`llvm::SelectionDAGISel::runOnMachineFunction (155 samples, 11.54%)</title><rect x="61.9509%" y="469" width="11.5413%" height="15" fill="rgb(248,97,27)" fg:x="832" fg:w="155"/><text x="62.2009%" y="479.50">test3`llvm::Selec..</text></g><g><title>test3`llvm::SwiftErrorValueTracking::setFunction (1 samples, 0.07%)</title><rect x="73.4177%" y="453" width="0.0745%" height="15" fill="rgb(240,66,17)" fg:x="986" fg:w="1"/><text x="73.6677%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::pair&lt;llvm::MachineBasicBlock const * __ptr64,llvm::Value const * __ptr64&gt;,llvm::Register,llvm::DenseMapInfo&lt;std::pair&lt;llvm::MachineBasicBlock const * __ptr64,llvm::Value const * __ptr64&gt; &gt;,llvm::detail::DenseMapPair&lt;std::pair&lt;llvm::MachineBasicBlock const * __ptr64,llvm::Value const * __ptr64&gt;,llvm::Register&gt; &gt;,std::pair&lt;llvm::MachineBasicBlock const * __ptr64,llvm::Value const * __ptr64&gt;,llvm::Register,llvm::DenseMapInfo&lt;std::pair&lt;llvm::MachineBasicBlock const * __ptr64,llvm::Value const * __ptr64&gt; &gt;,llvm::detail::DenseMapPair&lt;std::pair (1 samples, 0.07%)</title><rect x="73.4177%" y="437" width="0.0745%" height="15" fill="rgb(210,79,3)" fg:x="986" fg:w="1"/><text x="73.6677%" y="447.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="73.4177%" y="421" width="0.0745%" height="15" fill="rgb(214,176,27)" fg:x="986" fg:w="1"/><text x="73.6677%" y="431.50"></text></g><g><title>test3`llvm::initializeExpandPostRAPass (1 samples, 0.07%)</title><rect x="73.4922%" y="485" width="0.0745%" height="15" fill="rgb(235,185,3)" fg:x="987" fg:w="1"/><text x="73.7422%" y="495.50"></text></g><g><title>test3`llvm::initializeExpandPostRAPass (1 samples, 0.07%)</title><rect x="73.4922%" y="469" width="0.0745%" height="15" fill="rgb(227,24,12)" fg:x="987" fg:w="1"/><text x="73.7422%" y="479.50"></text></g><g><title>test3`llvm::TargetRegisterInfo::getSubReg (1 samples, 0.07%)</title><rect x="73.4922%" y="453" width="0.0745%" height="15" fill="rgb(252,169,48)" fg:x="987" fg:w="1"/><text x="73.7422%" y="463.50"></text></g><g><title>test3`llvm::MCRegisterInfo::getSubReg (1 samples, 0.07%)</title><rect x="73.4922%" y="437" width="0.0745%" height="15" fill="rgb(212,65,1)" fg:x="987" fg:w="1"/><text x="73.7422%" y="447.50"></text></g><g><title>test3`llvm::initializeFinalizeISelPass (1 samples, 0.07%)</title><rect x="73.5666%" y="485" width="0.0745%" height="15" fill="rgb(242,39,24)" fg:x="988" fg:w="1"/><text x="73.8166%" y="495.50"></text></g><g><title>test3`llvm::TargetLoweringBase::finalizeLowering (1 samples, 0.07%)</title><rect x="73.5666%" y="469" width="0.0745%" height="15" fill="rgb(249,32,23)" fg:x="988" fg:w="1"/><text x="73.8166%" y="479.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::freezeReservedRegs (1 samples, 0.07%)</title><rect x="73.5666%" y="453" width="0.0745%" height="15" fill="rgb(251,195,23)" fg:x="988" fg:w="1"/><text x="73.8166%" y="463.50"></text></g><g><title>test3`llvm::X86RegisterInfo::getReservedRegs (1 samples, 0.07%)</title><rect x="73.5666%" y="437" width="0.0745%" height="15" fill="rgb(236,174,8)" fg:x="988" fg:w="1"/><text x="73.8166%" y="447.50"></text></g><g><title>test3`llvm::X86FrameLowering::hasFP (1 samples, 0.07%)</title><rect x="73.5666%" y="421" width="0.0745%" height="15" fill="rgb(220,197,8)" fg:x="988" fg:w="1"/><text x="73.8166%" y="431.50"></text></g><g><title>test3`llvm::TargetRegisterInfo::hasStackRealignment (1 samples, 0.07%)</title><rect x="73.5666%" y="405" width="0.0745%" height="15" fill="rgb(240,108,37)" fg:x="988" fg:w="1"/><text x="73.8166%" y="415.50"></text></g><g><title>test3`llvm::TargetRegisterInfo::shouldRealignStack (1 samples, 0.07%)</title><rect x="73.5666%" y="389" width="0.0745%" height="15" fill="rgb(232,176,24)" fg:x="988" fg:w="1"/><text x="73.8166%" y="399.50"></text></g><g><title>test3`llvm::TargetInstrInfo::isFrameInstr (1 samples, 0.07%)</title><rect x="73.6411%" y="453" width="0.0745%" height="15" fill="rgb(243,35,29)" fg:x="989" fg:w="1"/><text x="73.8911%" y="463.50"></text></g><g><title>test3`llvm::MachineInstr::getOpcode (1 samples, 0.07%)</title><rect x="73.6411%" y="437" width="0.0745%" height="15" fill="rgb(210,37,18)" fg:x="989" fg:w="1"/><text x="73.8911%" y="447.50"></text></g><g><title>test3`llvm::X86FrameLowering::determineCalleeSaves (1 samples, 0.07%)</title><rect x="73.7156%" y="453" width="0.0745%" height="15" fill="rgb(224,184,40)" fg:x="990" fg:w="1"/><text x="73.9656%" y="463.50"></text></g><g><title>test3`llvm::TargetFrameLowering::determineCalleeSaves (1 samples, 0.07%)</title><rect x="73.7156%" y="437" width="0.0745%" height="15" fill="rgb(236,39,29)" fg:x="990" fg:w="1"/><text x="73.9656%" y="447.50"></text></g><g><title>test3`llvm::X86FrameLowering::eliminateCallFramePseudoInstr (1 samples, 0.07%)</title><rect x="73.7900%" y="453" width="0.0745%" height="15" fill="rgb(232,48,39)" fg:x="991" fg:w="1"/><text x="74.0400%" y="463.50"></text></g><g><title>test3`llvm::X86FrameLowering::emitCatchRetReturnValue (1 samples, 0.07%)</title><rect x="73.7900%" y="437" width="0.0745%" height="15" fill="rgb(236,34,42)" fg:x="991" fg:w="1"/><text x="74.0400%" y="447.50"></text></g><g><title>test3`llvm::X86FrameLowering::emitEpilogue (1 samples, 0.07%)</title><rect x="73.8645%" y="453" width="0.0745%" height="15" fill="rgb(243,106,37)" fg:x="992" fg:w="1"/><text x="74.1145%" y="463.50"></text></g><g><title>test3`llvm::X86FrameLowering::hasFP (1 samples, 0.07%)</title><rect x="73.8645%" y="437" width="0.0745%" height="15" fill="rgb(218,96,6)" fg:x="992" fg:w="1"/><text x="74.1145%" y="447.50"></text></g><g><title>test3`llvm::X86FrameLowering::emitPrologue (1 samples, 0.07%)</title><rect x="73.9389%" y="453" width="0.0745%" height="15" fill="rgb(235,130,12)" fg:x="993" fg:w="1"/><text x="74.1889%" y="463.50"></text></g><g><title>test3`llvm::X86TargetLowering::hasStackProbeSymbol (1 samples, 0.07%)</title><rect x="73.9389%" y="437" width="0.0745%" height="15" fill="rgb(231,95,0)" fg:x="993" fg:w="1"/><text x="74.1889%" y="447.50"></text></g><g><title>test3`llvm::X86TargetLowering::getStackProbeSymbolName (1 samples, 0.07%)</title><rect x="73.9389%" y="421" width="0.0745%" height="15" fill="rgb(228,12,23)" fg:x="993" fg:w="1"/><text x="74.1889%" y="431.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="73.9389%" y="405" width="0.0745%" height="15" fill="rgb(216,12,1)" fg:x="993" fg:w="1"/><text x="74.1889%" y="415.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="73.9389%" y="389" width="0.0745%" height="15" fill="rgb(219,59,3)" fg:x="993" fg:w="1"/><text x="74.1889%" y="399.50"></text></g><g><title>test3`llvm::df_iterator&lt;llvm::MachineFunction * __ptr64,llvm::df_iterator_default_set&lt;llvm::MachineBasicBlock * __ptr64,8&gt;,1,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="74.0134%" y="453" width="0.0745%" height="15" fill="rgb(215,208,46)" fg:x="994" fg:w="1"/><text x="74.2634%" y="463.50"></text></g><g><title>test3`llvm::df_iterator&lt;llvm::MachineFunction * __ptr64,llvm::df_iterator_default_set&lt;llvm::MachineBasicBlock * __ptr64,8&gt;,1,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="74.0134%" y="437" width="0.0745%" height="15" fill="rgb(254,224,29)" fg:x="994" fg:w="1"/><text x="74.2634%" y="447.50"></text></g><g><title>test3`std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types (1 samples, 0.07%)</title><rect x="74.0134%" y="421" width="0.0745%" height="15" fill="rgb(232,14,29)" fg:x="994" fg:w="1"/><text x="74.2634%" y="431.50"></text></g><g><title>test3`std::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="74.0134%" y="405" width="0.0745%" height="15" fill="rgb(208,45,52)" fg:x="994" fg:w="1"/><text x="74.2634%" y="415.50"></text></g><g><title>test3`std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="74.0134%" y="389" width="0.0745%" height="15" fill="rgb(234,191,28)" fg:x="994" fg:w="1"/><text x="74.2634%" y="399.50"></text></g><g><title>test3`std::_Iterator_base12::_Iterator_base12 (1 samples, 0.07%)</title><rect x="74.0134%" y="373" width="0.0745%" height="15" fill="rgb(244,67,43)" fg:x="994" fg:w="1"/><text x="74.2634%" y="383.50"></text></g><g><title>test3`std::_Iterator_base12::operator= (1 samples, 0.07%)</title><rect x="74.0134%" y="357" width="0.0745%" height="15" fill="rgb(236,189,24)" fg:x="994" fg:w="1"/><text x="74.2634%" y="367.50"></text></g><g><title>test3`std::_Iterator_base12::_Assign_locked (1 samples, 0.07%)</title><rect x="74.0134%" y="341" width="0.0745%" height="15" fill="rgb(239,214,33)" fg:x="994" fg:w="1"/><text x="74.2634%" y="351.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="74.0134%" y="325" width="0.0745%" height="15" fill="rgb(226,176,41)" fg:x="994" fg:w="1"/><text x="74.2634%" y="335.50"></text></g><g><title>test3`llvm::StackOffset::getFixed (1 samples, 0.07%)</title><rect x="74.0879%" y="405" width="0.0745%" height="15" fill="rgb(248,47,8)" fg:x="995" fg:w="1"/><text x="74.3379%" y="415.50"></text></g><g><title>test3`llvm::StackOffset::StackOffset (1 samples, 0.07%)</title><rect x="74.0879%" y="389" width="0.0745%" height="15" fill="rgb(218,81,44)" fg:x="995" fg:w="1"/><text x="74.3379%" y="399.50"></text></g><g><title>test3`llvm::LinearPolyBase&lt;llvm::StackOffset&gt;::LinearPolyBase (1 samples, 0.07%)</title><rect x="74.0879%" y="373" width="0.0745%" height="15" fill="rgb(213,98,6)" fg:x="995" fg:w="1"/><text x="74.3379%" y="383.50"></text></g><g><title>test3`std::copy&lt;__int64 const * __ptr64,std::_Array_iterator (1 samples, 0.07%)</title><rect x="74.0879%" y="357" width="0.0745%" height="15" fill="rgb(222,85,22)" fg:x="995" fg:w="1"/><text x="74.3379%" y="367.50"></text></g><g><title>test3`std::_Seek_wrapped&lt;std::_Array_iterator (1 samples, 0.07%)</title><rect x="74.0879%" y="341" width="0.0745%" height="15" fill="rgb(239,46,39)" fg:x="995" fg:w="1"/><text x="74.3379%" y="351.50"></text></g><g><title>test3`&lt;move&gt;&lt;llvm::Optional (1 samples, 0.07%)</title><rect x="74.0879%" y="325" width="0.0745%" height="15" fill="rgb(237,12,29)" fg:x="995" fg:w="1"/><text x="74.3379%" y="335.50"></text></g><g><title>test3`llvm::initializePEIPass (8 samples, 0.60%)</title><rect x="73.6411%" y="485" width="0.5957%" height="15" fill="rgb(214,77,8)" fg:x="989" fg:w="8"/><text x="73.8911%" y="495.50"></text></g><g><title>test3`llvm::initializePEIPass (8 samples, 0.60%)</title><rect x="73.6411%" y="469" width="0.5957%" height="15" fill="rgb(217,168,37)" fg:x="989" fg:w="8"/><text x="73.8911%" y="479.50"></text></g><g><title>test3`llvm::initializePEIPass (2 samples, 0.15%)</title><rect x="74.0879%" y="453" width="0.1489%" height="15" fill="rgb(221,217,23)" fg:x="995" fg:w="2"/><text x="74.3379%" y="463.50"></text></g><g><title>test3`llvm::X86RegisterInfo::eliminateFrameIndex (2 samples, 0.15%)</title><rect x="74.0879%" y="437" width="0.1489%" height="15" fill="rgb(243,229,36)" fg:x="995" fg:w="2"/><text x="74.3379%" y="447.50"></text></g><g><title>test3`llvm::X86FrameLowering::getFrameIndexReference (2 samples, 0.15%)</title><rect x="74.0879%" y="421" width="0.1489%" height="15" fill="rgb(251,163,40)" fg:x="995" fg:w="2"/><text x="74.3379%" y="431.50"></text></g><g><title>test3`llvm::X86RegisterInfo::hasBasePointer (1 samples, 0.07%)</title><rect x="74.1623%" y="405" width="0.0745%" height="15" fill="rgb(237,222,12)" fg:x="996" fg:w="1"/><text x="74.4123%" y="415.50"></text></g><g><title>test3`llvm::TargetRegisterInfo::hasStackRealignment (1 samples, 0.07%)</title><rect x="74.1623%" y="389" width="0.0745%" height="15" fill="rgb(248,132,6)" fg:x="996" fg:w="1"/><text x="74.4123%" y="399.50"></text></g><g><title>test3`llvm::TargetRegisterInfo::shouldRealignStack (1 samples, 0.07%)</title><rect x="74.1623%" y="373" width="0.0745%" height="15" fill="rgb(227,167,50)" fg:x="996" fg:w="1"/><text x="74.4123%" y="383.50"></text></g><g><title>test3`llvm::TargetFrameLowering::getStackAlign (1 samples, 0.07%)</title><rect x="74.1623%" y="357" width="0.0745%" height="15" fill="rgb(242,84,37)" fg:x="996" fg:w="1"/><text x="74.4123%" y="367.50"></text></g><g><title>test3`llvm::RegisterClassInfo::runOnMachineFunction (1 samples, 0.07%)</title><rect x="74.2368%" y="469" width="0.0745%" height="15" fill="rgb(212,4,50)" fg:x="997" fg:w="1"/><text x="74.4868%" y="479.50"></text></g><g><title>test3`llvm::MachineBasicBlock::liveouts (1 samples, 0.07%)</title><rect x="74.3112%" y="453" width="0.0745%" height="15" fill="rgb(230,228,32)" fg:x="998" fg:w="1"/><text x="74.5612%" y="463.50"></text></g><g><title>test3`llvm::make_range (1 samples, 0.07%)</title><rect x="74.3112%" y="437" width="0.0745%" height="15" fill="rgb(248,217,23)" fg:x="998" fg:w="1"/><text x="74.5612%" y="447.50"></text></g><g><title>test3`llvm::iterator_range&lt;llvm::MachineBasicBlock::liveout_iterator&gt;::iterator_range (1 samples, 0.07%)</title><rect x="74.3112%" y="421" width="0.0745%" height="15" fill="rgb(238,197,32)" fg:x="998" fg:w="1"/><text x="74.5612%" y="431.50"></text></g><g><title>test3`llvm::MachineBasicBlock::liveout_iterator::~liveout_iterator (1 samples, 0.07%)</title><rect x="74.3112%" y="405" width="0.0745%" height="15" fill="rgb(236,106,1)" fg:x="998" fg:w="1"/><text x="74.5612%" y="415.50"></text></g><g><title>test3`std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::~_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="74.3112%" y="389" width="0.0745%" height="15" fill="rgb(219,228,13)" fg:x="998" fg:w="1"/><text x="74.5612%" y="399.50"></text></g><g><title>test3`std::_Iterator_base12::~_Iterator_base12 (1 samples, 0.07%)</title><rect x="74.3112%" y="373" width="0.0745%" height="15" fill="rgb(238,30,35)" fg:x="998" fg:w="1"/><text x="74.5612%" y="383.50"></text></g><g><title>test3`std::_Iterator_base12::_Orphan_me_locked_v3 (1 samples, 0.07%)</title><rect x="74.3112%" y="357" width="0.0745%" height="15" fill="rgb(236,70,23)" fg:x="998" fg:w="1"/><text x="74.5612%" y="367.50"></text></g><g><title>msvcp140d`std::_Lockit::_Lockit (1 samples, 0.07%)</title><rect x="74.3112%" y="341" width="0.0745%" height="15" fill="rgb(249,104,48)" fg:x="998" fg:w="1"/><text x="74.5612%" y="351.50"></text></g><g><title>msvcp140d`Mtxlock (1 samples, 0.07%)</title><rect x="74.3112%" y="325" width="0.0745%" height="15" fill="rgb(254,117,50)" fg:x="998" fg:w="1"/><text x="74.5612%" y="335.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="74.3112%" y="309" width="0.0745%" height="15" fill="rgb(223,152,4)" fg:x="998" fg:w="1"/><text x="74.5612%" y="319.50"></text></g><g><title>test3`llvm::MCRegUnitIterator::MCRegUnitIterator (1 samples, 0.07%)</title><rect x="74.3857%" y="437" width="0.0745%" height="15" fill="rgb(245,6,2)" fg:x="999" fg:w="1"/><text x="74.6357%" y="447.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="74.3857%" y="421" width="0.0745%" height="15" fill="rgb(249,150,24)" fg:x="999" fg:w="1"/><text x="74.6357%" y="431.50"></text></g><g><title>test3`llvm::SmallSet&lt;llvm::Register,2,std::less&lt;llvm::Register&gt; &gt;::SmallSet&lt;llvm::Register,2,std::less (1 samples, 0.07%)</title><rect x="74.4602%" y="437" width="0.0745%" height="15" fill="rgb(228,185,42)" fg:x="1000" fg:w="1"/><text x="74.7102%" y="447.50"></text></g><g><title>test3`std::set&lt;llvm::Register,std::less&lt;llvm::Register&gt;,std::allocator&lt;llvm::Register&gt; &gt;::set&lt;llvm::Register,std::less&lt;llvm::Register&gt;,std::allocator (1 samples, 0.07%)</title><rect x="74.4602%" y="421" width="0.0745%" height="15" fill="rgb(226,39,33)" fg:x="1000" fg:w="1"/><text x="74.7102%" y="431.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tset_traits&lt;llvm::Register,std::less&lt;llvm::Register&gt;,std::allocator&lt;llvm::Register&gt;,0&gt; &gt;::_Tree&lt;std::_Tset_traits&lt;llvm::Register,std::less&lt;llvm::Register&gt;,std::allocator (1 samples, 0.07%)</title><rect x="74.4602%" y="405" width="0.0745%" height="15" fill="rgb(221,166,19)" fg:x="1000" fg:w="1"/><text x="74.7102%" y="415.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tset_traits&lt;llvm::Register,std::less&lt;llvm::Register&gt;,std::allocator (1 samples, 0.07%)</title><rect x="74.4602%" y="389" width="0.0745%" height="15" fill="rgb(209,109,2)" fg:x="1000" fg:w="1"/><text x="74.7102%" y="399.50"></text></g><g><title>test3`std::_Container_proxy_ptr12&lt;std::allocator&lt;std::_Container_proxy&gt; &gt;::_Container_proxy_ptr12&lt;std::allocator (1 samples, 0.07%)</title><rect x="74.4602%" y="373" width="0.0745%" height="15" fill="rgb(252,216,26)" fg:x="1000" fg:w="1"/><text x="74.7102%" y="383.50"></text></g><g><title>test3`llvm::MCRegAliasIterator::MCRegAliasIterator (1 samples, 0.07%)</title><rect x="74.6091%" y="421" width="0.0745%" height="15" fill="rgb(227,173,36)" fg:x="1002" fg:w="1"/><text x="74.8591%" y="431.50"></text></g><g><title>test3`llvm::MCSuperRegIterator::MCSuperRegIterator (1 samples, 0.07%)</title><rect x="74.6091%" y="405" width="0.0745%" height="15" fill="rgb(209,90,7)" fg:x="1002" fg:w="1"/><text x="74.8591%" y="415.50"></text></g><g><title>test3`llvm::SparseSet&lt;unsigned short,llvm::identity (1 samples, 0.07%)</title><rect x="74.6835%" y="421" width="0.0745%" height="15" fill="rgb(250,194,11)" fg:x="1003" fg:w="1"/><text x="74.9335%" y="431.50"></text></g><g><title>test3`llvm::SparseSet&lt;unsigned short,llvm::identity (1 samples, 0.07%)</title><rect x="74.6835%" y="405" width="0.0745%" height="15" fill="rgb(220,72,50)" fg:x="1003" fg:w="1"/><text x="74.9335%" y="415.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="74.6835%" y="389" width="0.0745%" height="15" fill="rgb(222,106,48)" fg:x="1003" fg:w="1"/><text x="74.9335%" y="399.50"></text></g><g><title>test3`llvm::SmallVectorBase (1 samples, 0.07%)</title><rect x="74.6835%" y="373" width="0.0745%" height="15" fill="rgb(216,220,45)" fg:x="1003" fg:w="1"/><text x="74.9335%" y="383.50"></text></g><g><title>test3`std::_Tuple_get (1 samples, 0.07%)</title><rect x="74.6835%" y="357" width="0.0745%" height="15" fill="rgb(234,112,18)" fg:x="1003" fg:w="1"/><text x="74.9335%" y="367.50"></text></g><g><title>test3`llvm::TargetRegisterClass::contains (1 samples, 0.07%)</title><rect x="74.7580%" y="421" width="0.0745%" height="15" fill="rgb(206,179,9)" fg:x="1004" fg:w="1"/><text x="75.0080%" y="431.50"></text></g><g><title>test3`llvm::Register::asMCReg (1 samples, 0.07%)</title><rect x="74.7580%" y="405" width="0.0745%" height="15" fill="rgb(215,115,40)" fg:x="1004" fg:w="1"/><text x="75.0080%" y="415.50"></text></g><g><title>test3`llvm::X86InstrInfo::loadRegFromStackSlot (1 samples, 0.07%)</title><rect x="74.8325%" y="421" width="0.0745%" height="15" fill="rgb(222,69,34)" fg:x="1005" fg:w="1"/><text x="75.0825%" y="431.50"></text></g><g><title>test3`llvm::BuildMI (1 samples, 0.07%)</title><rect x="74.8325%" y="405" width="0.0745%" height="15" fill="rgb(209,161,10)" fg:x="1005" fg:w="1"/><text x="75.0825%" y="415.50"></text></g><g><title>test3`llvm::MachineInstrBuilder::addReg (1 samples, 0.07%)</title><rect x="74.8325%" y="389" width="0.0745%" height="15" fill="rgb(217,6,38)" fg:x="1005" fg:w="1"/><text x="75.0825%" y="399.50"></text></g><g><title>test3`llvm::MachineOperand::CreateReg (1 samples, 0.07%)</title><rect x="74.8325%" y="373" width="0.0745%" height="15" fill="rgb(229,229,48)" fg:x="1005" fg:w="1"/><text x="75.0825%" y="383.50"></text></g><g><title>test3`llvm::MachineOperand::setSubReg (1 samples, 0.07%)</title><rect x="74.8325%" y="357" width="0.0745%" height="15" fill="rgb(225,21,28)" fg:x="1005" fg:w="1"/><text x="75.0825%" y="367.50"></text></g><g><title>test3`llvm::MCRegUnitIterator::MCRegUnitIterator (1 samples, 0.07%)</title><rect x="74.9814%" y="405" width="0.0745%" height="15" fill="rgb(206,33,13)" fg:x="1007" fg:w="1"/><text x="75.2314%" y="415.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="74.9814%" y="389" width="0.0745%" height="15" fill="rgb(242,178,17)" fg:x="1007" fg:w="1"/><text x="75.2314%" y="399.50"></text></g><g><title>test3`llvm::MachineBasicBlock::isSuccessor (1 samples, 0.07%)</title><rect x="75.0558%" y="405" width="0.0745%" height="15" fill="rgb(220,162,5)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="415.50"></text></g><g><title>test3`llvm::MachineBasicBlock::successors (1 samples, 0.07%)</title><rect x="75.0558%" y="389" width="0.0745%" height="15" fill="rgb(210,33,43)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="399.50"></text></g><g><title>test3`llvm::make_range&lt;std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="75.0558%" y="373" width="0.0745%" height="15" fill="rgb(216,116,54)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="383.50"></text></g><g><title>test3`std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::~_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="75.0558%" y="357" width="0.0745%" height="15" fill="rgb(249,92,24)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="367.50"></text></g><g><title>test3`std::_Iterator_base12::~_Iterator_base12 (1 samples, 0.07%)</title><rect x="75.0558%" y="341" width="0.0745%" height="15" fill="rgb(231,189,14)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="351.50"></text></g><g><title>test3`std::_Iterator_base12::_Orphan_me_locked_v3 (1 samples, 0.07%)</title><rect x="75.0558%" y="325" width="0.0745%" height="15" fill="rgb(230,8,41)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="335.50"></text></g><g><title>msvcp140d`std::_Lockit::_Lockit (1 samples, 0.07%)</title><rect x="75.0558%" y="309" width="0.0745%" height="15" fill="rgb(249,7,27)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="319.50"></text></g><g><title>msvcp140d`Mtxlock (1 samples, 0.07%)</title><rect x="75.0558%" y="293" width="0.0745%" height="15" fill="rgb(232,86,5)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="303.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="75.0558%" y="277" width="0.0745%" height="15" fill="rgb(224,175,18)" fg:x="1008" fg:w="1"/><text x="75.3058%" y="287.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::use_instr_nodbg_begin (1 samples, 0.07%)</title><rect x="75.1303%" y="389" width="0.0745%" height="15" fill="rgb(220,129,12)" fg:x="1009" fg:w="1"/><text x="75.3803%" y="399.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::defusechain_instr_iterator&lt;1,0,1,0,1,0&gt;::defusechain_instr_iterator (1 samples, 0.07%)</title><rect x="75.1303%" y="373" width="0.0745%" height="15" fill="rgb(210,19,36)" fg:x="1009" fg:w="1"/><text x="75.3803%" y="383.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::defusechain_instr_iterator (1 samples, 0.07%)</title><rect x="75.1303%" y="357" width="0.0745%" height="15" fill="rgb(219,96,14)" fg:x="1009" fg:w="1"/><text x="75.3803%" y="367.50"></text></g><g><title>test3`llvm::MachineOperand::isDef (1 samples, 0.07%)</title><rect x="75.1303%" y="341" width="0.0745%" height="15" fill="rgb(249,106,1)" fg:x="1009" fg:w="1"/><text x="75.3803%" y="351.50"></text></g><g><title>test3`llvm::MachineRegisterInfo::use_nodbg_instructions (2 samples, 0.15%)</title><rect x="75.1303%" y="405" width="0.1489%" height="15" fill="rgb(249,155,20)" fg:x="1009" fg:w="2"/><text x="75.3803%" y="415.50"></text></g><g><title>test3`llvm::make_range&lt;llvm::detail::SafeIntIterator (1 samples, 0.07%)</title><rect x="75.2048%" y="389" width="0.0745%" height="15" fill="rgb(244,168,9)" fg:x="1010" fg:w="1"/><text x="75.4548%" y="399.50"></text></g><g><title>test3`llvm::RegisterClassInfo::getOrder (1 samples, 0.07%)</title><rect x="75.2792%" y="405" width="0.0745%" height="15" fill="rgb(216,23,50)" fg:x="1011" fg:w="1"/><text x="75.5292%" y="415.50"></text></g><g><title>test3`llvm::RegisterClassInfo::get (1 samples, 0.07%)</title><rect x="75.2792%" y="389" width="0.0745%" height="15" fill="rgb(224,219,20)" fg:x="1011" fg:w="1"/><text x="75.5292%" y="399.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::RegisterClassInfo::RCInfo [0],std::default_delete (1 samples, 0.07%)</title><rect x="75.2792%" y="373" width="0.0745%" height="15" fill="rgb(222,156,15)" fg:x="1011" fg:w="1"/><text x="75.5292%" y="383.50"></text></g><g><title>test3`llvm::X86InstrInfo::storeRegToStackSlot (1 samples, 0.07%)</title><rect x="75.3537%" y="405" width="0.0745%" height="15" fill="rgb(231,97,17)" fg:x="1012" fg:w="1"/><text x="75.6037%" y="415.50"></text></g><g><title>test3`llvm::createCleanupLocalDynamicTLSPass (1 samples, 0.07%)</title><rect x="75.3537%" y="389" width="0.0745%" height="15" fill="rgb(218,70,48)" fg:x="1012" fg:w="1"/><text x="75.6037%" y="399.50"></text></g><g><title>test3`llvm::createCleanupLocalDynamicTLSPass (1 samples, 0.07%)</title><rect x="75.3537%" y="373" width="0.0745%" height="15" fill="rgb(212,196,52)" fg:x="1012" fg:w="1"/><text x="75.6037%" y="383.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (14 samples, 1.04%)</title><rect x="74.5346%" y="437" width="1.0424%" height="15" fill="rgb(243,203,18)" fg:x="1001" fg:w="14"/><text x="74.7846%" y="447.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (9 samples, 0.67%)</title><rect x="74.9069%" y="421" width="0.6701%" height="15" fill="rgb(252,125,41)" fg:x="1006" fg:w="9"/><text x="75.1569%" y="431.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (2 samples, 0.15%)</title><rect x="75.4281%" y="405" width="0.1489%" height="15" fill="rgb(223,180,33)" fg:x="1013" fg:w="2"/><text x="75.6781%" y="415.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (1 samples, 0.07%)</title><rect x="75.5026%" y="389" width="0.0745%" height="15" fill="rgb(254,159,46)" fg:x="1014" fg:w="1"/><text x="75.7526%" y="399.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (17 samples, 1.27%)</title><rect x="74.3857%" y="453" width="1.2658%" height="15" fill="rgb(254,38,10)" fg:x="999" fg:w="17"/><text x="74.6357%" y="463.50"></text></g><g><title>test3`std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="75.5771%" y="437" width="0.0745%" height="15" fill="rgb(208,217,32)" fg:x="1015" fg:w="1"/><text x="75.8271%" y="447.50"></text></g><g><title>test3`std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;::_Construct_n_copies_of_ty (1 samples, 0.07%)</title><rect x="75.5771%" y="421" width="0.0745%" height="15" fill="rgb(221,120,13)" fg:x="1015" fg:w="1"/><text x="75.8271%" y="431.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (20 samples, 1.49%)</title><rect x="74.2368%" y="485" width="1.4892%" height="15" fill="rgb(246,54,52)" fg:x="997" fg:w="20"/><text x="74.4868%" y="495.50"></text></g><g><title>test3`llvm::initializeRegAllocFastPass (19 samples, 1.41%)</title><rect x="74.3112%" y="469" width="1.4147%" height="15" fill="rgb(242,34,25)" fg:x="998" fg:w="19"/><text x="74.5612%" y="479.50"></text></g><g><title>test3`llvm::iterator_range (1 samples, 0.07%)</title><rect x="75.6515%" y="453" width="0.0745%" height="15" fill="rgb(247,209,9)" fg:x="1016" fg:w="1"/><text x="75.9015%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,unsigned int&gt; &gt;,llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="75.7260%" y="469" width="0.0745%" height="15" fill="rgb(228,71,26)" fg:x="1017" fg:w="1"/><text x="75.9760%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::MachineInstr * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MachineInstr * __ptr64,unsigned int&gt; &gt;,llvm::MachineInstr * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::MachineInstr * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="75.8004%" y="469" width="0.0745%" height="15" fill="rgb(222,145,49)" fg:x="1018" fg:w="1"/><text x="76.0504%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::MachineInstr * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MachineInstr * __ptr64,unsigned int&gt; &gt;,llvm::MachineInstr * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::MachineInstr * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MachineInstr * __ptr64,unsigned int&gt; &gt;::try_emplace (1 samples, 0.07%)</title><rect x="75.8004%" y="453" width="0.0745%" height="15" fill="rgb(218,121,17)" fg:x="1018" fg:w="1"/><text x="76.0504%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineInstr * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::MachineInstr * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MachineInstr * __ptr64,unsigned int&gt; &gt;,llvm::MachineInstr * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::MachineInstr * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::MachineInstr * __ptr64,unsigned int&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="75.8004%" y="437" width="0.0745%" height="15" fill="rgb(244,50,7)" fg:x="1018" fg:w="1"/><text x="76.0504%" y="447.50"></text></g><g><title>test3`&lt;move&gt;&lt;llvm::Optional (1 samples, 0.07%)</title><rect x="75.8004%" y="421" width="0.0745%" height="15" fill="rgb(246,229,37)" fg:x="1018" fg:w="1"/><text x="76.0504%" y="431.50"></text></g><g><title>test3`llvm::initializeTwoAddressInstructionPassPass (3 samples, 0.22%)</title><rect x="75.7260%" y="485" width="0.2234%" height="15" fill="rgb(225,18,5)" fg:x="1017" fg:w="3"/><text x="75.9760%" y="495.50"></text></g><g><title>test3`llvm::MachineInstrBundleIterator (1 samples, 0.07%)</title><rect x="75.8749%" y="469" width="0.0745%" height="15" fill="rgb(213,204,8)" fg:x="1019" fg:w="1"/><text x="76.1249%" y="479.50"></text></g><g><title>test3`llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="75.8749%" y="453" width="0.0745%" height="15" fill="rgb(238,103,6)" fg:x="1019" fg:w="1"/><text x="76.1249%" y="463.50"></text></g><g><title>test3`llvm::initializeX86AvoidTrailingCallPassPass (1 samples, 0.07%)</title><rect x="75.9494%" y="485" width="0.0745%" height="15" fill="rgb(222,25,35)" fg:x="1020" fg:w="1"/><text x="76.1994%" y="495.50"></text></g><g><title>test3`llvm::ilist_node_with_parent (1 samples, 0.07%)</title><rect x="75.9494%" y="469" width="0.0745%" height="15" fill="rgb(213,203,35)" fg:x="1020" fg:w="1"/><text x="76.1994%" y="479.50"></text></g><g><title>test3`llvm::iplist_impl&lt;llvm::simple_ilist&lt;llvm::MachineBasicBlock&gt;,llvm::ilist_traits (1 samples, 0.07%)</title><rect x="75.9494%" y="453" width="0.0745%" height="15" fill="rgb(221,79,53)" fg:x="1020" fg:w="1"/><text x="76.1994%" y="463.50"></text></g><g><title>test3`llvm::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::BasicBlock,0,0,void&gt;,0,1&gt;::ilist_iterator&lt;llvm::ilist_detail::node_options&lt;llvm::BasicBlock,0,0,void&gt;,0,1&gt; (1 samples, 0.07%)</title><rect x="75.9494%" y="437" width="0.0745%" height="15" fill="rgb(243,200,35)" fg:x="1020" fg:w="1"/><text x="76.1994%" y="447.50"></text></g><g><title>test3`llvm::initializeX86ExpandPseudoPass (1 samples, 0.07%)</title><rect x="76.0238%" y="485" width="0.0745%" height="15" fill="rgb(248,60,25)" fg:x="1021" fg:w="1"/><text x="76.2738%" y="495.50"></text></g><g><title>test3`llvm::initializeX86ExpandPseudoPass (1 samples, 0.07%)</title><rect x="76.0238%" y="469" width="0.0745%" height="15" fill="rgb(227,53,46)" fg:x="1021" fg:w="1"/><text x="76.2738%" y="479.50"></text></g><g><title>test3`llvm::initializeX86ExpandPseudoPass (1 samples, 0.07%)</title><rect x="76.0238%" y="453" width="0.0745%" height="15" fill="rgb(216,120,32)" fg:x="1021" fg:w="1"/><text x="76.2738%" y="463.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="76.0238%" y="437" width="0.0745%" height="15" fill="rgb(220,134,1)" fg:x="1021" fg:w="1"/><text x="76.2738%" y="447.50"></text></g><g><title>test3`llvm::initializeX86FastTileConfigPass (1 samples, 0.07%)</title><rect x="76.0983%" y="485" width="0.0745%" height="15" fill="rgb(237,168,5)" fg:x="1022" fg:w="1"/><text x="76.3483%" y="495.50"></text></g><g><title>test3`llvm::initializeX86FastTileConfigPass (1 samples, 0.07%)</title><rect x="76.0983%" y="469" width="0.0745%" height="15" fill="rgb(231,100,33)" fg:x="1022" fg:w="1"/><text x="76.3483%" y="479.50"></text></g><g><title>test3`llvm::MachineInstrBundleIterator (1 samples, 0.07%)</title><rect x="76.0983%" y="453" width="0.0745%" height="15" fill="rgb(236,177,47)" fg:x="1022" fg:w="1"/><text x="76.3483%" y="463.50"></text></g><g><title>test3`llvm::MachineInstrBundleIteratorHelper&lt;0&gt;::increment&lt;llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="76.0983%" y="437" width="0.0745%" height="15" fill="rgb(235,7,49)" fg:x="1022" fg:w="1"/><text x="76.3483%" y="447.50"></text></g><g><title>test3`std::next&lt;llvm::ilist_iterator&lt;llvm::ilist_detail::node_options (1 samples, 0.07%)</title><rect x="76.0983%" y="421" width="0.0745%" height="15" fill="rgb(232,119,22)" fg:x="1022" fg:w="1"/><text x="76.3483%" y="431.50"></text></g><g><title>test3`llvm::MachineFunctionPass::runOnFunction (215 samples, 16.01%)</title><rect x="60.2383%" y="501" width="16.0089%" height="15" fill="rgb(254,73,53)" fg:x="809" fg:w="215"/><text x="60.4883%" y="511.50">test3`llvm::MachineFuncti..</text></g><g><title>test3`llvm::initializeX86FlagsCopyLoweringPassPass (1 samples, 0.07%)</title><rect x="76.1727%" y="485" width="0.0745%" height="15" fill="rgb(251,35,20)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="495.50"></text></g><g><title>test3`llvm::ReversePostOrderTraversal&lt;llvm::MachineFunction * __ptr64,llvm::GraphTraits&lt;llvm::MachineFunction * __ptr64&gt; &gt;::ReversePostOrderTraversal&lt;llvm::MachineFunction * __ptr64,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.1727%" y="469" width="0.0745%" height="15" fill="rgb(241,119,20)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="479.50"></text></g><g><title>test3`llvm::ReversePostOrderTraversal&lt;llvm::MachineFunction * __ptr64,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.1727%" y="453" width="0.0745%" height="15" fill="rgb(207,102,14)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="463.50"></text></g><g><title>test3`llvm::po_end (1 samples, 0.07%)</title><rect x="76.1727%" y="437" width="0.0745%" height="15" fill="rgb(248,201,50)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="447.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::MachineBasicBlock * __ptr64,llvm::SmallPtrSet&lt;llvm::MachineBasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.1727%" y="421" width="0.0745%" height="15" fill="rgb(222,185,44)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="431.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64,llvm::SmallPtrSet&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64,8&gt;,0,llvm::GraphTraits&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64&gt; &gt;::po_iterator&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64,llvm::SmallPtrSet&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64,8&gt;,0,llvm::GraphTraits&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.1727%" y="405" width="0.0745%" height="15" fill="rgb(218,107,18)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="415.50"></text></g><g><title>test3`llvm::bf_iterator_storage&lt;llvm::SmallPtrSet&lt;llvm::Loop * __ptr64,8&gt; &gt;::bf_iterator_storage&lt;llvm::SmallPtrSet (1 samples, 0.07%)</title><rect x="76.1727%" y="389" width="0.0745%" height="15" fill="rgb(237,177,39)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="399.50"></text></g><g><title>test3`llvm::SmallPtrSet&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64,8&gt;::SmallPtrSet&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.1727%" y="373" width="0.0745%" height="15" fill="rgb(246,69,6)" fg:x="1023" fg:w="1"/><text x="76.4227%" y="383.50"></text></g><g><title>test3`llvm::PMDataManager::initializeAnalysisImpl (1 samples, 0.07%)</title><rect x="76.2472%" y="501" width="0.0745%" height="15" fill="rgb(234,208,37)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="511.50"></text></g><g><title>test3`llvm::AnalysisResolver::addAnalysisImplsPair (1 samples, 0.07%)</title><rect x="76.2472%" y="485" width="0.0745%" height="15" fill="rgb(225,4,6)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="495.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="76.2472%" y="469" width="0.0745%" height="15" fill="rgb(233,45,0)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="479.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt;,std::allocator&lt;std::pair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt; &gt;::emplace_back&lt;std::pair (1 samples, 0.07%)</title><rect x="76.2472%" y="453" width="0.0745%" height="15" fill="rgb(226,136,5)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="463.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt;,std::allocator&lt;std::pair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt; &gt;::_Emplace_reallocate&lt;std::pair (1 samples, 0.07%)</title><rect x="76.2472%" y="437" width="0.0745%" height="15" fill="rgb(211,91,47)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="447.50"></text></g><g><title>test3`std::vector&lt;llvm::rdf::NodeAddr&lt;llvm::rdf::DefNode * __ptr64&gt;,std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="76.2472%" y="421" width="0.0745%" height="15" fill="rgb(242,88,51)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="431.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="76.2472%" y="405" width="0.0745%" height="15" fill="rgb(230,91,28)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="415.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="76.2472%" y="389" width="0.0745%" height="15" fill="rgb(254,186,29)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="399.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="76.2472%" y="373" width="0.0745%" height="15" fill="rgb(238,6,4)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="383.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="76.2472%" y="357" width="0.0745%" height="15" fill="rgb(221,151,16)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="367.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="76.2472%" y="341" width="0.0745%" height="15" fill="rgb(251,143,52)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="351.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="76.2472%" y="325" width="0.0745%" height="15" fill="rgb(206,90,15)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="335.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="76.2472%" y="309" width="0.0745%" height="15" fill="rgb(218,35,8)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="319.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="76.2472%" y="293" width="0.0745%" height="15" fill="rgb(239,215,6)" fg:x="1024" fg:w="1"/><text x="76.4972%" y="303.50"></text></g><g><title>test3`llvm::PMDataManager::removeDeadPasses (1 samples, 0.07%)</title><rect x="76.3217%" y="501" width="0.0745%" height="15" fill="rgb(245,116,39)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="511.50"></text></g><g><title>test3`llvm::PMDataManager::freePass (1 samples, 0.07%)</title><rect x="76.3217%" y="485" width="0.0745%" height="15" fill="rgb(242,65,28)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="495.50"></text></g><g><title>test3`llvm::MachineDominatorTree::releaseMemory (1 samples, 0.07%)</title><rect x="76.3217%" y="469" width="0.0745%" height="15" fill="rgb(252,132,53)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="479.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock,0&gt;,std::default_delete&lt;llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="453" width="0.0745%" height="15" fill="rgb(224,159,50)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="463.50"></text></g><g><title>test3`std::default_delete&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock,0&gt; &gt;::operator (1 samples, 0.07%)</title><rect x="76.3217%" y="437" width="0.0745%" height="15" fill="rgb(224,93,4)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="447.50"></text></g><g><title>test3`llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="421" width="0.0745%" height="15" fill="rgb(208,81,34)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="431.50"></text></g><g><title>test3`llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt;::~DominatorTreeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="405" width="0.0745%" height="15" fill="rgb(233,92,54)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="415.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::~DenseMap&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="389" width="0.0745%" height="15" fill="rgb(237,21,14)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;,llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="373" width="0.0745%" height="15" fill="rgb(249,128,51)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="383.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="357" width="0.0745%" height="15" fill="rgb(223,129,24)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="367.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;::~unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="341" width="0.0745%" height="15" fill="rgb(231,168,25)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="351.50"></text></g><g><title>test3`std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt;::operator (1 samples, 0.07%)</title><rect x="76.3217%" y="325" width="0.0745%" height="15" fill="rgb(224,39,20)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="335.50"></text></g><g><title>test3`llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="76.3217%" y="309" width="0.0745%" height="15" fill="rgb(225,152,53)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="319.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="76.3217%" y="293" width="0.0745%" height="15" fill="rgb(252,17,24)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="303.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="76.3217%" y="277" width="0.0745%" height="15" fill="rgb(250,114,30)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="287.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="76.3217%" y="261" width="0.0745%" height="15" fill="rgb(229,5,4)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="271.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="76.3217%" y="245" width="0.0745%" height="15" fill="rgb(225,176,49)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="255.50"></text></g><g><title>ucrtbased`local_unwind (1 samples, 0.07%)</title><rect x="76.3217%" y="229" width="0.0745%" height="15" fill="rgb(224,221,49)" fg:x="1025" fg:w="1"/><text x="76.5717%" y="239.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager (1 samples, 0.07%)</title><rect x="76.3961%" y="469" width="0.0745%" height="15" fill="rgb(253,169,27)" fg:x="1026" fg:w="1"/><text x="76.6461%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,llvm::Function * __ptr64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,llvm::Function * __ptr64&gt; &gt;,int,llvm::Function * __ptr64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="76.3961%" y="453" width="0.0745%" height="15" fill="rgb(211,206,16)" fg:x="1026" fg:w="1"/><text x="76.6461%" y="463.50"></text></g><g><title>test3`std::shared_ptr&lt;llvm::PBQP::MDMatrix&lt;llvm::PBQP::RegAlloc::MatrixMetadata&gt; const &gt;::operator (1 samples, 0.07%)</title><rect x="76.3961%" y="437" width="0.0745%" height="15" fill="rgb(244,87,35)" fg:x="1026" fg:w="1"/><text x="76.6461%" y="447.50"></text></g><g><title>&lt;llvm::PBQP::MDMatrix (1 samples, 0.07%)</title><rect x="76.3961%" y="421" width="0.0745%" height="15" fill="rgb(246,28,10)" fg:x="1026" fg:w="1"/><text x="76.6461%" y="431.50"></text></g><g><title>test3`std::_Atomic_reinterpret_as (1 samples, 0.07%)</title><rect x="76.3961%" y="405" width="0.0745%" height="15" fill="rgb(229,12,44)" fg:x="1026" fg:w="1"/><text x="76.6461%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager (1 samples, 0.07%)</title><rect x="76.4706%" y="453" width="0.0745%" height="15" fill="rgb(210,145,37)" fg:x="1027" fg:w="1"/><text x="76.7206%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,llvm::Function * __ptr64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,llvm::Function * __ptr64&gt; &gt;,int,llvm::Function * __ptr64,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="76.4706%" y="437" width="0.0745%" height="15" fill="rgb(227,112,52)" fg:x="1027" fg:w="1"/><text x="76.7206%" y="447.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned char,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;unsigned char&gt;,llvm::detail::DenseSetPair&lt;unsigned char&gt; &gt;,unsigned char,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;unsigned char&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="76.4706%" y="421" width="0.0745%" height="15" fill="rgb(238,155,34)" fg:x="1027" fg:w="1"/><text x="76.7206%" y="431.50"></text></g><g><title>test3`llvm::ARMFunctionInfo::getArgRegsSaveSize (1 samples, 0.07%)</title><rect x="76.4706%" y="405" width="0.0745%" height="15" fill="rgb(239,226,36)" fg:x="1027" fg:w="1"/><text x="76.7206%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt;,void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair (2 samples, 0.15%)</title><rect x="76.4706%" y="469" width="0.1489%" height="15" fill="rgb(230,16,23)" fg:x="1027" fg:w="2"/><text x="76.7206%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt;,void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="76.5450%" y="453" width="0.0745%" height="15" fill="rgb(236,171,36)" fg:x="1028" fg:w="1"/><text x="76.7950%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;,llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,std::unique_ptr&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt;,std::default_delete&lt;llvm::detail::AnalysisPassConcept&lt;llvm::Function,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt;::Invalidator&gt; &gt; &gt; &gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="76.5450%" y="437" width="0.0745%" height="15" fill="rgb(221,22,14)" fg:x="1028" fg:w="1"/><text x="76.7950%" y="447.50"></text></g><g><title>test3`std::shared_ptr&lt;llvm::PBQP::MDMatrix&lt;llvm::PBQP::RegAlloc::MatrixMetadata&gt; const &gt;::operator (1 samples, 0.07%)</title><rect x="76.5450%" y="421" width="0.0745%" height="15" fill="rgb(242,43,11)" fg:x="1028" fg:w="1"/><text x="76.7950%" y="431.50"></text></g><g><title>&lt;llvm::PBQP::MDMatrix (1 samples, 0.07%)</title><rect x="76.5450%" y="405" width="0.0745%" height="15" fill="rgb(232,69,23)" fg:x="1028" fg:w="1"/><text x="76.7950%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt;,void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="76.6195%" y="437" width="0.0745%" height="15" fill="rgb(216,180,54)" fg:x="1029" fg:w="1"/><text x="76.8695%" y="447.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt;,void const * __ptr64,llvm::Pass * __ptr64,llvm::DenseMapInfo&lt;void const * __ptr64&gt;,llvm::detail::DenseMapPair&lt;void const * __ptr64,llvm::Pass * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="76.6195%" y="421" width="0.0745%" height="15" fill="rgb(216,5,24)" fg:x="1029" fg:w="1"/><text x="76.8695%" y="431.50"></text></g><g><title>test3`llvm::PMDataManager::verifyPreservedAnalysis (5 samples, 0.37%)</title><rect x="76.3961%" y="501" width="0.3723%" height="15" fill="rgb(225,89,9)" fg:x="1026" fg:w="5"/><text x="76.6461%" y="511.50"></text></g><g><title>test3`llvm::PMDataManager::findAnalysisPass (5 samples, 0.37%)</title><rect x="76.3961%" y="485" width="0.3723%" height="15" fill="rgb(243,75,33)" fg:x="1026" fg:w="5"/><text x="76.6461%" y="495.50"></text></g><g><title>test3`llvm::PMTopLevelManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="76.6195%" y="469" width="0.1489%" height="15" fill="rgb(247,141,45)" fg:x="1029" fg:w="2"/><text x="76.8695%" y="479.50"></text></g><g><title>test3`llvm::PMDataManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="76.6195%" y="453" width="0.1489%" height="15" fill="rgb(232,177,36)" fg:x="1029" fg:w="2"/><text x="76.8695%" y="463.50"></text></g><g><title>test3`llvm::operator!= (1 samples, 0.07%)</title><rect x="76.6940%" y="437" width="0.0745%" height="15" fill="rgb(219,125,36)" fg:x="1030" fg:w="1"/><text x="76.9440%" y="447.50"></text></g><g><title>test3`llvm::operator== (1 samples, 0.07%)</title><rect x="76.6940%" y="421" width="0.0745%" height="15" fill="rgb(227,94,9)" fg:x="1030" fg:w="1"/><text x="76.9440%" y="431.50"></text></g><g><title>test3`llvm::createLowerConstantIntrinsicsPass (1 samples, 0.07%)</title><rect x="76.7684%" y="501" width="0.0745%" height="15" fill="rgb(240,34,52)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="511.50"></text></g><g><title>test3`llvm::createLowerConstantIntrinsicsPass (1 samples, 0.07%)</title><rect x="76.7684%" y="485" width="0.0745%" height="15" fill="rgb(216,45,12)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="495.50"></text></g><g><title>test3`llvm::ReversePostOrderTraversal&lt;llvm::Function * __ptr64,llvm::GraphTraits&lt;llvm::Function * __ptr64&gt; &gt;::ReversePostOrderTraversal&lt;llvm::Function * __ptr64,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.7684%" y="469" width="0.0745%" height="15" fill="rgb(246,21,19)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="479.50"></text></g><g><title>test3`llvm::ReversePostOrderTraversal&lt;llvm::Function * __ptr64,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.7684%" y="453" width="0.0745%" height="15" fill="rgb(213,98,42)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="463.50"></text></g><g><title>test3`std::copy&lt;llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits&lt;llvm::Function * __ptr64&gt; &gt;,std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="76.7684%" y="437" width="0.0745%" height="15" fill="rgb(250,136,47)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="447.50"></text></g><g><title>test3`std::_Copy_unchecked&lt;llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits&lt;llvm::Function * __ptr64&gt; &gt;,std::back_insert_iterator&lt;std::vector&lt;llvm::BasicBlock * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="76.7684%" y="421" width="0.0745%" height="15" fill="rgb(251,124,27)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="431.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.7684%" y="405" width="0.0745%" height="15" fill="rgb(229,180,14)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="415.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.7684%" y="389" width="0.0745%" height="15" fill="rgb(245,216,25)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="399.50"></text></g><g><title>test3`llvm::po_iterator_storage&lt;llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0&gt;::insertEdge (1 samples, 0.07%)</title><rect x="76.7684%" y="373" width="0.0745%" height="15" fill="rgb(251,43,5)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="383.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="76.7684%" y="357" width="0.0745%" height="15" fill="rgb(250,128,24)" fg:x="1031" fg:w="1"/><text x="77.0184%" y="367.50"></text></g><g><title>test3`llvm::createScalarizeMaskedMemIntrinLegacyPass (1 samples, 0.07%)</title><rect x="76.8429%" y="501" width="0.0745%" height="15" fill="rgb(217,117,27)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="511.50"></text></g><g><title>test3`llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.07%)</title><rect x="76.8429%" y="485" width="0.0745%" height="15" fill="rgb(245,147,4)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="495.50"></text></g><g><title>test3`llvm::TargetIRAnalysis::run (1 samples, 0.07%)</title><rect x="76.8429%" y="469" width="0.0745%" height="15" fill="rgb(242,201,35)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="479.50"></text></g><g><title>test3`std::_Func_class&lt;std::pair&lt;unsigned int,llvm::LLT&gt;,llvm::LegalityQuery const &amp; __ptr64&gt;::operator (1 samples, 0.07%)</title><rect x="76.8429%" y="453" width="0.0745%" height="15" fill="rgb(218,181,1)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="463.50"></text></g><g><title>test3`llvm::TargetMachine::parseBinutilsVersion (1 samples, 0.07%)</title><rect x="76.8429%" y="437" width="0.0745%" height="15" fill="rgb(222,6,29)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="447.50"></text></g><g><title>test3`llvm::TargetMachine::parseBinutilsVersion (1 samples, 0.07%)</title><rect x="76.8429%" y="421" width="0.0745%" height="15" fill="rgb(208,186,3)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="431.50"></text></g><g><title>test3`llvm::TargetMachine::parseBinutilsVersion (1 samples, 0.07%)</title><rect x="76.8429%" y="405" width="0.0745%" height="15" fill="rgb(216,36,26)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="415.50"></text></g><g><title>test3`llvm::TargetMachine::parseBinutilsVersion (1 samples, 0.07%)</title><rect x="76.8429%" y="389" width="0.0745%" height="15" fill="rgb(248,201,23)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="399.50"></text></g><g><title>test3`llvm::X86TargetMachine::getTargetTransformInfo (1 samples, 0.07%)</title><rect x="76.8429%" y="373" width="0.0745%" height="15" fill="rgb(251,170,31)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="383.50"></text></g><g><title>test3`llvm::X86TTIImpl::X86TTIImpl (1 samples, 0.07%)</title><rect x="76.8429%" y="357" width="0.0745%" height="15" fill="rgb(207,110,25)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="367.50"></text></g><g><title>test3`llvm::BasicTTIImplBase&lt;llvm::X86TTIImpl&gt;::BasicTTIImplBase (1 samples, 0.07%)</title><rect x="76.8429%" y="341" width="0.0745%" height="15" fill="rgb(250,54,15)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="351.50"></text></g><g><title>test3`llvm::cl::init (1 samples, 0.07%)</title><rect x="76.8429%" y="325" width="0.0745%" height="15" fill="rgb(227,68,33)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="335.50"></text></g><g><title>test3`std::_Pass_fn (1 samples, 0.07%)</title><rect x="76.8429%" y="309" width="0.0745%" height="15" fill="rgb(238,34,41)" fg:x="1032" fg:w="1"/><text x="77.0929%" y="319.50"></text></g><g><title>test3`llvm::createX86LowerAMXTypePass (1 samples, 0.07%)</title><rect x="76.9173%" y="501" width="0.0745%" height="15" fill="rgb(220,11,15)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="511.50"></text></g><g><title>test3`llvm::createX86LowerAMXTypePass (1 samples, 0.07%)</title><rect x="76.9173%" y="485" width="0.0745%" height="15" fill="rgb(246,111,35)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="495.50"></text></g><g><title>test3`llvm::post_order (1 samples, 0.07%)</title><rect x="76.9173%" y="469" width="0.0745%" height="15" fill="rgb(209,88,53)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="479.50"></text></g><g><title>test3`llvm::po_begin (1 samples, 0.07%)</title><rect x="76.9173%" y="453" width="0.0745%" height="15" fill="rgb(231,185,47)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="463.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.9173%" y="437" width="0.0745%" height="15" fill="rgb(233,154,1)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="447.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits&lt;llvm::Function * __ptr64&gt; &gt;::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.9173%" y="421" width="0.0745%" height="15" fill="rgb(225,15,46)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="431.50"></text></g><g><title>test3`llvm::po_iterator&lt;llvm::Function * __ptr64,llvm::SmallPtrSet&lt;llvm::BasicBlock * __ptr64,8&gt;,0,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="76.9173%" y="405" width="0.0745%" height="15" fill="rgb(211,135,41)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="415.50"></text></g><g><title>test3`llvm::iterator_facade_base&lt;llvm::SuccIterator (1 samples, 0.07%)</title><rect x="76.9173%" y="389" width="0.0745%" height="15" fill="rgb(208,54,0)" fg:x="1033" fg:w="1"/><text x="77.1673%" y="399.50"></text></g><g><title>test3`llvm::X86GenSubtargetInfo::X86GenSubtargetInfo (1 samples, 0.07%)</title><rect x="76.9918%" y="437" width="0.0745%" height="15" fill="rgb(244,136,14)" fg:x="1034" fg:w="1"/><text x="77.2418%" y="447.50"></text></g><g><title>test3`llvm::MCRegisterInfo::mapLLVMRegToCVReg (1 samples, 0.07%)</title><rect x="77.0663%" y="389" width="0.0745%" height="15" fill="rgb(241,56,14)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.0663%" y="373" width="0.0745%" height="15" fill="rgb(205,80,24)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.0663%" y="357" width="0.0745%" height="15" fill="rgb(220,57,4)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="77.0663%" y="341" width="0.0745%" height="15" fill="rgb(226,193,50)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="77.0663%" y="325" width="0.0745%" height="15" fill="rgb(231,168,22)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.0663%" y="309" width="0.0745%" height="15" fill="rgb(254,215,14)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="319.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.0663%" y="293" width="0.0745%" height="15" fill="rgb(211,115,16)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="303.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.0663%" y="277" width="0.0745%" height="15" fill="rgb(236,210,16)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="77.0663%" y="261" width="0.0745%" height="15" fill="rgb(221,94,12)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="271.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="77.0663%" y="245" width="0.0745%" height="15" fill="rgb(235,218,49)" fg:x="1035" fg:w="1"/><text x="77.3163%" y="255.50"></text></g><g><title>test3`llvm::X86InstrInfo::X86InstrInfo (2 samples, 0.15%)</title><rect x="77.0663%" y="437" width="0.1489%" height="15" fill="rgb(217,114,14)" fg:x="1035" fg:w="2"/><text x="77.3163%" y="447.50"></text></g><g><title>test3`llvm::X86RegisterInfo::X86RegisterInfo (2 samples, 0.15%)</title><rect x="77.0663%" y="421" width="0.1489%" height="15" fill="rgb(216,145,22)" fg:x="1035" fg:w="2"/><text x="77.3163%" y="431.50"></text></g><g><title>test3`llvm::X86_MC::initLLVMToSEHAndCVRegMapping (2 samples, 0.15%)</title><rect x="77.0663%" y="405" width="0.1489%" height="15" fill="rgb(217,112,39)" fg:x="1035" fg:w="2"/><text x="77.3163%" y="415.50"></text></g><g><title>test3`llvm::MCRegisterInfo::mapLLVMRegToSEHReg (1 samples, 0.07%)</title><rect x="77.1407%" y="389" width="0.0745%" height="15" fill="rgb(225,85,32)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.1407%" y="373" width="0.0745%" height="15" fill="rgb(245,209,47)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.1407%" y="357" width="0.0745%" height="15" fill="rgb(218,220,15)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="77.1407%" y="341" width="0.0745%" height="15" fill="rgb(222,202,31)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="77.1407%" y="325" width="0.0745%" height="15" fill="rgb(243,203,4)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="335.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.1407%" y="309" width="0.0745%" height="15" fill="rgb(237,92,17)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="319.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.1407%" y="293" width="0.0745%" height="15" fill="rgb(231,119,7)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="303.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="77.1407%" y="277" width="0.0745%" height="15" fill="rgb(237,82,41)" fg:x="1036" fg:w="1"/><text x="77.3907%" y="287.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::setScalarAction (1 samples, 0.07%)</title><rect x="77.2897%" y="405" width="0.0745%" height="15" fill="rgb(226,81,48)" fg:x="1038" fg:w="1"/><text x="77.5397%" y="415.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::setActions (1 samples, 0.07%)</title><rect x="77.2897%" y="389" width="0.0745%" height="15" fill="rgb(234,70,51)" fg:x="1038" fg:w="1"/><text x="77.5397%" y="399.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::setVectorNumElementAction (1 samples, 0.07%)</title><rect x="77.3641%" y="405" width="0.0745%" height="15" fill="rgb(251,86,4)" fg:x="1039" fg:w="1"/><text x="77.6141%" y="415.50"></text></g><g><title>test3`llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.3641%" y="389" width="0.0745%" height="15" fill="rgb(244,144,28)" fg:x="1039" fg:w="1"/><text x="77.6141%" y="399.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.3641%" y="373" width="0.0745%" height="15" fill="rgb(232,161,39)" fg:x="1039" fg:w="1"/><text x="77.6141%" y="383.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.3641%" y="357" width="0.0745%" height="15" fill="rgb(247,34,51)" fg:x="1039" fg:w="1"/><text x="77.6141%" y="367.50"></text></g><g><title>test3`std::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="77.4386%" y="373" width="0.0745%" height="15" fill="rgb(225,132,2)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="383.50"></text></g><g><title>test3`std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="77.4386%" y="357" width="0.0745%" height="15" fill="rgb(209,159,44)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="367.50"></text></g><g><title>test3`std::_Iterator_base12::_Iterator_base12 (1 samples, 0.07%)</title><rect x="77.4386%" y="341" width="0.0745%" height="15" fill="rgb(251,214,1)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="351.50"></text></g><g><title>test3`std::_Iterator_base12::operator= (1 samples, 0.07%)</title><rect x="77.4386%" y="325" width="0.0745%" height="15" fill="rgb(247,84,47)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="335.50"></text></g><g><title>test3`std::_Iterator_base12::_Assign_locked (1 samples, 0.07%)</title><rect x="77.4386%" y="309" width="0.0745%" height="15" fill="rgb(240,111,43)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="319.50"></text></g><g><title>msvcp140d`std::_Lockit::~_Lockit (1 samples, 0.07%)</title><rect x="77.4386%" y="293" width="0.0745%" height="15" fill="rgb(215,214,35)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="303.50"></text></g><g><title>msvcp140d`Mtxunlock (1 samples, 0.07%)</title><rect x="77.4386%" y="277" width="0.0745%" height="15" fill="rgb(248,207,23)" fg:x="1040" fg:w="1"/><text x="77.6886%" y="287.50"></text></g><g><title>test3`llvm::sort&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (2 samples, 0.15%)</title><rect x="77.4386%" y="405" width="0.1489%" height="15" fill="rgb(214,186,4)" fg:x="1040" fg:w="2"/><text x="77.6886%" y="415.50"></text></g><g><title>test3`llvm::sort&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::pair (2 samples, 0.15%)</title><rect x="77.4386%" y="389" width="0.1489%" height="15" fill="rgb(220,133,22)" fg:x="1040" fg:w="2"/><text x="77.6886%" y="399.50"></text></g><g><title>test3`std::sort&lt;std::_Vector_iterator&lt;std::_Vector_val&lt;std::_Simple_types&lt;std::pair (1 samples, 0.07%)</title><rect x="77.5130%" y="373" width="0.0745%" height="15" fill="rgb(239,134,19)" fg:x="1041" fg:w="1"/><text x="77.7630%" y="383.50"></text></g><g><title>test3`std::_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::~_Deque_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="77.5130%" y="357" width="0.0745%" height="15" fill="rgb(250,140,9)" fg:x="1041" fg:w="1"/><text x="77.7630%" y="367.50"></text></g><g><title>test3`std::_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types&lt;llvm::internal::NfaTranscriber::PathSegment * __ptr64&gt; &gt; &gt;::~_Deque_const_iterator&lt;std::_Deque_val&lt;std::_Deque_simple_types (1 samples, 0.07%)</title><rect x="77.5130%" y="341" width="0.0745%" height="15" fill="rgb(225,59,14)" fg:x="1041" fg:w="1"/><text x="77.7630%" y="351.50"></text></g><g><title>test3`std::_Iterator_base12::~_Iterator_base12 (1 samples, 0.07%)</title><rect x="77.5130%" y="325" width="0.0745%" height="15" fill="rgb(214,152,51)" fg:x="1041" fg:w="1"/><text x="77.7630%" y="335.50"></text></g><g><title>test3`std::_Iterator_base12::_Orphan_me_locked_v3 (1 samples, 0.07%)</title><rect x="77.5130%" y="309" width="0.0745%" height="15" fill="rgb(251,227,43)" fg:x="1041" fg:w="1"/><text x="77.7630%" y="319.50"></text></g><g><title>msvcp140d`std::_Lockit::~_Lockit (1 samples, 0.07%)</title><rect x="77.5130%" y="293" width="0.0745%" height="15" fill="rgb(241,96,17)" fg:x="1041" fg:w="1"/><text x="77.7630%" y="303.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::unsupportedForDifferentSizes (1 samples, 0.07%)</title><rect x="77.5875%" y="341" width="0.0745%" height="15" fill="rgb(234,198,43)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="351.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::increaseToLargerTypesAndDecreaseToLargest (1 samples, 0.07%)</title><rect x="77.5875%" y="325" width="0.0745%" height="15" fill="rgb(220,108,29)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="335.50"></text></g><g><title>test3`std::vector&lt;char,std::allocator&lt;char&gt; &gt;::vector&lt;char,std::allocator (1 samples, 0.07%)</title><rect x="77.5875%" y="309" width="0.0745%" height="15" fill="rgb(226,163,33)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="319.50"></text></g><g><title>test3`std::_Container_base12::_Alloc_proxy&lt;std::allocator (1 samples, 0.07%)</title><rect x="77.5875%" y="293" width="0.0745%" height="15" fill="rgb(205,194,45)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="303.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="77.5875%" y="277" width="0.0745%" height="15" fill="rgb(206,143,44)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="287.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="77.5875%" y="261" width="0.0745%" height="15" fill="rgb(236,136,36)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="271.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="77.5875%" y="245" width="0.0745%" height="15" fill="rgb(249,172,42)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="255.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="77.5875%" y="229" width="0.0745%" height="15" fill="rgb(216,139,23)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="239.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="77.5875%" y="213" width="0.0745%" height="15" fill="rgb(207,166,20)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="223.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="77.5875%" y="197" width="0.0745%" height="15" fill="rgb(210,209,22)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="207.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="77.5875%" y="181" width="0.0745%" height="15" fill="rgb(232,118,20)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="191.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="77.5875%" y="165" width="0.0745%" height="15" fill="rgb(238,113,42)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="175.50"></text></g><g><title>ucrtbased`memset (1 samples, 0.07%)</title><rect x="77.5875%" y="149" width="0.0745%" height="15" fill="rgb(231,42,5)" fg:x="1042" fg:w="1"/><text x="77.8375%" y="159.50"></text></g><g><title>test3`std::_Func_class&lt;std::pair&lt;unsigned int,llvm::LLT&gt;,llvm::LegalityQuery const &amp; __ptr64&gt;::operator (2 samples, 0.15%)</title><rect x="77.5875%" y="405" width="0.1489%" height="15" fill="rgb(243,166,24)" fg:x="1042" fg:w="2"/><text x="77.8375%" y="415.50"></text></g><g><title>test3`std::_Func_impl_no_alloc&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; (__cdecl*)(std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; const &amp; __ptr64),std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (2 samples, 0.15%)</title><rect x="77.5875%" y="389" width="0.1489%" height="15" fill="rgb(237,226,12)" fg:x="1042" fg:w="2"/><text x="77.8375%" y="399.50"></text></g><g><title>test3`std::_Invoker_ret&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,0&gt;::_Call&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; (__cdecl*&amp; __ptr64)(std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; const &amp; __ptr64),std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (2 samples, 0.15%)</title><rect x="77.5875%" y="373" width="0.1489%" height="15" fill="rgb(229,133,24)" fg:x="1042" fg:w="2"/><text x="77.8375%" y="383.50"></text></g><g><title>test3`std::invoke&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; (__cdecl*&amp; __ptr64)(std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; const &amp; __ptr64),std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (2 samples, 0.15%)</title><rect x="77.5875%" y="357" width="0.1489%" height="15" fill="rgb(238,33,43)" fg:x="1042" fg:w="2"/><text x="77.8375%" y="367.50"></text></g><g><title>test3`llvm::X86LegalizerInfo::setLegalizerInfoAVX512BW (1 samples, 0.07%)</title><rect x="77.6620%" y="341" width="0.0745%" height="15" fill="rgb(227,59,38)" fg:x="1043" fg:w="1"/><text x="77.9120%" y="351.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.6620%" y="325" width="0.0745%" height="15" fill="rgb(230,97,0)" fg:x="1043" fg:w="1"/><text x="77.9120%" y="335.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::emplace_back&lt;std::pair (1 samples, 0.07%)</title><rect x="77.6620%" y="309" width="0.0745%" height="15" fill="rgb(250,173,50)" fg:x="1043" fg:w="1"/><text x="77.9120%" y="319.50"></text></g><g><title>test3`std::map&lt;unsigned short,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,std::less&lt;unsigned short&gt;,std::allocator&lt;std::pair&lt;unsigned short const ,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; &gt; &gt; &gt;::~map&lt;unsigned short,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,std::less&lt;unsigned short&gt;,std::allocator&lt;std::pair&lt;unsigned short const ,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.7364%" y="405" width="0.0745%" height="15" fill="rgb(240,15,50)" fg:x="1044" fg:w="1"/><text x="77.9864%" y="415.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned short,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,std::less&lt;unsigned short&gt;,std::allocator&lt;std::pair&lt;unsigned short const ,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt; &gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;unsigned short,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,std::less&lt;unsigned short&gt;,std::allocator&lt;std::pair&lt;unsigned short const ,std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.7364%" y="389" width="0.0745%" height="15" fill="rgb(221,93,22)" fg:x="1044" fg:w="1"/><text x="77.9864%" y="399.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.8109%" y="405" width="0.0745%" height="15" fill="rgb(245,180,53)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="415.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::emplace_back&lt;std::pair (1 samples, 0.07%)</title><rect x="77.8109%" y="389" width="0.0745%" height="15" fill="rgb(231,88,51)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="399.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::_Emplace_reallocate&lt;std::pair (1 samples, 0.07%)</title><rect x="77.8109%" y="373" width="0.0745%" height="15" fill="rgb(240,58,21)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="383.50"></text></g><g><title>test3`std::allocator (1 samples, 0.07%)</title><rect x="77.8109%" y="357" width="0.0745%" height="15" fill="rgb(237,21,10)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="367.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="77.8109%" y="341" width="0.0745%" height="15" fill="rgb(218,43,11)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="351.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="77.8109%" y="325" width="0.0745%" height="15" fill="rgb(218,221,29)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="335.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="77.8109%" y="309" width="0.0745%" height="15" fill="rgb(214,118,42)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="319.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="77.8109%" y="293" width="0.0745%" height="15" fill="rgb(251,200,26)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="303.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="77.8109%" y="277" width="0.0745%" height="15" fill="rgb(237,101,39)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="287.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="77.8109%" y="261" width="0.0745%" height="15" fill="rgb(251,117,11)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="271.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="77.8109%" y="245" width="0.0745%" height="15" fill="rgb(216,223,23)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="255.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="77.8109%" y="229" width="0.0745%" height="15" fill="rgb(251,54,12)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="239.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="77.8109%" y="213" width="0.0745%" height="15" fill="rgb(254,176,54)" fg:x="1045" fg:w="1"/><text x="78.0609%" y="223.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::computeTables (9 samples, 0.67%)</title><rect x="77.2897%" y="421" width="0.6701%" height="15" fill="rgb(210,32,8)" fg:x="1038" fg:w="9"/><text x="77.5397%" y="431.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::~vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="77.8853%" y="405" width="0.0745%" height="15" fill="rgb(235,52,38)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="415.50"></text></g><g><title>test3`std::vector&lt;int,std::allocator (1 samples, 0.07%)</title><rect x="77.8853%" y="389" width="0.0745%" height="15" fill="rgb(231,4,44)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="399.50"></text></g><g><title>test3`std::allocator (1 samples, 0.07%)</title><rect x="77.8853%" y="373" width="0.0745%" height="15" fill="rgb(249,2,32)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="383.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="77.8853%" y="357" width="0.0745%" height="15" fill="rgb(224,65,26)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="367.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="77.8853%" y="341" width="0.0745%" height="15" fill="rgb(250,73,40)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="351.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="77.8853%" y="325" width="0.0745%" height="15" fill="rgb(253,177,16)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="335.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="77.8853%" y="309" width="0.0745%" height="15" fill="rgb(217,32,34)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="319.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="77.8853%" y="293" width="0.0745%" height="15" fill="rgb(212,7,10)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="303.50"></text></g><g><title>ucrtbased`CrtIsValidHeapPointer (1 samples, 0.07%)</title><rect x="77.8853%" y="277" width="0.0745%" height="15" fill="rgb(245,89,8)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="287.50"></text></g><g><title>KernelBase`HeapValidate (1 samples, 0.07%)</title><rect x="77.8853%" y="261" width="0.0745%" height="15" fill="rgb(237,16,53)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="271.50"></text></g><g><title>ntdll`RtlValidateHeap (1 samples, 0.07%)</title><rect x="77.8853%" y="245" width="0.0745%" height="15" fill="rgb(250,204,30)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="255.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="77.8853%" y="229" width="0.0745%" height="15" fill="rgb(208,77,27)" fg:x="1046" fg:w="1"/><text x="78.1353%" y="239.50"></text></g><g><title>test3`std::_Container_proxy_ptr12&lt;std::allocator&lt;std::_Container_proxy&gt; &gt;::_Container_proxy_ptr12&lt;std::allocator (1 samples, 0.07%)</title><rect x="77.9598%" y="309" width="0.0745%" height="15" fill="rgb(250,204,28)" fg:x="1047" fg:w="1"/><text x="78.2098%" y="319.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="78.0343%" y="181" width="0.0745%" height="15" fill="rgb(244,63,21)" fg:x="1048" fg:w="1"/><text x="78.2843%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="78.0343%" y="165" width="0.0745%" height="15" fill="rgb(236,85,44)" fg:x="1048" fg:w="1"/><text x="78.2843%" y="175.50"></text></g><g><title>ntdll`RtlCreateTimer (1 samples, 0.07%)</title><rect x="78.0343%" y="149" width="0.0745%" height="15" fill="rgb(215,98,4)" fg:x="1048" fg:w="1"/><text x="78.2843%" y="159.50"></text></g><g><title>test3``vector constructor iterator&apos; (3 samples, 0.22%)</title><rect x="77.9598%" y="389" width="0.2234%" height="15" fill="rgb(235,38,11)" fg:x="1047" fg:w="3"/><text x="78.2098%" y="399.50"></text></g><g><title>test3`std::unordered_map&lt;unsigned short,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt;,std::hash&lt;unsigned short&gt;,std::equal_to&lt;unsigned short&gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt; &gt; &gt; &gt;::unordered_map&lt;unsigned short,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt;,std::hash&lt;unsigned short&gt;,std::equal_to&lt;unsigned short&gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (3 samples, 0.22%)</title><rect x="77.9598%" y="373" width="0.2234%" height="15" fill="rgb(254,186,25)" fg:x="1047" fg:w="3"/><text x="78.2098%" y="383.50"></text></g><g><title>test3`std::_Hash&lt;std::_Umap_traits&lt;unsigned short,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt;,std::_Uhash_compare&lt;unsigned short,std::hash&lt;unsigned short&gt;,std::equal_to&lt;unsigned short&gt; &gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt; &gt; &gt;,0&gt; &gt;::_Hash&lt;std::_Umap_traits&lt;unsigned short,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt;,std::_Uhash_compare&lt;unsigned short,std::hash&lt;unsigned short&gt;,std::equal_to&lt;unsigned short&gt; &gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (3 samples, 0.22%)</title><rect x="77.9598%" y="357" width="0.2234%" height="15" fill="rgb(225,55,31)" fg:x="1047" fg:w="3"/><text x="78.2098%" y="367.50"></text></g><g><title>test3`std::list&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt; &gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt; &gt; &gt; &gt;::list&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt; &gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (3 samples, 0.22%)</title><rect x="77.9598%" y="341" width="0.2234%" height="15" fill="rgb(211,15,21)" fg:x="1047" fg:w="3"/><text x="78.2098%" y="351.50"></text></g><g><title>test3`std::list&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;,1&gt; &gt;,std::allocator&lt;std::pair&lt;unsigned short const ,llvm::SmallVector&lt;std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (3 samples, 0.22%)</title><rect x="77.9598%" y="325" width="0.2234%" height="15" fill="rgb(215,187,41)" fg:x="1047" fg:w="3"/><text x="78.2098%" y="335.50"></text></g><g><title>test3`std::allocator&lt;std::_Flist_node (2 samples, 0.15%)</title><rect x="78.0343%" y="309" width="0.1489%" height="15" fill="rgb(248,69,32)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="319.50"></text></g><g><title>test3`std::_Allocate (2 samples, 0.15%)</title><rect x="78.0343%" y="293" width="0.1489%" height="15" fill="rgb(252,102,52)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="303.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (2 samples, 0.15%)</title><rect x="78.0343%" y="277" width="0.1489%" height="15" fill="rgb(253,140,32)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="287.50"></text></g><g><title>test3`operator new (2 samples, 0.15%)</title><rect x="78.0343%" y="261" width="0.1489%" height="15" fill="rgb(216,56,42)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="271.50"></text></g><g><title>ucrtbased`malloc (2 samples, 0.15%)</title><rect x="78.0343%" y="245" width="0.1489%" height="15" fill="rgb(216,184,14)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="255.50"></text></g><g><title>ucrtbased`malloc_dbg (2 samples, 0.15%)</title><rect x="78.0343%" y="229" width="0.1489%" height="15" fill="rgb(237,187,27)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="239.50"></text></g><g><title>ucrtbased`calloc_base (2 samples, 0.15%)</title><rect x="78.0343%" y="213" width="0.1489%" height="15" fill="rgb(219,65,3)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="223.50"></text></g><g><title>ucrtbased`calloc_base (2 samples, 0.15%)</title><rect x="78.0343%" y="197" width="0.1489%" height="15" fill="rgb(245,83,25)" fg:x="1048" fg:w="2"/><text x="78.2843%" y="207.50"></text></g><g><title>ucrtbased`memset (1 samples, 0.07%)</title><rect x="78.1087%" y="181" width="0.0745%" height="15" fill="rgb(214,205,45)" fg:x="1049" fg:w="1"/><text x="78.3587%" y="191.50"></text></g><g><title>test3`llvm::LegalizerInfo::LegalizerInfo (4 samples, 0.30%)</title><rect x="77.9598%" y="421" width="0.2978%" height="15" fill="rgb(241,20,18)" fg:x="1047" fg:w="4"/><text x="78.2098%" y="431.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::LegacyLegalizerInfo (4 samples, 0.30%)</title><rect x="77.9598%" y="405" width="0.2978%" height="15" fill="rgb(232,163,23)" fg:x="1047" fg:w="4"/><text x="78.2098%" y="415.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="78.1832%" y="389" width="0.0745%" height="15" fill="rgb(214,5,46)" fg:x="1050" fg:w="1"/><text x="78.4332%" y="399.50"></text></g><g><title>test3`std::vector&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt;,std::allocator&lt;std::pair&lt;unsigned short,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt; &gt;::_Range_construct_or_tidy&lt;std::pair (1 samples, 0.07%)</title><rect x="78.1832%" y="373" width="0.0745%" height="15" fill="rgb(229,78,17)" fg:x="1050" fg:w="1"/><text x="78.4332%" y="383.50"></text></g><g><title>test3`llvm::X86LegalizerInfo::setLegalizerInfo32bit (1 samples, 0.07%)</title><rect x="78.2576%" y="421" width="0.0745%" height="15" fill="rgb(248,89,10)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="431.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::setAction (1 samples, 0.07%)</title><rect x="78.2576%" y="405" width="0.0745%" height="15" fill="rgb(248,54,15)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.2576%" y="389" width="0.0745%" height="15" fill="rgb(223,116,6)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.2576%" y="373" width="0.0745%" height="15" fill="rgb(205,125,38)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="78.2576%" y="357" width="0.0745%" height="15" fill="rgb(251,78,38)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="78.2576%" y="341" width="0.0745%" height="15" fill="rgb(253,78,28)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.2576%" y="325" width="0.0745%" height="15" fill="rgb(209,120,3)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="335.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.2576%" y="309" width="0.0745%" height="15" fill="rgb(238,229,9)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.2576%" y="293" width="0.0745%" height="15" fill="rgb(253,159,18)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="303.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.2576%" y="277" width="0.0745%" height="15" fill="rgb(244,42,34)" fg:x="1051" fg:w="1"/><text x="78.5076%" y="287.50"></text></g><g><title>test3`llvm::X86LegalizerInfo::setLegalizerInfo64bit (2 samples, 0.15%)</title><rect x="78.3321%" y="421" width="0.1489%" height="15" fill="rgb(224,8,7)" fg:x="1052" fg:w="2"/><text x="78.5821%" y="431.50"></text></g><g><title>test3`llvm::LegalizeRuleSet::legalForCartesianProduct (1 samples, 0.07%)</title><rect x="78.4066%" y="405" width="0.0745%" height="15" fill="rgb(210,201,45)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="415.50"></text></g><g><title>test3`llvm::LegalizeRuleSet::actionForCartesianProduct (1 samples, 0.07%)</title><rect x="78.4066%" y="389" width="0.0745%" height="15" fill="rgb(252,185,21)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="399.50"></text></g><g><title>test3`llvm::LegalityPredicates::all&lt;std::function&lt;bool __cdecl (1 samples, 0.07%)</title><rect x="78.4066%" y="373" width="0.0745%" height="15" fill="rgb(223,131,1)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="383.50"></text></g><g><title>test3`&lt;lambda_8821b80db05803f00d7489a9b87224da&gt;:: (1 samples, 0.07%)</title><rect x="78.4066%" y="357" width="0.0745%" height="15" fill="rgb(245,141,16)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="367.50"></text></g><g><title>test3`std::function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl(llvm::LegalityQuery const &amp; __ptr64)&gt;::function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl (1 samples, 0.07%)</title><rect x="78.4066%" y="341" width="0.0745%" height="15" fill="rgb(229,55,45)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="351.50"></text></g><g><title>test3`std::_Func_class (1 samples, 0.07%)</title><rect x="78.4066%" y="325" width="0.0745%" height="15" fill="rgb(208,92,15)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="335.50"></text></g><g><title>test3`llvm::LegalityPredicates::atomicOrderingAtLeastOrStrongerThan (1 samples, 0.07%)</title><rect x="78.4066%" y="309" width="0.0745%" height="15" fill="rgb(234,185,47)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="319.50"></text></g><g><title>test3`std::_Find_unchecked&lt;std::pair&lt;llvm::LLT,llvm::LLT&gt; const * __ptr64,std::pair (1 samples, 0.07%)</title><rect x="78.4066%" y="293" width="0.0745%" height="15" fill="rgb(253,104,50)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="303.50"></text></g><g><title>test3`llvm::LegalityPredicates::atomicOrderingAtLeastOrStrongerThan (1 samples, 0.07%)</title><rect x="78.4066%" y="277" width="0.0745%" height="15" fill="rgb(205,70,7)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="287.50"></text></g><g><title>test3`llvm::LegalityPredicates::atomicOrderingAtLeastOrStrongerThan (1 samples, 0.07%)</title><rect x="78.4066%" y="261" width="0.0745%" height="15" fill="rgb(240,178,43)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="271.50"></text></g><g><title>test3`llvm::SmallVector&lt;llvm::LLT,4&gt;::SmallVector (1 samples, 0.07%)</title><rect x="78.4066%" y="245" width="0.0745%" height="15" fill="rgb(214,112,2)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="255.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;int&gt;::SmallVectorImpl (1 samples, 0.07%)</title><rect x="78.4066%" y="229" width="0.0745%" height="15" fill="rgb(206,46,17)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="239.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;int,1&gt;::SmallVectorTemplateBase (1 samples, 0.07%)</title><rect x="78.4066%" y="213" width="0.0745%" height="15" fill="rgb(225,220,16)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="223.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon&lt;int,void&gt;::SmallVectorTemplateCommon (1 samples, 0.07%)</title><rect x="78.4066%" y="197" width="0.0745%" height="15" fill="rgb(238,65,40)" fg:x="1053" fg:w="1"/><text x="78.6566%" y="207.50"></text></g><g><title>test3`llvm::X86LegalizerInfo::X86LegalizerInfo (18 samples, 1.34%)</title><rect x="77.2152%" y="437" width="1.3403%" height="15" fill="rgb(230,151,21)" fg:x="1037" fg:w="18"/><text x="77.4652%" y="447.50"></text></g><g><title>test3`llvm::X86LegalizerInfo::setLegalizerInfoSSE2 (1 samples, 0.07%)</title><rect x="78.4810%" y="421" width="0.0745%" height="15" fill="rgb(218,58,49)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="431.50"></text></g><g><title>test3`llvm::LegacyLegalizerInfo::setAction (1 samples, 0.07%)</title><rect x="78.4810%" y="405" width="0.0745%" height="15" fill="rgb(219,179,14)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.4810%" y="389" width="0.0745%" height="15" fill="rgb(223,72,1)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.4810%" y="373" width="0.0745%" height="15" fill="rgb(238,126,10)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="78.4810%" y="357" width="0.0745%" height="15" fill="rgb(224,206,38)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="78.4810%" y="341" width="0.0745%" height="15" fill="rgb(212,201,54)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.4810%" y="325" width="0.0745%" height="15" fill="rgb(218,154,48)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="335.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.4810%" y="309" width="0.0745%" height="15" fill="rgb(232,93,24)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="319.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair&lt;llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction&gt; &gt;,llvm::LLT,enum llvm::LegacyLegalizeActions::LegacyLegalizeAction,llvm::DenseMapInfo&lt;llvm::LLT&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="78.4810%" y="293" width="0.0745%" height="15" fill="rgb(245,30,21)" fg:x="1054" fg:w="1"/><text x="78.7310%" y="303.50"></text></g><g><title>test3`llvm::X86Subtarget::initializeSubtargetDependencies (1 samples, 0.07%)</title><rect x="78.5555%" y="437" width="0.0745%" height="15" fill="rgb(242,148,29)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="447.50"></text></g><g><title>test3`llvm::X86Subtarget::initSubtargetFeatures (1 samples, 0.07%)</title><rect x="78.5555%" y="421" width="0.0745%" height="15" fill="rgb(244,153,54)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="431.50"></text></g><g><title>test3`llvm::X86Subtarget::ParseSubtargetFeatures (1 samples, 0.07%)</title><rect x="78.5555%" y="405" width="0.0745%" height="15" fill="rgb(252,87,22)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="415.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::InitMCProcessorInfo (1 samples, 0.07%)</title><rect x="78.5555%" y="389" width="0.0745%" height="15" fill="rgb(210,51,29)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="399.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::getMinPrefetchStride (1 samples, 0.07%)</title><rect x="78.5555%" y="373" width="0.0745%" height="15" fill="rgb(242,136,47)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="383.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::getMinPrefetchStride (1 samples, 0.07%)</title><rect x="78.5555%" y="357" width="0.0745%" height="15" fill="rgb(238,68,4)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="367.50"></text></g><g><title>test3`llvm::lower_bound&lt;llvm::ArrayRef (1 samples, 0.07%)</title><rect x="78.5555%" y="341" width="0.0745%" height="15" fill="rgb(242,161,30)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="351.50"></text></g><g><title>test3`std::lower_bound (1 samples, 0.07%)</title><rect x="78.5555%" y="325" width="0.0745%" height="15" fill="rgb(218,58,44)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="335.50"></text></g><g><title>test3`std::lower_bound&lt;llvm::SubtargetSubTypeKV const * __ptr64,llvm::StringRef,std::less (1 samples, 0.07%)</title><rect x="78.5555%" y="309" width="0.0745%" height="15" fill="rgb(252,125,32)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="319.50"></text></g><g><title>test3`std::less&lt;void&gt;::operator() (1 samples, 0.07%)</title><rect x="78.5555%" y="293" width="0.0745%" height="15" fill="rgb(219,178,0)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="303.50"></text></g><g><title>test3`llvm::SubtargetFeatureKV::operator (1 samples, 0.07%)</title><rect x="78.5555%" y="277" width="0.0745%" height="15" fill="rgb(213,152,7)" fg:x="1055" fg:w="1"/><text x="78.8055%" y="287.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="78.6299%" y="421" width="0.0745%" height="15" fill="rgb(249,109,34)" fg:x="1056" fg:w="1"/><text x="78.8799%" y="431.50"></text></g><g><title>test3`llvm::TargetLoweringBase::setIndexedStoreAction (1 samples, 0.07%)</title><rect x="78.7044%" y="373" width="0.0745%" height="15" fill="rgb(232,96,21)" fg:x="1057" fg:w="1"/><text x="78.9544%" y="383.50"></text></g><g><title>test3`llvm::TargetLoweringBase::setIndexedModeAction (1 samples, 0.07%)</title><rect x="78.7044%" y="357" width="0.0745%" height="15" fill="rgb(228,27,39)" fg:x="1057" fg:w="1"/><text x="78.9544%" y="367.50"></text></g><g><title>test3`llvm::TargetLowering::TargetLowering (2 samples, 0.15%)</title><rect x="78.7044%" y="421" width="0.1489%" height="15" fill="rgb(211,182,52)" fg:x="1057" fg:w="2"/><text x="78.9544%" y="431.50"></text></g><g><title>test3`llvm::TargetLoweringBase::TargetLoweringBase (2 samples, 0.15%)</title><rect x="78.7044%" y="405" width="0.1489%" height="15" fill="rgb(234,178,38)" fg:x="1057" fg:w="2"/><text x="78.9544%" y="415.50"></text></g><g><title>test3`llvm::TargetLoweringBase::initActions (2 samples, 0.15%)</title><rect x="78.7044%" y="389" width="0.1489%" height="15" fill="rgb(221,111,3)" fg:x="1057" fg:w="2"/><text x="78.9544%" y="399.50"></text></g><g><title>test3`llvm::detail::SafeIntIterator (1 samples, 0.07%)</title><rect x="78.7789%" y="373" width="0.0745%" height="15" fill="rgb(228,175,21)" fg:x="1058" fg:w="1"/><text x="79.0289%" y="383.50"></text></g><g><title>test3`llvm::detail::CheckedInt::to (1 samples, 0.07%)</title><rect x="78.7789%" y="357" width="0.0745%" height="15" fill="rgb(228,174,43)" fg:x="1058" fg:w="1"/><text x="79.0289%" y="367.50"></text></g><g><title>test3`llvm::detail::CheckedInt::to (1 samples, 0.07%)</title><rect x="78.7789%" y="341" width="0.0745%" height="15" fill="rgb(211,191,0)" fg:x="1058" fg:w="1"/><text x="79.0289%" y="351.50"></text></g><g><title>test3`llvm::GetReturnInfo (1 samples, 0.07%)</title><rect x="78.8533%" y="405" width="0.0745%" height="15" fill="rgb(253,117,3)" fg:x="1059" fg:w="1"/><text x="79.1033%" y="415.50"></text></g><g><title>test3`llvm::MVT::getFixedSizeInBits (1 samples, 0.07%)</title><rect x="78.9278%" y="405" width="0.0745%" height="15" fill="rgb(241,127,19)" fg:x="1060" fg:w="1"/><text x="79.1778%" y="415.50"></text></g><g><title>test3`llvm::MVT::getSizeInBits (1 samples, 0.07%)</title><rect x="78.9278%" y="389" width="0.0745%" height="15" fill="rgb(218,103,12)" fg:x="1060" fg:w="1"/><text x="79.1778%" y="399.50"></text></g><g><title>test3`llvm::TypeSize::Fixed (1 samples, 0.07%)</title><rect x="78.9278%" y="373" width="0.0745%" height="15" fill="rgb(236,214,43)" fg:x="1060" fg:w="1"/><text x="79.1778%" y="383.50"></text></g><g><title>test3`llvm::TypeSize::TypeSize (1 samples, 0.07%)</title><rect x="78.9278%" y="357" width="0.0745%" height="15" fill="rgb(244,144,19)" fg:x="1060" fg:w="1"/><text x="79.1778%" y="367.50"></text></g><g><title>test3`llvm::LinearPolySize (1 samples, 0.07%)</title><rect x="78.9278%" y="341" width="0.0745%" height="15" fill="rgb(246,188,10)" fg:x="1060" fg:w="1"/><text x="79.1778%" y="351.50"></text></g><g><title>test3`llvm::makeArrayRef (1 samples, 0.07%)</title><rect x="78.9278%" y="325" width="0.0745%" height="15" fill="rgb(212,193,33)" fg:x="1060" fg:w="1"/><text x="79.1778%" y="335.50"></text></g><g><title>test3`llvm::TargetLoweringBase::computeRegisterProperties (3 samples, 0.22%)</title><rect x="78.8533%" y="421" width="0.2234%" height="15" fill="rgb(241,51,29)" fg:x="1059" fg:w="3"/><text x="79.1033%" y="431.50"></text></g><g><title>test3`llvm::X86TargetLowering::findRepresentativeClass (1 samples, 0.07%)</title><rect x="79.0022%" y="405" width="0.0745%" height="15" fill="rgb(211,58,19)" fg:x="1061" fg:w="1"/><text x="79.2522%" y="415.50"></text></g><g><title>test3`llvm::TargetLoweringBase::findRepresentativeClass (1 samples, 0.07%)</title><rect x="79.0022%" y="389" width="0.0745%" height="15" fill="rgb(229,111,26)" fg:x="1061" fg:w="1"/><text x="79.2522%" y="399.50"></text></g><g><title>test3`llvm::TargetRegisterInfo::getRegClass (1 samples, 0.07%)</title><rect x="79.0022%" y="373" width="0.0745%" height="15" fill="rgb(213,115,40)" fg:x="1061" fg:w="1"/><text x="79.2522%" y="383.50"></text></g><g><title>test3`llvm::TargetLoweringBase::setLoadExtAction (1 samples, 0.07%)</title><rect x="79.0767%" y="421" width="0.0745%" height="15" fill="rgb(209,56,44)" fg:x="1062" fg:w="1"/><text x="79.3267%" y="431.50"></text></g><g><title>test3`llvm::TargetLoweringBase::setTruncStoreAction (1 samples, 0.07%)</title><rect x="79.1512%" y="421" width="0.0745%" height="15" fill="rgb(230,108,32)" fg:x="1063" fg:w="1"/><text x="79.4012%" y="431.50"></text></g><g><title>test3`llvm::MVT::isValid (1 samples, 0.07%)</title><rect x="79.1512%" y="405" width="0.0745%" height="15" fill="rgb(216,165,31)" fg:x="1063" fg:w="1"/><text x="79.4012%" y="415.50"></text></g><g><title>test3`llvm::X86Subtarget::hasBMI (1 samples, 0.07%)</title><rect x="79.2256%" y="421" width="0.0745%" height="15" fill="rgb(218,122,21)" fg:x="1064" fg:w="1"/><text x="79.4756%" y="431.50"></text></g><g><title>test3`llvm::X86Subtarget::is32Bit (1 samples, 0.07%)</title><rect x="79.3001%" y="421" width="0.0745%" height="15" fill="rgb(223,224,47)" fg:x="1065" fg:w="1"/><text x="79.5501%" y="431.50"></text></g><g><title>test3`llvm::detail::CheckedInt::to (1 samples, 0.07%)</title><rect x="79.4490%" y="405" width="0.0745%" height="15" fill="rgb(238,102,44)" fg:x="1067" fg:w="1"/><text x="79.6990%" y="415.50"></text></g><g><title>test3`llvm::detail::CheckedInt::to (1 samples, 0.07%)</title><rect x="79.4490%" y="389" width="0.0745%" height="15" fill="rgb(236,46,40)" fg:x="1067" fg:w="1"/><text x="79.6990%" y="399.50"></text></g><g><title>test3`llvm::detail::canTypeFitValue (1 samples, 0.07%)</title><rect x="79.4490%" y="373" width="0.0745%" height="15" fill="rgb(247,202,50)" fg:x="1067" fg:w="1"/><text x="79.6990%" y="383.50"></text></g><g><title>test3`llvm::detail::PassModel&lt;llvm::Function,llvm::InvalidateAnalysisPass&lt;llvm::AAManager&gt;,llvm::PreservedAnalyses,llvm::AnalysisManager&lt;llvm::Function&gt; &gt;::passIsRequiredImpl&lt;llvm::InvalidateAnalysisPass (1 samples, 0.07%)</title><rect x="79.4490%" y="357" width="0.0745%" height="15" fill="rgb(209,99,20)" fg:x="1067" fg:w="1"/><text x="79.6990%" y="367.50"></text></g><g><title>test3`llvm::X86TargetLowering::X86TargetLowering (14 samples, 1.04%)</title><rect x="78.6299%" y="437" width="1.0424%" height="15" fill="rgb(252,27,34)" fg:x="1056" fg:w="14"/><text x="78.8799%" y="447.50"></text></g><g><title>test3`llvm::detail::SafeIntIterator (4 samples, 0.30%)</title><rect x="79.3745%" y="421" width="0.2978%" height="15" fill="rgb(215,206,23)" fg:x="1066" fg:w="4"/><text x="79.6245%" y="431.50"></text></g><g><title>test3`llvm::detail::SafeIntIterator (2 samples, 0.15%)</title><rect x="79.5235%" y="405" width="0.1489%" height="15" fill="rgb(212,135,36)" fg:x="1068" fg:w="2"/><text x="79.7735%" y="415.50"></text></g><g><title>test3`llvm::detail::CheckedInt::operator+ (2 samples, 0.15%)</title><rect x="79.5235%" y="389" width="0.1489%" height="15" fill="rgb(240,189,1)" fg:x="1068" fg:w="2"/><text x="79.7735%" y="399.50"></text></g><g><title>test3`_RTC_CheckStackVars (2 samples, 0.15%)</title><rect x="79.5235%" y="373" width="0.1489%" height="15" fill="rgb(242,56,20)" fg:x="1068" fg:w="2"/><text x="79.7735%" y="383.50"></text></g><g><title>test3`llvm::initializeAtomicExpandPass (37 samples, 2.76%)</title><rect x="76.9918%" y="501" width="2.7550%" height="15" fill="rgb(247,132,33)" fg:x="1034" fg:w="37"/><text x="77.2418%" y="511.50">te..</text></g><g><title>test3`llvm::X86TargetMachine::getSubtargetImpl (37 samples, 2.76%)</title><rect x="76.9918%" y="485" width="2.7550%" height="15" fill="rgb(208,149,11)" fg:x="1034" fg:w="37"/><text x="77.2418%" y="495.50">te..</text></g><g><title>test3`std::make_unique (37 samples, 2.76%)</title><rect x="76.9918%" y="469" width="2.7550%" height="15" fill="rgb(211,33,11)" fg:x="1034" fg:w="37"/><text x="77.2418%" y="479.50">te..</text></g><g><title>test3`llvm::X86Subtarget::X86Subtarget (37 samples, 2.76%)</title><rect x="76.9918%" y="453" width="2.7550%" height="15" fill="rgb(221,29,38)" fg:x="1034" fg:w="37"/><text x="77.2418%" y="463.50">te..</text></g><g><title>test3`llvm::createX86InstructionSelector (1 samples, 0.07%)</title><rect x="79.6724%" y="437" width="0.0745%" height="15" fill="rgb(206,182,49)" fg:x="1070" fg:w="1"/><text x="79.9224%" y="447.50"></text></g><g><title>test3`llvm::createX86InstructionSelector (1 samples, 0.07%)</title><rect x="79.6724%" y="421" width="0.0745%" height="15" fill="rgb(216,140,1)" fg:x="1070" fg:w="1"/><text x="79.9224%" y="431.50"></text></g><g><title>test3`llvm::InstructionSelector::MatcherState::MatcherState (1 samples, 0.07%)</title><rect x="79.6724%" y="405" width="0.0745%" height="15" fill="rgb(232,57,40)" fg:x="1070" fg:w="1"/><text x="79.9224%" y="415.50"></text></g><g><title>test3`std::vector&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl(llvm::MachineInstrBuilder &amp; __ptr64)&gt;,4&gt;,std::allocator&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl(llvm::MachineInstrBuilder &amp; __ptr64)&gt;,4&gt; &gt; &gt;::vector&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl(llvm::MachineInstrBuilder &amp; __ptr64)&gt;,4&gt;,std::allocator&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl (1 samples, 0.07%)</title><rect x="79.6724%" y="389" width="0.0745%" height="15" fill="rgb(224,186,18)" fg:x="1070" fg:w="1"/><text x="79.9224%" y="399.50"></text></g><g><title>test3`std::vector&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl(llvm::MachineInstrBuilder &amp; __ptr64)&gt;,4&gt;,std::allocator&lt;llvm::SmallVector&lt;std::function&lt;void __cdecl(llvm::MachineInstrBuilder &amp; __ptr64)&gt;,4&gt; &gt; &gt;::_Construct_n_copies_of_ty (1 samples, 0.07%)</title><rect x="79.6724%" y="373" width="0.0745%" height="15" fill="rgb(215,121,11)" fg:x="1070" fg:w="1"/><text x="79.9224%" y="383.50"></text></g><g><title>test3`llvm::initializeDwarfEHPrepareLegacyPassPass (1 samples, 0.07%)</title><rect x="79.7468%" y="501" width="0.0745%" height="15" fill="rgb(245,147,10)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="511.50"></text></g><g><title>test3`llvm::initializeDwarfEHPrepareLegacyPassPass (1 samples, 0.07%)</title><rect x="79.7468%" y="485" width="0.0745%" height="15" fill="rgb(238,153,13)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="495.50"></text></g><g><title>test3`llvm::initializeDwarfEHPrepareLegacyPassPass (1 samples, 0.07%)</title><rect x="79.7468%" y="469" width="0.0745%" height="15" fill="rgb(233,108,0)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="479.50"></text></g><g><title>test3`llvm::initializeDwarfEHPrepareLegacyPassPass (1 samples, 0.07%)</title><rect x="79.7468%" y="453" width="0.0745%" height="15" fill="rgb(212,157,17)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="463.50"></text></g><g><title>test3`llvm::BasicBlock::getLandingPadInst (1 samples, 0.07%)</title><rect x="79.7468%" y="437" width="0.0745%" height="15" fill="rgb(225,213,38)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="447.50"></text></g><g><title>test3`llvm::BasicBlock::getLandingPadInst (1 samples, 0.07%)</title><rect x="79.7468%" y="421" width="0.0745%" height="15" fill="rgb(248,16,11)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="431.50"></text></g><g><title>test3`llvm::BasicBlock::getFirstNonPHI (1 samples, 0.07%)</title><rect x="79.7468%" y="405" width="0.0745%" height="15" fill="rgb(241,33,4)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="415.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="79.7468%" y="389" width="0.0745%" height="15" fill="rgb(222,26,43)" fg:x="1071" fg:w="1"/><text x="79.9968%" y="399.50"></text></g><g><title>test3`llvm::initializeExpandReductionsPass (1 samples, 0.07%)</title><rect x="79.8213%" y="501" width="0.0745%" height="15" fill="rgb(243,29,36)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="511.50"></text></g><g><title>test3`llvm::initializeExpandReductionsPass (1 samples, 0.07%)</title><rect x="79.8213%" y="485" width="0.0745%" height="15" fill="rgb(241,9,27)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="495.50"></text></g><g><title>test3`llvm::dyn_cast (1 samples, 0.07%)</title><rect x="79.8213%" y="469" width="0.0745%" height="15" fill="rgb(205,117,26)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="479.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="79.8213%" y="453" width="0.0745%" height="15" fill="rgb(209,80,39)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="463.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="79.8213%" y="437" width="0.0745%" height="15" fill="rgb(239,155,6)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="447.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="79.8213%" y="421" width="0.0745%" height="15" fill="rgb(212,104,12)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="431.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="79.8213%" y="405" width="0.0745%" height="15" fill="rgb(234,204,3)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="415.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="79.8213%" y="389" width="0.0745%" height="15" fill="rgb(251,218,7)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="399.50"></text></g><g><title>test3`llvm::IntrinsicInst::classof (1 samples, 0.07%)</title><rect x="79.8213%" y="373" width="0.0745%" height="15" fill="rgb(221,81,32)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="383.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="79.8213%" y="357" width="0.0745%" height="15" fill="rgb(214,152,26)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="367.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="79.8213%" y="341" width="0.0745%" height="15" fill="rgb(223,22,3)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="351.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="79.8213%" y="325" width="0.0745%" height="15" fill="rgb(207,174,7)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="335.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="79.8213%" y="309" width="0.0745%" height="15" fill="rgb(224,19,52)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="319.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="79.8213%" y="293" width="0.0745%" height="15" fill="rgb(228,24,14)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="303.50"></text></g><g><title>test3`llvm::CallInst::classof (1 samples, 0.07%)</title><rect x="79.8213%" y="277" width="0.0745%" height="15" fill="rgb(230,153,43)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="287.50"></text></g><g><title>test3`llvm::cast (1 samples, 0.07%)</title><rect x="79.8213%" y="261" width="0.0745%" height="15" fill="rgb(231,106,12)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="271.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="79.8213%" y="245" width="0.0745%" height="15" fill="rgb(215,92,2)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="255.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="79.8213%" y="229" width="0.0745%" height="15" fill="rgb(249,143,25)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="239.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="79.8213%" y="213" width="0.0745%" height="15" fill="rgb(252,7,35)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="223.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="79.8213%" y="197" width="0.0745%" height="15" fill="rgb(216,69,40)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="207.50"></text></g><g><title>test3`llvm::Instruction::classof (1 samples, 0.07%)</title><rect x="79.8213%" y="181" width="0.0745%" height="15" fill="rgb(240,36,33)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="191.50"></text></g><g><title>test3`llvm::MCAsmParserExtension::HasBracketExpressions (1 samples, 0.07%)</title><rect x="79.8213%" y="165" width="0.0745%" height="15" fill="rgb(231,128,14)" fg:x="1072" fg:w="1"/><text x="80.0713%" y="175.50"></text></g><g><title>test3`llvm::initializeUnreachableMachineBlockElimPass (1 samples, 0.07%)</title><rect x="79.8958%" y="501" width="0.0745%" height="15" fill="rgb(245,143,14)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="511.50"></text></g><g><title>test3`llvm::EliminateUnreachableBlocks (1 samples, 0.07%)</title><rect x="79.8958%" y="485" width="0.0745%" height="15" fill="rgb(222,130,28)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="495.50"></text></g><g><title>test3`llvm::depth_first_ext&lt;llvm::Function * __ptr64,llvm::df_iterator_default_set (1 samples, 0.07%)</title><rect x="79.8958%" y="469" width="0.0745%" height="15" fill="rgb(212,10,48)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="479.50"></text></g><g><title>test3`llvm::df_ext_begin&lt;llvm::Function * __ptr64,llvm::df_iterator_default_set (1 samples, 0.07%)</title><rect x="79.8958%" y="453" width="0.0745%" height="15" fill="rgb(254,118,45)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="463.50"></text></g><g><title>test3`llvm::df_iterator&lt;llvm::Function * __ptr64,llvm::df_iterator_default_set&lt;llvm::BasicBlock * __ptr64,8&gt;,1,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="79.8958%" y="437" width="0.0745%" height="15" fill="rgb(228,6,45)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="447.50"></text></g><g><title>test3`llvm::df_iterator&lt;llvm::Function * __ptr64,llvm::df_iterator_default_set&lt;llvm::BasicBlock * __ptr64,8&gt;,1,llvm::GraphTraits&lt;llvm::Function * __ptr64&gt; &gt;::df_iterator&lt;llvm::Function * __ptr64,llvm::df_iterator_default_set&lt;llvm::BasicBlock * __ptr64,8&gt;,1,llvm::GraphTraits (1 samples, 0.07%)</title><rect x="79.8958%" y="421" width="0.0745%" height="15" fill="rgb(241,18,35)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="431.50"></text></g><g><title>test3`std::pair&lt;llvm::BasicBlock * __ptr64,llvm::Optional&lt;llvm::SuccIterator&lt;llvm::Instruction,llvm::BasicBlock&gt; &gt; &gt;::pair&lt;llvm::BasicBlock * __ptr64,llvm::Optional&lt;llvm::SuccIterator&lt;llvm::Instruction,llvm::BasicBlock&gt; &gt; &gt; (1 samples, 0.07%)</title><rect x="79.8958%" y="405" width="0.0745%" height="15" fill="rgb(227,214,53)" fg:x="1073" fg:w="1"/><text x="80.1458%" y="415.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;,llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="79.9702%" y="389" width="0.0745%" height="15" fill="rgb(224,107,51)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="399.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;,llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="79.9702%" y="373" width="0.0745%" height="15" fill="rgb(248,60,28)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="383.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;,llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="79.9702%" y="357" width="0.0745%" height="15" fill="rgb(249,101,23)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="367.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;,llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="79.9702%" y="341" width="0.0745%" height="15" fill="rgb(228,51,19)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="351.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec&gt; &gt;,llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="79.9702%" y="325" width="0.0745%" height="15" fill="rgb(213,20,6)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="335.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::InfoRec,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="79.9702%" y="309" width="0.0745%" height="15" fill="rgb(212,124,10)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="319.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,std::pair&lt;llvm::SetVector&lt;llvm::BasicBlock * __ptr64,std::vector&lt;llvm::BasicBlock * __ptr64,std::allocator&lt;llvm::BasicBlock * __ptr64&gt; &gt;,llvm::DenseSet&lt;llvm::BasicBlock * __ptr64,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt; &gt; &gt;,llvm::BlockFrequency&gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::pair&lt;llvm::SetVector&lt;llvm::BasicBlock * __ptr64,std::vector&lt;llvm::BasicBlock * __ptr64,std::allocator&lt;llvm::BasicBlock * __ptr64&gt; &gt;,llvm::DenseSet&lt;llvm::BasicBlock * __ptr64,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="79.9702%" y="293" width="0.0745%" height="15" fill="rgb(248,3,40)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="303.50"></text></g><g><title>test3`llvm::allocate_buffer (1 samples, 0.07%)</title><rect x="79.9702%" y="277" width="0.0745%" height="15" fill="rgb(223,178,23)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="287.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="79.9702%" y="261" width="0.0745%" height="15" fill="rgb(240,132,45)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="271.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="79.9702%" y="245" width="0.0745%" height="15" fill="rgb(245,164,36)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="255.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="79.9702%" y="229" width="0.0745%" height="15" fill="rgb(231,188,53)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="239.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="79.9702%" y="213" width="0.0745%" height="15" fill="rgb(237,198,39)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="223.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="79.9702%" y="197" width="0.0745%" height="15" fill="rgb(223,120,35)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="207.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="79.9702%" y="181" width="0.0745%" height="15" fill="rgb(253,107,49)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="191.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="79.9702%" y="165" width="0.0745%" height="15" fill="rgb(216,44,31)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="175.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="79.9702%" y="149" width="0.0745%" height="15" fill="rgb(253,87,21)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="159.50"></text></g><g><title>ntdll`RtlProtectHeap (1 samples, 0.07%)</title><rect x="79.9702%" y="133" width="0.0745%" height="15" fill="rgb(226,18,2)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="143.50"></text></g><g><title>ntdll`NtAllocateVirtualMemory (1 samples, 0.07%)</title><rect x="79.9702%" y="117" width="0.0745%" height="15" fill="rgb(216,8,46)" fg:x="1074" fg:w="1"/><text x="80.2202%" y="127.50"></text></g><g><title>test3`llvm::DominatorTreeBase (3 samples, 0.22%)</title><rect x="79.9702%" y="469" width="0.2234%" height="15" fill="rgb(226,140,39)" fg:x="1074" fg:w="3"/><text x="80.2202%" y="479.50"></text></g><g><title>test3`llvm::DomTreeBuilder::Calculate&lt;llvm::DominatorTreeBase (3 samples, 0.22%)</title><rect x="79.9702%" y="453" width="0.2234%" height="15" fill="rgb(221,194,54)" fg:x="1074" fg:w="3"/><text x="80.2202%" y="463.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase (3 samples, 0.22%)</title><rect x="79.9702%" y="437" width="0.2234%" height="15" fill="rgb(213,92,11)" fg:x="1074" fg:w="3"/><text x="80.2202%" y="447.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::doFullDFSWalk&lt;bool (__cdecl*) (3 samples, 0.22%)</title><rect x="79.9702%" y="421" width="0.2234%" height="15" fill="rgb(229,162,46)" fg:x="1074" fg:w="3"/><text x="80.2202%" y="431.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::runDFS&lt;0,bool (__cdecl*) (3 samples, 0.22%)</title><rect x="79.9702%" y="405" width="0.2234%" height="15" fill="rgb(214,111,36)" fg:x="1074" fg:w="3"/><text x="80.2202%" y="415.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::getChildren (2 samples, 0.15%)</title><rect x="80.0447%" y="389" width="0.1489%" height="15" fill="rgb(207,6,21)" fg:x="1075" fg:w="2"/><text x="80.2947%" y="399.50"></text></g><g><title>test3`llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock,0&gt; &gt;::getChildren (2 samples, 0.15%)</title><rect x="80.0447%" y="373" width="0.1489%" height="15" fill="rgb(213,127,38)" fg:x="1075" fg:w="2"/><text x="80.2947%" y="383.50"></text></g><g><title>test3`llvm::SmallVector&lt;llvm::BasicBlock * __ptr64,8&gt;::SmallVector&lt;llvm::BasicBlock * __ptr64,8&gt;&lt;std::reverse_iterator&lt;llvm::SuccIterator (2 samples, 0.15%)</title><rect x="80.0447%" y="357" width="0.1489%" height="15" fill="rgb(238,118,32)" fg:x="1075" fg:w="2"/><text x="80.2947%" y="367.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;llvm::BasicBlock * __ptr64&gt;::append&lt;std::reverse_iterator&lt;llvm::SuccIterator (2 samples, 0.15%)</title><rect x="80.0447%" y="341" width="0.1489%" height="15" fill="rgb(240,139,39)" fg:x="1075" fg:w="2"/><text x="80.2947%" y="351.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;llvm::BasicBlock * __ptr64,1&gt;::uninitialized_copy&lt;std::reverse_iterator&lt;llvm::SuccIterator (2 samples, 0.15%)</title><rect x="80.0447%" y="325" width="0.1489%" height="15" fill="rgb(235,10,37)" fg:x="1075" fg:w="2"/><text x="80.2947%" y="335.50"></text></g><g><title>test3`std::uninitialized_copy&lt;std::reverse_iterator&lt;llvm::SuccIterator (1 samples, 0.07%)</title><rect x="80.1191%" y="309" width="0.0745%" height="15" fill="rgb(249,171,38)" fg:x="1076" fg:w="1"/><text x="80.3691%" y="319.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (1 samples, 0.07%)</title><rect x="80.1936%" y="453" width="0.0745%" height="15" fill="rgb(242,144,32)" fg:x="1077" fg:w="1"/><text x="80.4436%" y="463.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (1 samples, 0.07%)</title><rect x="80.1936%" y="437" width="0.0745%" height="15" fill="rgb(217,117,21)" fg:x="1077" fg:w="1"/><text x="80.4436%" y="447.50"></text></g><g><title>test3`llvm::dyn_cast (2 samples, 0.15%)</title><rect x="80.4170%" y="325" width="0.1489%" height="15" fill="rgb(249,87,1)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="335.50"></text></g><g><title>test3`llvm::isa (2 samples, 0.15%)</title><rect x="80.4170%" y="309" width="0.1489%" height="15" fill="rgb(248,196,48)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="319.50"></text></g><g><title>test3`llvm::isa_impl_wrap (2 samples, 0.15%)</title><rect x="80.4170%" y="293" width="0.1489%" height="15" fill="rgb(251,206,33)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="303.50"></text></g><g><title>test3`llvm::isa_impl_wrap (2 samples, 0.15%)</title><rect x="80.4170%" y="277" width="0.1489%" height="15" fill="rgb(232,141,28)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="287.50"></text></g><g><title>test3`llvm::isa_impl_cl (2 samples, 0.15%)</title><rect x="80.4170%" y="261" width="0.1489%" height="15" fill="rgb(209,167,14)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="271.50"></text></g><g><title>test3`llvm::isa_impl (2 samples, 0.15%)</title><rect x="80.4170%" y="245" width="0.1489%" height="15" fill="rgb(225,11,50)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="255.50"></text></g><g><title>test3`llvm::DbgVariableIntrinsic::classof (2 samples, 0.15%)</title><rect x="80.4170%" y="229" width="0.1489%" height="15" fill="rgb(209,50,20)" fg:x="1080" fg:w="2"/><text x="80.6670%" y="239.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="80.4914%" y="213" width="0.0745%" height="15" fill="rgb(212,17,46)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="223.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="80.4914%" y="197" width="0.0745%" height="15" fill="rgb(216,101,39)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="207.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="80.4914%" y="181" width="0.0745%" height="15" fill="rgb(212,228,48)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="191.50"></text></g><g><title>test3`llvm::isa_impl_cl (1 samples, 0.07%)</title><rect x="80.4914%" y="165" width="0.0745%" height="15" fill="rgb(250,6,50)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="175.50"></text></g><g><title>test3`llvm::isa_impl (1 samples, 0.07%)</title><rect x="80.4914%" y="149" width="0.0745%" height="15" fill="rgb(250,160,48)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="159.50"></text></g><g><title>test3`llvm::IntrinsicInst::classof (1 samples, 0.07%)</title><rect x="80.4914%" y="133" width="0.0745%" height="15" fill="rgb(244,216,33)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="143.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="80.4914%" y="117" width="0.0745%" height="15" fill="rgb(207,157,5)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="127.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="80.4914%" y="101" width="0.0745%" height="15" fill="rgb(228,199,8)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="111.50"></text></g><g><title>test3`llvm::isa_impl_wrap (1 samples, 0.07%)</title><rect x="80.4914%" y="85" width="0.0745%" height="15" fill="rgb(227,80,20)" fg:x="1081" fg:w="1"/><text x="80.7414%" y="95.50"></text></g><g><title>test3`llvm::DominatorTree::dominates (1 samples, 0.07%)</title><rect x="80.6404%" y="309" width="0.0745%" height="15" fill="rgb(222,9,33)" fg:x="1083" fg:w="1"/><text x="80.8904%" y="319.50"></text></g><g><title>test3`llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="80.6404%" y="293" width="0.0745%" height="15" fill="rgb(239,44,28)" fg:x="1083" fg:w="1"/><text x="80.8904%" y="303.50"></text></g><g><title>test3`llvm::DominatorTreeBase (1 samples, 0.07%)</title><rect x="80.6404%" y="277" width="0.0745%" height="15" fill="rgb(249,187,43)" fg:x="1083" fg:w="1"/><text x="80.8904%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;,llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;,std::default_delete&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="80.6404%" y="261" width="0.0745%" height="15" fill="rgb(216,141,28)" fg:x="1083" fg:w="1"/><text x="80.8904%" y="271.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::BasicBlock * __ptr64,unsigned int&gt; &gt;,llvm::BasicBlock * __ptr64,unsigned int,llvm::DenseMapInfo&lt;llvm::BasicBlock * __ptr64&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="80.6404%" y="245" width="0.0745%" height="15" fill="rgb(230,154,53)" fg:x="1083" fg:w="1"/><text x="80.8904%" y="255.50"></text></g><g><title>test3`llvm::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt; &gt;,1&gt;::DenseMapIterator&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::DenseMapInfo&lt;llvm::AnalysisKey * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AnalysisKey * __ptr64,llvm::TinyPtrVector (1 samples, 0.07%)</title><rect x="80.6404%" y="229" width="0.0745%" height="15" fill="rgb(227,82,4)" fg:x="1083" fg:w="1"/><text x="80.8904%" y="239.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="80.7148%" y="309" width="0.0745%" height="15" fill="rgb(220,107,16)" fg:x="1084" fg:w="1"/><text x="80.9648%" y="319.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::find_imp (1 samples, 0.07%)</title><rect x="80.7148%" y="293" width="0.0745%" height="15" fill="rgb(207,187,2)" fg:x="1084" fg:w="1"/><text x="80.9648%" y="303.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::FindBucketFor (1 samples, 0.07%)</title><rect x="80.7148%" y="277" width="0.0745%" height="15" fill="rgb(210,162,52)" fg:x="1084" fg:w="1"/><text x="80.9648%" y="287.50"></text></g><g><title>test3`llvm::Value::stripPointerCasts (1 samples, 0.07%)</title><rect x="80.7893%" y="309" width="0.0745%" height="15" fill="rgb(217,216,49)" fg:x="1085" fg:w="1"/><text x="81.0393%" y="319.50"></text></g><g><title>test3`llvm::Value::stripPointerCasts (1 samples, 0.07%)</title><rect x="80.7893%" y="293" width="0.0745%" height="15" fill="rgb(218,146,49)" fg:x="1085" fg:w="1"/><text x="81.0393%" y="303.50"></text></g><g><title>test3`llvm::CallbackVH::anchor (1 samples, 0.07%)</title><rect x="80.7893%" y="277" width="0.0745%" height="15" fill="rgb(216,55,40)" fg:x="1085" fg:w="1"/><text x="81.0393%" y="287.50"></text></g><g><title>test3`llvm::FPPassManager::runOnModule (279 samples, 20.77%)</title><rect x="60.1638%" y="533" width="20.7744%" height="15" fill="rgb(208,196,21)" fg:x="808" fg:w="279"/><text x="60.4138%" y="543.50">test3`llvm::FPPassManager::runOnM..</text></g><g><title>test3`llvm::FPPassManager::runOnFunction (279 samples, 20.77%)</title><rect x="60.1638%" y="517" width="20.7744%" height="15" fill="rgb(242,117,42)" fg:x="808" fg:w="279"/><text x="60.4138%" y="527.50">test3`llvm::FPPassManager::runOnF..</text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (13 samples, 0.97%)</title><rect x="79.9702%" y="501" width="0.9680%" height="15" fill="rgb(210,11,23)" fg:x="1074" fg:w="13"/><text x="80.2202%" y="511.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (13 samples, 0.97%)</title><rect x="79.9702%" y="485" width="0.9680%" height="15" fill="rgb(217,110,2)" fg:x="1074" fg:w="13"/><text x="80.2202%" y="495.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (10 samples, 0.74%)</title><rect x="80.1936%" y="469" width="0.7446%" height="15" fill="rgb(229,77,54)" fg:x="1077" fg:w="10"/><text x="80.4436%" y="479.50"></text></g><g><title>test3`std::uninitialized_fill_n (9 samples, 0.67%)</title><rect x="80.2681%" y="453" width="0.6701%" height="15" fill="rgb(218,53,16)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="463.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (9 samples, 0.67%)</title><rect x="80.2681%" y="437" width="0.6701%" height="15" fill="rgb(215,38,13)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="447.50"></text></g><g><title>test3`std::uninitialized_fill_n (9 samples, 0.67%)</title><rect x="80.2681%" y="421" width="0.6701%" height="15" fill="rgb(235,42,18)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="431.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (9 samples, 0.67%)</title><rect x="80.2681%" y="405" width="0.6701%" height="15" fill="rgb(219,66,54)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="415.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (9 samples, 0.67%)</title><rect x="80.2681%" y="389" width="0.6701%" height="15" fill="rgb(222,205,4)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="399.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (9 samples, 0.67%)</title><rect x="80.2681%" y="373" width="0.6701%" height="15" fill="rgb(227,213,46)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="383.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (9 samples, 0.67%)</title><rect x="80.2681%" y="357" width="0.6701%" height="15" fill="rgb(250,145,42)" fg:x="1078" fg:w="9"/><text x="80.5181%" y="367.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (8 samples, 0.60%)</title><rect x="80.3425%" y="341" width="0.5957%" height="15" fill="rgb(219,15,2)" fg:x="1079" fg:w="8"/><text x="80.5925%" y="351.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (5 samples, 0.37%)</title><rect x="80.5659%" y="325" width="0.3723%" height="15" fill="rgb(231,181,52)" fg:x="1082" fg:w="5"/><text x="80.8159%" y="335.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (1 samples, 0.07%)</title><rect x="80.8637%" y="309" width="0.0745%" height="15" fill="rgb(235,1,42)" fg:x="1086" fg:w="1"/><text x="81.1137%" y="319.50"></text></g><g><title>test3`llvm::initializeVerifierLegacyPassPass (1 samples, 0.07%)</title><rect x="80.8637%" y="293" width="0.0745%" height="15" fill="rgb(249,88,27)" fg:x="1086" fg:w="1"/><text x="81.1137%" y="303.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="80.8637%" y="277" width="0.0745%" height="15" fill="rgb(235,145,16)" fg:x="1086" fg:w="1"/><text x="81.1137%" y="287.50"></text></g><g><title>test3`llvm::iterator_facade_base&lt;llvm::SwitchInst::CaseIteratorImpl&lt;llvm::SwitchInst::CaseHandleImpl&lt;llvm::SwitchInst const ,llvm::ConstantInt const ,llvm::BasicBlock const &gt; &gt;,std::random_access_iterator_tag,llvm::SwitchInst::CaseHandleImpl&lt;llvm::SwitchInst const ,llvm::ConstantInt const ,llvm::BasicBlock const &gt;,__int64,llvm::SwitchInst::CaseHandleImpl&lt;llvm::SwitchInst const ,llvm::ConstantInt const ,llvm::BasicBlock const &gt; * __ptr64,llvm::SwitchInst::CaseHandleImpl (1 samples, 0.07%)</title><rect x="80.8637%" y="261" width="0.0745%" height="15" fill="rgb(237,114,19)" fg:x="1086" fg:w="1"/><text x="81.1137%" y="271.50"></text></g><g><title>test3`llvm::legacy::PassManager::run (301 samples, 22.41%)</title><rect x="58.6001%" y="581" width="22.4125%" height="15" fill="rgb(238,51,50)" fg:x="787" fg:w="301"/><text x="58.8501%" y="591.50">test3`llvm::legacy::PassManager::run</text></g><g><title>test3`llvm::legacy::PassManagerImpl::run (301 samples, 22.41%)</title><rect x="58.6001%" y="565" width="22.4125%" height="15" fill="rgb(205,194,25)" fg:x="787" fg:w="301"/><text x="58.8501%" y="575.50">test3`llvm::legacy::PassManagerImpl..</text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::doFinalization (299 samples, 22.26%)</title><rect x="58.7491%" y="549" width="22.2636%" height="15" fill="rgb(215,203,17)" fg:x="789" fg:w="299"/><text x="58.9991%" y="559.50">test3`llvm::legacy::FunctionPassMan..</text></g><g><title>test3`llvm::initializePreISelIntrinsicLoweringLegacyPassPass (1 samples, 0.07%)</title><rect x="80.9382%" y="533" width="0.0745%" height="15" fill="rgb(233,112,49)" fg:x="1087" fg:w="1"/><text x="81.1882%" y="543.50"></text></g><g><title>test3`llvm::initializePreISelIntrinsicLoweringLegacyPassPass (1 samples, 0.07%)</title><rect x="80.9382%" y="517" width="0.0745%" height="15" fill="rgb(241,130,26)" fg:x="1087" fg:w="1"/><text x="81.1882%" y="527.50"></text></g><g><title>test3`llvm::Value::getName (1 samples, 0.07%)</title><rect x="80.9382%" y="501" width="0.0745%" height="15" fill="rgb(252,223,19)" fg:x="1087" fg:w="1"/><text x="81.1882%" y="511.50"></text></g><g><title>test3`llvm::Value::getValueName (1 samples, 0.07%)</title><rect x="80.9382%" y="485" width="0.0745%" height="15" fill="rgb(211,95,25)" fg:x="1087" fg:w="1"/><text x="81.1882%" y="495.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="80.9382%" y="469" width="0.0745%" height="15" fill="rgb(251,182,27)" fg:x="1087" fg:w="1"/><text x="81.1882%" y="479.50"></text></g><g><title>test3`llvm::X86AsmPrinter::`vector deleting destructor&apos; (1 samples, 0.07%)</title><rect x="81.0127%" y="421" width="0.0745%" height="15" fill="rgb(238,24,4)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="431.50"></text></g><g><title>test3`llvm::X86AsmPrinter::~X86AsmPrinter (1 samples, 0.07%)</title><rect x="81.0127%" y="405" width="0.0745%" height="15" fill="rgb(224,220,25)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="415.50"></text></g><g><title>test3`llvm::AsmPrinter::~AsmPrinter (1 samples, 0.07%)</title><rect x="81.0127%" y="389" width="0.0745%" height="15" fill="rgb(239,133,26)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="399.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::MCStreamer,std::default_delete&lt;llvm::MCStreamer&gt; &gt;::~unique_ptr&lt;llvm::MCStreamer,std::default_delete (1 samples, 0.07%)</title><rect x="81.0127%" y="373" width="0.0745%" height="15" fill="rgb(211,94,48)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="383.50"></text></g><g><title>test3`std::default_delete&lt;llvm::MCStreamer&gt;::operator (1 samples, 0.07%)</title><rect x="81.0127%" y="357" width="0.0745%" height="15" fill="rgb(239,87,6)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="367.50"></text></g><g><title>test3`llvm::createX86WinCOFFStreamer (1 samples, 0.07%)</title><rect x="81.0127%" y="341" width="0.0745%" height="15" fill="rgb(227,62,0)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="351.50"></text></g><g><title>test3`llvm::createX86WinCOFFStreamer (1 samples, 0.07%)</title><rect x="81.0127%" y="325" width="0.0745%" height="15" fill="rgb(211,226,4)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="335.50"></text></g><g><title>test3`llvm::MCWinCOFFStreamer::~MCWinCOFFStreamer (1 samples, 0.07%)</title><rect x="81.0127%" y="309" width="0.0745%" height="15" fill="rgb(253,38,52)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="319.50"></text></g><g><title>test3`llvm::MCObjectStreamer::~MCObjectStreamer (1 samples, 0.07%)</title><rect x="81.0127%" y="293" width="0.0745%" height="15" fill="rgb(229,126,40)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="303.50"></text></g><g><title>test3`llvm::MCStreamer::~MCStreamer (1 samples, 0.07%)</title><rect x="81.0127%" y="277" width="0.0745%" height="15" fill="rgb(229,165,44)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="287.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::DWARFObject const ,std::default_delete&lt;llvm::DWARFObject const &gt; &gt;::~unique_ptr&lt;llvm::DWARFObject const ,std::default_delete (1 samples, 0.07%)</title><rect x="81.0127%" y="261" width="0.0745%" height="15" fill="rgb(247,95,47)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="271.50"></text></g><g><title>test3`std::default_delete&lt;llvm::DWARFObject const &gt;::operator (1 samples, 0.07%)</title><rect x="81.0127%" y="245" width="0.0745%" height="15" fill="rgb(216,140,30)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="255.50"></text></g><g><title>test3`llvm::createX86ObjectTargetStreamer (1 samples, 0.07%)</title><rect x="81.0127%" y="229" width="0.0745%" height="15" fill="rgb(246,214,8)" fg:x="1088" fg:w="1"/><text x="81.2627%" y="239.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::~FunctionPassManagerImpl (2 samples, 0.15%)</title><rect x="81.0127%" y="549" width="0.1489%" height="15" fill="rgb(227,224,15)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="559.50"></text></g><g><title>test3`llvm::PMTopLevelManager::~PMTopLevelManager (2 samples, 0.15%)</title><rect x="81.0127%" y="533" width="0.1489%" height="15" fill="rgb(233,175,4)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="543.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::doFinalization (2 samples, 0.15%)</title><rect x="81.0127%" y="517" width="0.1489%" height="15" fill="rgb(221,66,45)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="527.50"></text></g><g><title>test3`llvm::legacy::FunctionPassManagerImpl::doFinalization (2 samples, 0.15%)</title><rect x="81.0127%" y="501" width="0.1489%" height="15" fill="rgb(221,178,18)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="511.50"></text></g><g><title>test3`llvm::PMDataManager::~PMDataManager (2 samples, 0.15%)</title><rect x="81.0127%" y="485" width="0.1489%" height="15" fill="rgb(213,81,29)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="495.50"></text></g><g><title>test3`llvm::FPPassManager::`vector deleting destructor&apos; (2 samples, 0.15%)</title><rect x="81.0127%" y="469" width="0.1489%" height="15" fill="rgb(220,89,49)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="479.50"></text></g><g><title>test3`llvm::FPPassManager::~FPPassManager (2 samples, 0.15%)</title><rect x="81.0127%" y="453" width="0.1489%" height="15" fill="rgb(227,60,33)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="463.50"></text></g><g><title>test3`llvm::PMDataManager::~PMDataManager (2 samples, 0.15%)</title><rect x="81.0127%" y="437" width="0.1489%" height="15" fill="rgb(205,113,12)" fg:x="1088" fg:w="2"/><text x="81.2627%" y="447.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="81.0871%" y="421" width="0.0745%" height="15" fill="rgb(211,32,1)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="431.50"></text></g><g><title>test3`llvm::createX86ISelDag (1 samples, 0.07%)</title><rect x="81.0871%" y="405" width="0.0745%" height="15" fill="rgb(246,2,12)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="415.50"></text></g><g><title>test3`llvm::SelectionDAGISel::~SelectionDAGISel (1 samples, 0.07%)</title><rect x="81.0871%" y="389" width="0.0745%" height="15" fill="rgb(243,37,27)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="399.50"></text></g><g><title>test3`std::unique_ptr&lt;llvm::FunctionLoweringInfo,std::default_delete&lt;llvm::FunctionLoweringInfo&gt; &gt;::~unique_ptr&lt;llvm::FunctionLoweringInfo,std::default_delete (1 samples, 0.07%)</title><rect x="81.0871%" y="373" width="0.0745%" height="15" fill="rgb(248,211,31)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="383.50"></text></g><g><title>test3`std::default_delete&lt;llvm::FunctionLoweringInfo&gt;::operator (1 samples, 0.07%)</title><rect x="81.0871%" y="357" width="0.0745%" height="15" fill="rgb(242,146,47)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="367.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::`scalar deleting destructor&apos; (1 samples, 0.07%)</title><rect x="81.0871%" y="341" width="0.0745%" height="15" fill="rgb(206,70,20)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="351.50"></text></g><g><title>test3`llvm::FunctionLoweringInfo::~FunctionLoweringInfo (1 samples, 0.07%)</title><rect x="81.0871%" y="325" width="0.0745%" height="15" fill="rgb(215,10,51)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="335.50"></text></g><g><title>test3`llvm::DenseSet&lt;llvm::Register,llvm::DenseMapInfo&lt;llvm::Register&gt; &gt;::~DenseSet&lt;llvm::Register,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="81.0871%" y="309" width="0.0745%" height="15" fill="rgb(243,178,53)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="319.50"></text></g><g><title>test3`llvm::detail::DenseSetImpl&lt;llvm::Register,llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;,llvm::DenseMapInfo&lt;llvm::Register&gt; &gt;::~DenseSetImpl&lt;llvm::Register,llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;,llvm::DenseMapInfo (1 samples, 0.07%)</title><rect x="81.0871%" y="293" width="0.0745%" height="15" fill="rgb(233,221,20)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="303.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;::~DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="81.0871%" y="277" width="0.0745%" height="15" fill="rgb(218,95,35)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="287.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair&lt;llvm::Register&gt; &gt;,llvm::Register,llvm::detail::DenseSetEmpty,llvm::DenseMapInfo&lt;llvm::Register&gt;,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="81.0871%" y="261" width="0.0745%" height="15" fill="rgb(229,13,5)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="271.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="81.0871%" y="245" width="0.0745%" height="15" fill="rgb(252,164,30)" fg:x="1089" fg:w="1"/><text x="81.3371%" y="255.50"></text></g><g><title>test3`llvm::MCJIT::emitObject (344 samples, 25.61%)</title><rect x="55.6217%" y="597" width="25.6143%" height="15" fill="rgb(232,68,36)" fg:x="747" fg:w="344"/><text x="55.8717%" y="607.50">test3`llvm::MCJIT::emitObject</text></g><g><title>test3`llvm::legacy::PassManager::~PassManager (3 samples, 0.22%)</title><rect x="81.0127%" y="581" width="0.2234%" height="15" fill="rgb(219,59,54)" fg:x="1088" fg:w="3"/><text x="81.2627%" y="591.50"></text></g><g><title>test3`llvm::legacy::PassManagerImpl::`vector deleting destructor&apos; (3 samples, 0.22%)</title><rect x="81.0127%" y="565" width="0.2234%" height="15" fill="rgb(250,92,33)" fg:x="1088" fg:w="3"/><text x="81.2627%" y="575.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="81.1616%" y="549" width="0.0745%" height="15" fill="rgb(229,162,54)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="559.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="81.1616%" y="533" width="0.0745%" height="15" fill="rgb(244,114,52)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="543.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="81.1616%" y="517" width="0.0745%" height="15" fill="rgb(212,211,43)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="527.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="81.1616%" y="501" width="0.0745%" height="15" fill="rgb(226,147,8)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="511.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="81.1616%" y="485" width="0.0745%" height="15" fill="rgb(226,23,13)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="495.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="81.1616%" y="469" width="0.0745%" height="15" fill="rgb(240,63,4)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="479.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="81.1616%" y="453" width="0.0745%" height="15" fill="rgb(221,1,32)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="463.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="81.1616%" y="437" width="0.0745%" height="15" fill="rgb(242,117,10)" fg:x="1090" fg:w="1"/><text x="81.4116%" y="447.50"></text></g><g><title>test3`llvm::LegacyJITSymbolResolver::getResponsibilitySet (1 samples, 0.07%)</title><rect x="81.2360%" y="549" width="0.0745%" height="15" fill="rgb(249,172,44)" fg:x="1091" fg:w="1"/><text x="81.4860%" y="559.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="81.2360%" y="533" width="0.0745%" height="15" fill="rgb(244,46,45)" fg:x="1091" fg:w="1"/><text x="81.4860%" y="543.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="81.3105%" y="517" width="0.0745%" height="15" fill="rgb(206,43,17)" fg:x="1092" fg:w="1"/><text x="81.5605%" y="527.50"></text></g><g><title>KernelBase`GetSystemInfo (1 samples, 0.07%)</title><rect x="81.3850%" y="437" width="0.0745%" height="15" fill="rgb(239,218,39)" fg:x="1093" fg:w="1"/><text x="81.6350%" y="447.50"></text></g><g><title>ntdll`NtQuerySystemInformation (1 samples, 0.07%)</title><rect x="81.3850%" y="421" width="0.0745%" height="15" fill="rgb(208,169,54)" fg:x="1093" fg:w="1"/><text x="81.6350%" y="431.50"></text></g><g><title>rpcrt4`RpcBindingSetAuthInfoExW (1 samples, 0.07%)</title><rect x="81.4594%" y="293" width="0.0745%" height="15" fill="rgb(247,25,42)" fg:x="1094" fg:w="1"/><text x="81.7094%" y="303.50"></text></g><g><title>rpcrt4`I_RpcOpenClientThread (1 samples, 0.07%)</title><rect x="81.5339%" y="261" width="0.0745%" height="15" fill="rgb(226,23,31)" fg:x="1095" fg:w="1"/><text x="81.7839%" y="271.50"></text></g><g><title>KernelBase`GetLengthSid (1 samples, 0.07%)</title><rect x="81.5339%" y="245" width="0.0745%" height="15" fill="rgb(247,16,28)" fg:x="1095" fg:w="1"/><text x="81.7839%" y="255.50"></text></g><g><title>rpcrt4`NDRSContextMarshall2 (3 samples, 0.22%)</title><rect x="81.4594%" y="357" width="0.2234%" height="15" fill="rgb(231,147,38)" fg:x="1094" fg:w="3"/><text x="81.7094%" y="367.50"></text></g><g><title>rpcrt4`NdrNonEncapsulatedUnionUnmarshall (3 samples, 0.22%)</title><rect x="81.4594%" y="341" width="0.2234%" height="15" fill="rgb(253,81,48)" fg:x="1094" fg:w="3"/><text x="81.7094%" y="351.50"></text></g><g><title>advapi32`SaferIdentifyLevel (3 samples, 0.22%)</title><rect x="81.4594%" y="325" width="0.2234%" height="15" fill="rgb(249,222,43)" fg:x="1094" fg:w="3"/><text x="81.7094%" y="335.50"></text></g><g><title>rpcrt4`RpcBindingCreateW (3 samples, 0.22%)</title><rect x="81.4594%" y="309" width="0.2234%" height="15" fill="rgb(221,3,27)" fg:x="1094" fg:w="3"/><text x="81.7094%" y="319.50"></text></g><g><title>rpcrt4`RpcStringBindingParseA (2 samples, 0.15%)</title><rect x="81.5339%" y="293" width="0.1489%" height="15" fill="rgb(228,180,5)" fg:x="1095" fg:w="2"/><text x="81.7839%" y="303.50"></text></g><g><title>rpcrt4`RpcStringBindingParseA (2 samples, 0.15%)</title><rect x="81.5339%" y="277" width="0.1489%" height="15" fill="rgb(227,131,42)" fg:x="1095" fg:w="2"/><text x="81.7839%" y="287.50"></text></g><g><title>rpcrt4`TowerConstruct (1 samples, 0.07%)</title><rect x="81.6083%" y="261" width="0.0745%" height="15" fill="rgb(212,3,39)" fg:x="1096" fg:w="1"/><text x="81.8583%" y="271.50"></text></g><g><title>ntdll`RtlNewSecurityObjectEx (1 samples, 0.07%)</title><rect x="81.6083%" y="245" width="0.0745%" height="15" fill="rgb(226,45,5)" fg:x="1096" fg:w="1"/><text x="81.8583%" y="255.50"></text></g><g><title>ntdll`RtlCreateUnicodeString (1 samples, 0.07%)</title><rect x="81.6083%" y="229" width="0.0745%" height="15" fill="rgb(215,167,45)" fg:x="1096" fg:w="1"/><text x="81.8583%" y="239.50"></text></g><g><title>ntdll`RtlAddAce (1 samples, 0.07%)</title><rect x="81.6083%" y="213" width="0.0745%" height="15" fill="rgb(250,218,53)" fg:x="1096" fg:w="1"/><text x="81.8583%" y="223.50"></text></g><g><title>ntdll`RtlAddAce (1 samples, 0.07%)</title><rect x="81.6083%" y="197" width="0.0745%" height="15" fill="rgb(207,140,0)" fg:x="1096" fg:w="1"/><text x="81.8583%" y="207.50"></text></g><g><title>ntdll`ZwQueryInformationToken (1 samples, 0.07%)</title><rect x="81.6083%" y="181" width="0.0745%" height="15" fill="rgb(238,133,51)" fg:x="1096" fg:w="1"/><text x="81.8583%" y="191.50"></text></g><g><title>advapi32`LsaSetForestTrustInformation2 (4 samples, 0.30%)</title><rect x="81.4594%" y="405" width="0.2978%" height="15" fill="rgb(218,203,53)" fg:x="1094" fg:w="4"/><text x="81.7094%" y="415.50"></text></g><g><title>rpcrt4`NdrClientCall3 (4 samples, 0.30%)</title><rect x="81.4594%" y="389" width="0.2978%" height="15" fill="rgb(226,184,25)" fg:x="1094" fg:w="4"/><text x="81.7094%" y="399.50"></text></g><g><title>rpcrt4`Ndr64AsyncServerCallAll (4 samples, 0.30%)</title><rect x="81.4594%" y="373" width="0.2978%" height="15" fill="rgb(231,121,21)" fg:x="1094" fg:w="4"/><text x="81.7094%" y="383.50"></text></g><g><title>rpcrt4`Ndr64AsyncClientCall (1 samples, 0.07%)</title><rect x="81.6828%" y="357" width="0.0745%" height="15" fill="rgb(251,14,34)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="367.50"></text></g><g><title>rpcrt4`I_RpcGetBufferWithObject (1 samples, 0.07%)</title><rect x="81.6828%" y="341" width="0.0745%" height="15" fill="rgb(249,193,11)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="351.50"></text></g><g><title>advapi32`RegQueryInfoKeyW (1 samples, 0.07%)</title><rect x="81.6828%" y="325" width="0.0745%" height="15" fill="rgb(220,172,37)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="335.50"></text></g><g><title>rpcrt4`RpcBindingFree (1 samples, 0.07%)</title><rect x="81.6828%" y="309" width="0.0745%" height="15" fill="rgb(231,229,43)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="319.50"></text></g><g><title>rpcrt4`RpcStringBindingParseW (1 samples, 0.07%)</title><rect x="81.6828%" y="293" width="0.0745%" height="15" fill="rgb(250,161,5)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="303.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="81.6828%" y="277" width="0.0745%" height="15" fill="rgb(218,225,18)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="287.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="81.6828%" y="261" width="0.0745%" height="15" fill="rgb(245,45,42)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="271.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="81.6828%" y="245" width="0.0745%" height="15" fill="rgb(211,115,1)" fg:x="1097" fg:w="1"/><text x="81.9328%" y="255.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::findOrEmitSection (7 samples, 0.52%)</title><rect x="81.3105%" y="549" width="0.5212%" height="15" fill="rgb(248,133,52)" fg:x="1092" fg:w="7"/><text x="81.5605%" y="559.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::emitSection (7 samples, 0.52%)</title><rect x="81.3105%" y="533" width="0.5212%" height="15" fill="rgb(238,100,21)" fg:x="1092" fg:w="7"/><text x="81.5605%" y="543.50"></text></g><g><title>test3`llvm::SectionMemoryManager::allocateDataSection (6 samples, 0.45%)</title><rect x="81.3850%" y="517" width="0.4468%" height="15" fill="rgb(247,144,11)" fg:x="1093" fg:w="6"/><text x="81.6350%" y="527.50"></text></g><g><title>test3`llvm::SectionMemoryManager::allocateSection (6 samples, 0.45%)</title><rect x="81.3850%" y="501" width="0.4468%" height="15" fill="rgb(206,164,16)" fg:x="1093" fg:w="6"/><text x="81.6350%" y="511.50"></text></g><g><title>test3`llvm::SectionMemoryManager::anchor (6 samples, 0.45%)</title><rect x="81.3850%" y="485" width="0.4468%" height="15" fill="rgb(222,34,3)" fg:x="1093" fg:w="6"/><text x="81.6350%" y="495.50"></text></g><g><title>test3`llvm::sys::Memory::allocateMappedMemory (6 samples, 0.45%)</title><rect x="81.3850%" y="469" width="0.4468%" height="15" fill="rgb(248,82,4)" fg:x="1093" fg:w="6"/><text x="81.6350%" y="479.50"></text></g><g><title>test3`llvm::sys::operator&lt; (6 samples, 0.45%)</title><rect x="81.3850%" y="453" width="0.4468%" height="15" fill="rgb(228,81,46)" fg:x="1093" fg:w="6"/><text x="81.6350%" y="463.50"></text></g><g><title>advapi32`LookupPrivilegeValueW (5 samples, 0.37%)</title><rect x="81.4594%" y="437" width="0.3723%" height="15" fill="rgb(227,67,47)" fg:x="1094" fg:w="5"/><text x="81.7094%" y="447.50"></text></g><g><title>advapi32`LsaLookupPrivilegeValue (5 samples, 0.37%)</title><rect x="81.4594%" y="421" width="0.3723%" height="15" fill="rgb(215,93,53)" fg:x="1094" fg:w="5"/><text x="81.7094%" y="431.50"></text></g><g><title>rpcrt4`NdrClientCall3 (1 samples, 0.07%)</title><rect x="81.7573%" y="405" width="0.0745%" height="15" fill="rgb(248,194,39)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="415.50"></text></g><g><title>rpcrt4`Ndr64AsyncServerCallAll (1 samples, 0.07%)</title><rect x="81.7573%" y="389" width="0.0745%" height="15" fill="rgb(215,5,19)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="399.50"></text></g><g><title>rpcrt4`Ndr64AsyncServerCallAll (1 samples, 0.07%)</title><rect x="81.7573%" y="373" width="0.0745%" height="15" fill="rgb(226,215,51)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="383.50"></text></g><g><title>rpcrt4`NdrConformantStringUnmarshall (1 samples, 0.07%)</title><rect x="81.7573%" y="357" width="0.0745%" height="15" fill="rgb(225,56,26)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="367.50"></text></g><g><title>rpcrt4`I_RpcBindingInqClientTokenAttributes (1 samples, 0.07%)</title><rect x="81.7573%" y="341" width="0.0745%" height="15" fill="rgb(222,75,29)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="351.50"></text></g><g><title>rpcrt4`RpcBindingFree (1 samples, 0.07%)</title><rect x="81.7573%" y="325" width="0.0745%" height="15" fill="rgb(236,139,6)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="335.50"></text></g><g><title>rpcrt4`NdrUnmarshallBasetypeInline (1 samples, 0.07%)</title><rect x="81.7573%" y="309" width="0.0745%" height="15" fill="rgb(223,137,36)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="319.50"></text></g><g><title>rpcrt4`RpcStringBindingParseW (1 samples, 0.07%)</title><rect x="81.7573%" y="293" width="0.0745%" height="15" fill="rgb(226,99,2)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="303.50"></text></g><g><title>rpcrt4`RpcBindingFromStringBindingW (1 samples, 0.07%)</title><rect x="81.7573%" y="277" width="0.0745%" height="15" fill="rgb(206,133,23)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="287.50"></text></g><g><title>rpcrt4`RpcBindingFromStringBindingW (1 samples, 0.07%)</title><rect x="81.7573%" y="261" width="0.0745%" height="15" fill="rgb(243,173,15)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="271.50"></text></g><g><title>rpcrt4`RpcServerInterfaceGroupCreateW (1 samples, 0.07%)</title><rect x="81.7573%" y="245" width="0.0745%" height="15" fill="rgb(228,69,28)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="255.50"></text></g><g><title>rpcrt4`RpcServerInterfaceGroupCreateW (1 samples, 0.07%)</title><rect x="81.7573%" y="229" width="0.0745%" height="15" fill="rgb(212,51,22)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="239.50"></text></g><g><title>ntdll`ZwSetInformationWorkerFactory (1 samples, 0.07%)</title><rect x="81.7573%" y="213" width="0.0745%" height="15" fill="rgb(227,113,0)" fg:x="1098" fg:w="1"/><text x="82.0073%" y="223.50"></text></g><g><title>test3`llvm::RuntimeDyldCOFF::loadObject (9 samples, 0.67%)</title><rect x="81.2360%" y="581" width="0.6701%" height="15" fill="rgb(252,84,27)" fg:x="1091" fg:w="9"/><text x="81.4860%" y="591.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::loadObjectImpl (9 samples, 0.67%)</title><rect x="81.2360%" y="565" width="0.6701%" height="15" fill="rgb(223,145,39)" fg:x="1091" fg:w="9"/><text x="81.4860%" y="575.50"></text></g><g><title>test3`std::map&lt;llvm::RelocationValueRef,unsigned __int64,std::less&lt;llvm::RelocationValueRef&gt;,std::allocator&lt;std::pair&lt;llvm::RelocationValueRef const ,unsigned __int64&gt; &gt; &gt;::map&lt;llvm::RelocationValueRef,unsigned __int64,std::less&lt;llvm::RelocationValueRef&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="81.8317%" y="549" width="0.0745%" height="15" fill="rgb(239,219,30)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="559.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;llvm::RelocationValueRef,unsigned __int64,std::less&lt;llvm::RelocationValueRef&gt;,std::allocator&lt;std::pair&lt;llvm::RelocationValueRef const ,unsigned __int64&gt; &gt;,0&gt; &gt;::_Tree&lt;std::_Tmap_traits&lt;llvm::RelocationValueRef,unsigned __int64,std::less&lt;llvm::RelocationValueRef&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="81.8317%" y="533" width="0.0745%" height="15" fill="rgb(224,196,39)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="543.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;llvm::RelocationValueRef,unsigned __int64,std::less&lt;llvm::RelocationValueRef&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="81.8317%" y="517" width="0.0745%" height="15" fill="rgb(205,35,43)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="527.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;llvm::RelocationValueRef const ,unsigned __int64&gt;,void * __ptr64&gt;::_Buyheadnode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair (1 samples, 0.07%)</title><rect x="81.8317%" y="501" width="0.0745%" height="15" fill="rgb(228,201,21)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="511.50"></text></g><g><title>test3`std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="81.8317%" y="485" width="0.0745%" height="15" fill="rgb(237,118,16)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="495.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="81.8317%" y="469" width="0.0745%" height="15" fill="rgb(241,17,19)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="479.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="81.8317%" y="453" width="0.0745%" height="15" fill="rgb(214,10,25)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="463.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="81.8317%" y="437" width="0.0745%" height="15" fill="rgb(238,37,29)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="447.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="81.8317%" y="421" width="0.0745%" height="15" fill="rgb(253,83,25)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="431.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="81.8317%" y="405" width="0.0745%" height="15" fill="rgb(234,192,12)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="415.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="81.8317%" y="389" width="0.0745%" height="15" fill="rgb(241,216,45)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="399.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="81.8317%" y="373" width="0.0745%" height="15" fill="rgb(242,22,33)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="383.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="81.8317%" y="357" width="0.0745%" height="15" fill="rgb(231,105,49)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="367.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="81.8317%" y="341" width="0.0745%" height="15" fill="rgb(218,204,15)" fg:x="1099" fg:w="1"/><text x="82.0817%" y="351.50"></text></g><g><title>test3`ZN7inkwell16execution_engine15ExecutionEngine20get_function_address17he3967e702f2e913cE (357 samples, 26.58%)</title><rect x="55.3984%" y="693" width="26.5823%" height="15" fill="rgb(235,138,41)" fg:x="744" fg:w="357"/><text x="55.6484%" y="703.50">test3`ZN7inkwell16execution_engine15Executi..</text></g><g><title>test3`LLVMGetFunctionAddress (357 samples, 26.58%)</title><rect x="55.3984%" y="677" width="26.5823%" height="15" fill="rgb(246,0,9)" fg:x="744" fg:w="357"/><text x="55.6484%" y="687.50">test3`LLVMGetFunctionAddress</text></g><g><title>test3`llvm::MCJIT::getFunctionAddress (357 samples, 26.58%)</title><rect x="55.3984%" y="661" width="26.5823%" height="15" fill="rgb(210,74,4)" fg:x="744" fg:w="357"/><text x="55.6484%" y="671.50">test3`llvm::MCJIT::getFunctionAddress</text></g><g><title>test3`llvm::MCJIT::getSymbolAddress (354 samples, 26.36%)</title><rect x="55.6217%" y="645" width="26.3589%" height="15" fill="rgb(250,60,41)" fg:x="747" fg:w="354"/><text x="55.8717%" y="655.50">test3`llvm::MCJIT::getSymbolAddress</text></g><g><title>test3`llvm::MCJIT::findSymbol (354 samples, 26.36%)</title><rect x="55.6217%" y="629" width="26.3589%" height="15" fill="rgb(220,115,12)" fg:x="747" fg:w="354"/><text x="55.8717%" y="639.50">test3`llvm::MCJIT::findSymbol</text></g><g><title>test3`llvm::MCJIT::generateCodeForModule (354 samples, 26.36%)</title><rect x="55.6217%" y="613" width="26.3589%" height="15" fill="rgb(237,100,13)" fg:x="747" fg:w="354"/><text x="55.8717%" y="623.50">test3`llvm::MCJIT::generateCodeForModule</text></g><g><title>test3`llvm::RuntimeDyld::loadObject (10 samples, 0.74%)</title><rect x="81.2360%" y="597" width="0.7446%" height="15" fill="rgb(213,55,26)" fg:x="1091" fg:w="10"/><text x="81.4860%" y="607.50"></text></g><g><title>test3`llvm::RuntimeDyldImpl::deregisterEHFrames (1 samples, 0.07%)</title><rect x="81.9062%" y="581" width="0.0745%" height="15" fill="rgb(216,17,4)" fg:x="1100" fg:w="1"/><text x="82.1562%" y="591.50"></text></g><g><title>test3`llvm::RuntimeDyldCOFF::create (1 samples, 0.07%)</title><rect x="81.9062%" y="565" width="0.0745%" height="15" fill="rgb(220,153,47)" fg:x="1100" fg:w="1"/><text x="82.1562%" y="575.50"></text></g><g><title>test3`std::make_unique (1 samples, 0.07%)</title><rect x="81.9062%" y="549" width="0.0745%" height="15" fill="rgb(215,131,9)" fg:x="1100" fg:w="1"/><text x="82.1562%" y="559.50"></text></g><g><title>test3`llvm::RuntimeDyldCOFFX86_64::RuntimeDyldCOFFX86_64 (1 samples, 0.07%)</title><rect x="81.9062%" y="533" width="0.0745%" height="15" fill="rgb(233,46,42)" fg:x="1100" fg:w="1"/><text x="82.1562%" y="543.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder10build_load17h525943f6e87e7998E (1 samples, 0.07%)</title><rect x="81.9806%" y="693" width="0.0745%" height="15" fill="rgb(226,86,7)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="703.50"></text></g><g><title>test3`LLVMBuildLoad (1 samples, 0.07%)</title><rect x="81.9806%" y="677" width="0.0745%" height="15" fill="rgb(239,226,21)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="687.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateLoad (1 samples, 0.07%)</title><rect x="81.9806%" y="661" width="0.0745%" height="15" fill="rgb(244,137,22)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="671.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAlignedLoad (1 samples, 0.07%)</title><rect x="81.9806%" y="645" width="0.0745%" height="15" fill="rgb(211,139,35)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="655.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAlignedLoad (1 samples, 0.07%)</title><rect x="81.9806%" y="629" width="0.0745%" height="15" fill="rgb(214,62,50)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="639.50"></text></g><g><title>test3`llvm::DSOLocalEquivalent::operator new (1 samples, 0.07%)</title><rect x="81.9806%" y="613" width="0.0745%" height="15" fill="rgb(212,113,44)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="623.50"></text></g><g><title>test3`llvm::User::operator new (1 samples, 0.07%)</title><rect x="81.9806%" y="597" width="0.0745%" height="15" fill="rgb(226,150,43)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="607.50"></text></g><g><title>test3`llvm::User::allocateFixedOperandUser (1 samples, 0.07%)</title><rect x="81.9806%" y="581" width="0.0745%" height="15" fill="rgb(250,71,37)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="591.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="81.9806%" y="565" width="0.0745%" height="15" fill="rgb(219,76,19)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="575.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="81.9806%" y="549" width="0.0745%" height="15" fill="rgb(250,39,11)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="559.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="81.9806%" y="533" width="0.0745%" height="15" fill="rgb(230,64,31)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="543.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="81.9806%" y="517" width="0.0745%" height="15" fill="rgb(208,222,23)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="527.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="81.9806%" y="501" width="0.0745%" height="15" fill="rgb(227,125,18)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="511.50"></text></g><g><title>ucrtbased`memset (1 samples, 0.07%)</title><rect x="81.9806%" y="485" width="0.0745%" height="15" fill="rgb(234,210,9)" fg:x="1101" fg:w="1"/><text x="82.2306%" y="495.50"></text></g><g><title>test3`ZN13rusty_js_core8baseline4llvm7CodeGen15translate_codes17h3d3f2c30d4b19104E (368 samples, 27.40%)</title><rect x="54.7282%" y="709" width="27.4013%" height="15" fill="rgb(217,127,24)" fg:x="735" fg:w="368"/><text x="54.9782%" y="719.50">test3`ZN13rusty_js_core8baseline4llvm7CodeGe..</text></g><g><title>test3`ZN7inkwell7builder7Builder22build_aggregate_return17h5252c7bbad58090eE (1 samples, 0.07%)</title><rect x="82.0551%" y="693" width="0.0745%" height="15" fill="rgb(239,141,48)" fg:x="1102" fg:w="1"/><text x="82.3051%" y="703.50"></text></g><g><title>test3`LLVMBuildAggregateRet (1 samples, 0.07%)</title><rect x="82.0551%" y="677" width="0.0745%" height="15" fill="rgb(227,109,8)" fg:x="1102" fg:w="1"/><text x="82.3051%" y="687.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAggregateRet (1 samples, 0.07%)</title><rect x="82.0551%" y="661" width="0.0745%" height="15" fill="rgb(235,184,23)" fg:x="1102" fg:w="1"/><text x="82.3051%" y="671.50"></text></g><g><title>test3`LLVMBuildStore (1 samples, 0.07%)</title><rect x="82.1296%" y="693" width="0.0745%" height="15" fill="rgb(227,226,48)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="703.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateStore (1 samples, 0.07%)</title><rect x="82.1296%" y="677" width="0.0745%" height="15" fill="rgb(206,150,11)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="687.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAlignedStore (1 samples, 0.07%)</title><rect x="82.1296%" y="661" width="0.0745%" height="15" fill="rgb(254,2,33)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="671.50"></text></g><g><title>test3`llvm::StoreInst::StoreInst (1 samples, 0.07%)</title><rect x="82.1296%" y="645" width="0.0745%" height="15" fill="rgb(243,160,20)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="655.50"></text></g><g><title>test3`llvm::StoreInst::StoreInst (1 samples, 0.07%)</title><rect x="82.1296%" y="629" width="0.0745%" height="15" fill="rgb(218,208,30)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="639.50"></text></g><g><title>test3`llvm::StoreInst::AssertOK (1 samples, 0.07%)</title><rect x="82.1296%" y="613" width="0.0745%" height="15" fill="rgb(224,120,49)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="623.50"></text></g><g><title>test3`llvm::Instruction::isAtomic (1 samples, 0.07%)</title><rect x="82.1296%" y="597" width="0.0745%" height="15" fill="rgb(246,12,2)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="607.50"></text></g><g><title>test3`llvm::cast (1 samples, 0.07%)</title><rect x="82.1296%" y="581" width="0.0745%" height="15" fill="rgb(236,117,3)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="591.50"></text></g><g><title>test3`llvm::isa (1 samples, 0.07%)</title><rect x="82.1296%" y="565" width="0.0745%" height="15" fill="rgb(216,128,52)" fg:x="1103" fg:w="1"/><text x="82.3796%" y="575.50"></text></g><g><title>test3`ZN7inkwell5types4Type7fn_type17h3e165315701ee12fE (1 samples, 0.07%)</title><rect x="82.2040%" y="693" width="0.0745%" height="15" fill="rgb(246,145,19)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="703.50"></text></g><g><title>test3`LLVMFunctionType (1 samples, 0.07%)</title><rect x="82.2040%" y="677" width="0.0745%" height="15" fill="rgb(222,11,46)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="687.50"></text></g><g><title>test3`llvm::FunctionType::get (1 samples, 0.07%)</title><rect x="82.2040%" y="661" width="0.0745%" height="15" fill="rgb(245,82,36)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="671.50"></text></g><g><title>test3`llvm::detail::DenseSetImpl&lt;llvm::FunctionType * __ptr64,llvm::DenseMap&lt;llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;,llvm::FunctionTypeKeyInfo&gt;::insert_as (1 samples, 0.07%)</title><rect x="82.2040%" y="645" width="0.0745%" height="15" fill="rgb(250,73,51)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="655.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;,llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;::insert_as (1 samples, 0.07%)</title><rect x="82.2040%" y="629" width="0.0745%" height="15" fill="rgb(221,189,23)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="639.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;,llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;::InsertIntoBucketWithLookup (1 samples, 0.07%)</title><rect x="82.2040%" y="613" width="0.0745%" height="15" fill="rgb(210,33,7)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="623.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;,llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="82.2040%" y="597" width="0.0745%" height="15" fill="rgb(210,107,22)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="607.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::FunctionType * __ptr64&gt; &gt;,llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="82.2040%" y="581" width="0.0745%" height="15" fill="rgb(222,116,37)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="591.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::FunctionType * __ptr64,llvm::detail::DenseSetEmpty,llvm::FunctionTypeKeyInfo,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="82.2040%" y="565" width="0.0745%" height="15" fill="rgb(254,17,48)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="575.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::ConstantArray * __ptr64,llvm::detail::DenseSetEmpty,llvm::ConstantUniqueMap&lt;llvm::ConstantArray&gt;::MapInfo,llvm::detail::DenseSetPair&lt;llvm::ConstantArray * __ptr64&gt; &gt;,llvm::ConstantArray * __ptr64,llvm::detail::DenseSetEmpty,llvm::ConstantUniqueMap&lt;llvm::ConstantArray&gt;::MapInfo,llvm::detail::DenseSetPair (1 samples, 0.07%)</title><rect x="82.2040%" y="549" width="0.0745%" height="15" fill="rgb(224,36,32)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="559.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,int&gt; &gt;,int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="82.2040%" y="533" width="0.0745%" height="15" fill="rgb(232,90,46)" fg:x="1104" fg:w="1"/><text x="82.4540%" y="543.50"></text></g><g><title>test3`llvm::Constant::Constant (1 samples, 0.07%)</title><rect x="82.2785%" y="597" width="0.0745%" height="15" fill="rgb(241,66,40)" fg:x="1105" fg:w="1"/><text x="82.5285%" y="607.50"></text></g><g><title>test3`llvm::User::User (1 samples, 0.07%)</title><rect x="82.2785%" y="581" width="0.0745%" height="15" fill="rgb(249,184,29)" fg:x="1105" fg:w="1"/><text x="82.5285%" y="591.50"></text></g><g><title>test3`llvm::Value::Value (1 samples, 0.07%)</title><rect x="82.2785%" y="565" width="0.0745%" height="15" fill="rgb(231,181,1)" fg:x="1105" fg:w="1"/><text x="82.5285%" y="575.50"></text></g><g><title>test3`llvm::CallbackVH::anchor (1 samples, 0.07%)</title><rect x="82.2785%" y="549" width="0.0745%" height="15" fill="rgb(224,94,2)" fg:x="1105" fg:w="1"/><text x="82.5285%" y="559.50"></text></g><g><title>test3`ZN7inkwell6module6Module12add_function17hbd7485df5c552280E (2 samples, 0.15%)</title><rect x="82.2785%" y="693" width="0.1489%" height="15" fill="rgb(229,170,15)" fg:x="1105" fg:w="2"/><text x="82.5285%" y="703.50"></text></g><g><title>test3`LLVMAddFunction (2 samples, 0.15%)</title><rect x="82.2785%" y="677" width="0.1489%" height="15" fill="rgb(240,127,35)" fg:x="1105" fg:w="2"/><text x="82.5285%" y="687.50"></text></g><g><title>test3`llvm::Function::Create (2 samples, 0.15%)</title><rect x="82.2785%" y="661" width="0.1489%" height="15" fill="rgb(248,196,34)" fg:x="1105" fg:w="2"/><text x="82.5285%" y="671.50"></text></g><g><title>test3`llvm::Function::Function (2 samples, 0.15%)</title><rect x="82.2785%" y="645" width="0.1489%" height="15" fill="rgb(236,137,7)" fg:x="1105" fg:w="2"/><text x="82.5285%" y="655.50"></text></g><g><title>test3`llvm::GlobalObject::GlobalObject (2 samples, 0.15%)</title><rect x="82.2785%" y="629" width="0.1489%" height="15" fill="rgb(235,127,16)" fg:x="1105" fg:w="2"/><text x="82.5285%" y="639.50"></text></g><g><title>test3`llvm::GlobalValue::GlobalValue (2 samples, 0.15%)</title><rect x="82.2785%" y="613" width="0.1489%" height="15" fill="rgb(250,192,54)" fg:x="1105" fg:w="2"/><text x="82.5285%" y="623.50"></text></g><g><title>test3`llvm::Value::setName (1 samples, 0.07%)</title><rect x="82.3529%" y="597" width="0.0745%" height="15" fill="rgb(218,98,20)" fg:x="1106" fg:w="1"/><text x="82.6029%" y="607.50"></text></g><g><title>test3`llvm::Function::recalculateIntrinsicID (1 samples, 0.07%)</title><rect x="82.3529%" y="581" width="0.0745%" height="15" fill="rgb(230,176,47)" fg:x="1106" fg:w="1"/><text x="82.6029%" y="591.50"></text></g><g><title>test3`llvm::StringRef::startswith (1 samples, 0.07%)</title><rect x="82.3529%" y="565" width="0.0745%" height="15" fill="rgb(244,2,33)" fg:x="1106" fg:w="1"/><text x="82.6029%" y="575.50"></text></g><g><title>test3`llvm::StringRef::compareMemory (1 samples, 0.07%)</title><rect x="82.3529%" y="549" width="0.0745%" height="15" fill="rgb(231,100,17)" fg:x="1106" fg:w="1"/><text x="82.6029%" y="559.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder12build_alloca17h80b1468df8d1a507E (2 samples, 0.15%)</title><rect x="82.4274%" y="693" width="0.1489%" height="15" fill="rgb(245,23,12)" fg:x="1107" fg:w="2"/><text x="82.6774%" y="703.50"></text></g><g><title>test3`LLVMBuildAlloca (1 samples, 0.07%)</title><rect x="82.5019%" y="677" width="0.0745%" height="15" fill="rgb(249,55,22)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="687.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAlloca (1 samples, 0.07%)</title><rect x="82.5019%" y="661" width="0.0745%" height="15" fill="rgb(207,134,9)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="671.50"></text></g><g><title>test3`llvm::AllocaInst::AllocaInst (1 samples, 0.07%)</title><rect x="82.5019%" y="645" width="0.0745%" height="15" fill="rgb(218,134,0)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="655.50"></text></g><g><title>test3`llvm::FPMathOperator::getFPAccuracy (1 samples, 0.07%)</title><rect x="82.5019%" y="629" width="0.0745%" height="15" fill="rgb(213,212,33)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="639.50"></text></g><g><title>test3`llvm::ConstantInt::get (1 samples, 0.07%)</title><rect x="82.5019%" y="613" width="0.0745%" height="15" fill="rgb(252,106,18)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="623.50"></text></g><g><title>test3`llvm::ConstantInt::get (1 samples, 0.07%)</title><rect x="82.5019%" y="597" width="0.0745%" height="15" fill="rgb(208,126,42)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="607.50"></text></g><g><title>test3`llvm::ConstantInt::ConstantInt (1 samples, 0.07%)</title><rect x="82.5019%" y="581" width="0.0745%" height="15" fill="rgb(246,175,29)" fg:x="1108" fg:w="1"/><text x="82.7519%" y="591.50"></text></g><g><title>test3`ZN7inkwell7builder7Builder22build_aggregate_return17h5252c7bbad58090eE (1 samples, 0.07%)</title><rect x="82.5763%" y="693" width="0.0745%" height="15" fill="rgb(215,13,50)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="703.50"></text></g><g><title>test3`LLVMBuildAggregateRet (1 samples, 0.07%)</title><rect x="82.5763%" y="677" width="0.0745%" height="15" fill="rgb(216,172,15)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="687.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateAggregateRet (1 samples, 0.07%)</title><rect x="82.5763%" y="661" width="0.0745%" height="15" fill="rgb(212,103,13)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="671.50"></text></g><g><title>test3`llvm::IRBuilderBase::CreateInsertValue (1 samples, 0.07%)</title><rect x="82.5763%" y="645" width="0.0745%" height="15" fill="rgb(231,171,36)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="655.50"></text></g><g><title>test3`llvm::IRBuilderBase::Insert (1 samples, 0.07%)</title><rect x="82.5763%" y="629" width="0.0745%" height="15" fill="rgb(250,123,20)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="639.50"></text></g><g><title>test3`llvm::IRBuilderDefaultInserter::InsertHelper (1 samples, 0.07%)</title><rect x="82.5763%" y="613" width="0.0745%" height="15" fill="rgb(212,53,50)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="623.50"></text></g><g><title>test3`llvm::Value::setName (1 samples, 0.07%)</title><rect x="82.5763%" y="597" width="0.0745%" height="15" fill="rgb(243,54,12)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="607.50"></text></g><g><title>test3`llvm::Value::setNameImpl (1 samples, 0.07%)</title><rect x="82.5763%" y="581" width="0.0745%" height="15" fill="rgb(234,101,34)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="591.50"></text></g><g><title>test3`llvm::ValueSymbolTable::createValueName (1 samples, 0.07%)</title><rect x="82.5763%" y="565" width="0.0745%" height="15" fill="rgb(254,67,22)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="575.50"></text></g><g><title>test3`llvm::ValueSymbolTable::makeUniqueName (1 samples, 0.07%)</title><rect x="82.5763%" y="549" width="0.0745%" height="15" fill="rgb(250,35,47)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="559.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="82.5763%" y="533" width="0.0745%" height="15" fill="rgb(226,126,38)" fg:x="1109" fg:w="1"/><text x="82.8263%" y="543.50"></text></g><g><title>test3`llvm::detail::DenseSetImpl&lt;llvm::StructType * __ptr64,llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::AnonStructTypeKeyInfo&gt;::insert_as (1 samples, 0.07%)</title><rect x="82.6508%" y="645" width="0.0745%" height="15" fill="rgb(216,138,53)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="655.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;::insert_as (1 samples, 0.07%)</title><rect x="82.6508%" y="629" width="0.0745%" height="15" fill="rgb(246,199,43)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="639.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;::InsertIntoBucketWithLookup (1 samples, 0.07%)</title><rect x="82.6508%" y="613" width="0.0745%" height="15" fill="rgb(232,125,11)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="623.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="82.6508%" y="597" width="0.0745%" height="15" fill="rgb(218,219,45)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="607.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="82.6508%" y="581" width="0.0745%" height="15" fill="rgb(216,102,54)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="591.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="82.6508%" y="565" width="0.0745%" height="15" fill="rgb(250,228,7)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="575.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;,llvm::StructType * __ptr64,llvm::detail::DenseSetEmpty,llvm::AnonStructTypeKeyInfo,llvm::detail::DenseSetPair&lt;llvm::StructType * __ptr64&gt; &gt;::getHashValue (1 samples, 0.07%)</title><rect x="82.6508%" y="549" width="0.0745%" height="15" fill="rgb(226,125,25)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="559.50"></text></g><g><title>test3`llvm::AnonStructTypeKeyInfo::getHashValue (1 samples, 0.07%)</title><rect x="82.6508%" y="533" width="0.0745%" height="15" fill="rgb(224,165,27)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="543.50"></text></g><g><title>test3`llvm::hash_combine_range (1 samples, 0.07%)</title><rect x="82.6508%" y="517" width="0.0745%" height="15" fill="rgb(233,86,3)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="527.50"></text></g><g><title>test3`llvm::hashing::detail::hash_combine_range_impl (1 samples, 0.07%)</title><rect x="82.6508%" y="501" width="0.0745%" height="15" fill="rgb(228,116,20)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="511.50"></text></g><g><title>test3`llvm::hashing::detail::get_execution_seed (1 samples, 0.07%)</title><rect x="82.6508%" y="485" width="0.0745%" height="15" fill="rgb(209,192,17)" fg:x="1110" fg:w="1"/><text x="82.9008%" y="495.50"></text></g><g><title>test3`ZN13rusty_js_core5types6JValue4call17hc97e09d50ed61c1bE (393 samples, 29.26%)</title><rect x="53.5369%" y="757" width="29.2628%" height="15" fill="rgb(224,88,34)" fg:x="719" fg:w="393"/><text x="53.7869%" y="767.50">test3`ZN13rusty_js_core5types6JValue4call17hc97..</text></g><g><title>test3`ZN13rusty_js_core7bultins8function18JSFunctionInstance4call17h19b1ec402cfe66c2E (386 samples, 28.74%)</title><rect x="54.0581%" y="741" width="28.7416%" height="15" fill="rgb(233,38,6)" fg:x="726" fg:w="386"/><text x="54.3081%" y="751.50">test3`ZN13rusty_js_core7bultins8function18JSFu..</text></g><g><title>test3`ZN13rusty_js_core7bultins8function10JSFunction4Call17h28632203c469f8e3E (382 samples, 28.44%)</title><rect x="54.3559%" y="725" width="28.4438%" height="15" fill="rgb(212,59,30)" fg:x="730" fg:w="382"/><text x="54.6059%" y="735.50">test3`ZN13rusty_js_core7bultins8function10JSFu..</text></g><g><title>test3`ZN13rusty_js_core8baseline4llvm7CodeGen3new17h0267c7c734788792E (9 samples, 0.67%)</title><rect x="82.1296%" y="709" width="0.6701%" height="15" fill="rgb(213,80,3)" fg:x="1103" fg:w="9"/><text x="82.3796%" y="719.50"></text></g><g><title>test3`ZN7inkwell7context11ContextImpl11struct_type17h11c7050e903ba1aaE (2 samples, 0.15%)</title><rect x="82.6508%" y="693" width="0.1489%" height="15" fill="rgb(251,178,7)" fg:x="1110" fg:w="2"/><text x="82.9008%" y="703.50"></text></g><g><title>test3`LLVMStructTypeInContext (2 samples, 0.15%)</title><rect x="82.6508%" y="677" width="0.1489%" height="15" fill="rgb(213,154,26)" fg:x="1110" fg:w="2"/><text x="82.9008%" y="687.50"></text></g><g><title>test3`llvm::StructType::get (2 samples, 0.15%)</title><rect x="82.6508%" y="661" width="0.1489%" height="15" fill="rgb(238,165,49)" fg:x="1110" fg:w="2"/><text x="82.9008%" y="671.50"></text></g><g><title>test3`operator new&lt;llvm::MallocAllocator,4096,4096,128&gt; (1 samples, 0.07%)</title><rect x="82.7252%" y="645" width="0.0745%" height="15" fill="rgb(248,91,46)" fg:x="1111" fg:w="1"/><text x="82.9752%" y="655.50"></text></g><g><title>test3`ZN13rusty_js_core7runtime7Runtime10run_module17h1f4ac403ce6ac6d6E (498 samples, 37.08%)</title><rect x="45.7930%" y="789" width="37.0812%" height="15" fill="rgb(244,21,52)" fg:x="615" fg:w="498"/><text x="46.0430%" y="799.50">test3`ZN13rusty_js_core7runtime7Runtime10run_module17h1f4ac4..</text></g><g><title>test3`ZN4core3ptr96drop_in_place$LT$alloc..boxed..Box$LT$swc_ecma_ast..typescript..TsTypeParamInstantiation$GT$$GT$17h25f725e0cac2a084E.llvm.8428236992396442899 (475 samples, 35.37%)</title><rect x="47.5056%" y="773" width="35.3686%" height="15" fill="rgb(247,122,20)" fg:x="638" fg:w="475"/><text x="47.7556%" y="783.50">test3`ZN4core3ptr96drop_in_place$LT$alloc..boxed..Box$LT$..</text></g><g><title>test3`ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfbc68dd3d13876eeE (1 samples, 0.07%)</title><rect x="82.7997%" y="757" width="0.0745%" height="15" fill="rgb(218,27,9)" fg:x="1112" fg:w="1"/><text x="83.0497%" y="767.50"></text></g><g><title>ntdll`LdrUnloadAlternateResourceModuleEx (1 samples, 0.07%)</title><rect x="82.9486%" y="565" width="0.0745%" height="15" fill="rgb(246,7,6)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="575.50"></text></g><g><title>ntdll`RtlReleaseActivationContext (1 samples, 0.07%)</title><rect x="82.9486%" y="549" width="0.0745%" height="15" fill="rgb(227,135,54)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="559.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="82.9486%" y="533" width="0.0745%" height="15" fill="rgb(247,14,11)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="543.50"></text></g><g><title>ntdll`TpAllocWork (1 samples, 0.07%)</title><rect x="82.9486%" y="517" width="0.0745%" height="15" fill="rgb(206,149,34)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="527.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 0.07%)</title><rect x="82.9486%" y="501" width="0.0745%" height="15" fill="rgb(227,228,4)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="511.50"></text></g><g><title>ntdll`LdrResolveDelayLoadedAPI (1 samples, 0.07%)</title><rect x="82.9486%" y="485" width="0.0745%" height="15" fill="rgb(238,218,28)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="495.50"></text></g><g><title>ntdll`RtlImageNtHeader (1 samples, 0.07%)</title><rect x="82.9486%" y="469" width="0.0745%" height="15" fill="rgb(252,86,40)" fg:x="1114" fg:w="1"/><text x="83.1986%" y="479.50"></text></g><g><title>`0x7FFF260A1090 (1 samples, 0.07%)</title><rect x="83.0975%" y="469" width="0.0745%" height="15" fill="rgb(251,225,11)" fg:x="1116" fg:w="1"/><text x="83.3475%" y="479.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="83.0975%" y="453" width="0.0745%" height="15" fill="rgb(206,46,49)" fg:x="1116" fg:w="1"/><text x="83.3475%" y="463.50"></text></g><g><title>ntdll`EtwEventSetInformation (1 samples, 0.07%)</title><rect x="83.0975%" y="437" width="0.0745%" height="15" fill="rgb(245,128,24)" fg:x="1116" fg:w="1"/><text x="83.3475%" y="447.50"></text></g><g><title>ntdll`ZwTraceControl (1 samples, 0.07%)</title><rect x="83.0975%" y="421" width="0.0745%" height="15" fill="rgb(219,177,34)" fg:x="1116" fg:w="1"/><text x="83.3475%" y="431.50"></text></g><g><title>bcrypt`BCryptDecrypt (4 samples, 0.30%)</title><rect x="82.9486%" y="661" width="0.2978%" height="15" fill="rgb(218,60,48)" fg:x="1114" fg:w="4"/><text x="83.1986%" y="671.50"></text></g><g><title>bcrypt`BCryptDecrypt (4 samples, 0.30%)</title><rect x="82.9486%" y="645" width="0.2978%" height="15" fill="rgb(221,11,5)" fg:x="1114" fg:w="4"/><text x="83.1986%" y="655.50"></text></g><g><title>KernelBase`LoadLibraryExW (4 samples, 0.30%)</title><rect x="82.9486%" y="629" width="0.2978%" height="15" fill="rgb(220,148,13)" fg:x="1114" fg:w="4"/><text x="83.1986%" y="639.50"></text></g><g><title>ntdll`LdrLoadDll (4 samples, 0.30%)</title><rect x="82.9486%" y="613" width="0.2978%" height="15" fill="rgb(210,16,3)" fg:x="1114" fg:w="4"/><text x="83.1986%" y="623.50"></text></g><g><title>ntdll`RtlDosPathNameToNtPathName_U (4 samples, 0.30%)</title><rect x="82.9486%" y="597" width="0.2978%" height="15" fill="rgb(236,80,2)" fg:x="1114" fg:w="4"/><text x="83.1986%" y="607.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (4 samples, 0.30%)</title><rect x="82.9486%" y="581" width="0.2978%" height="15" fill="rgb(239,129,19)" fg:x="1114" fg:w="4"/><text x="83.1986%" y="591.50"></text></g><g><title>ntdll`RtlSwitchedVVI (3 samples, 0.22%)</title><rect x="83.0231%" y="565" width="0.2234%" height="15" fill="rgb(220,106,35)" fg:x="1115" fg:w="3"/><text x="83.2731%" y="575.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (3 samples, 0.22%)</title><rect x="83.0231%" y="549" width="0.2234%" height="15" fill="rgb(252,139,45)" fg:x="1115" fg:w="3"/><text x="83.2731%" y="559.50"></text></g><g><title>ntdll`LdrGetProcedureAddressEx (3 samples, 0.22%)</title><rect x="83.0231%" y="533" width="0.2234%" height="15" fill="rgb(229,8,36)" fg:x="1115" fg:w="3"/><text x="83.2731%" y="543.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (2 samples, 0.15%)</title><rect x="83.0975%" y="517" width="0.1489%" height="15" fill="rgb(230,126,33)" fg:x="1116" fg:w="2"/><text x="83.3475%" y="527.50"></text></g><g><title>bcryptprimitives`GetKeyDerivationInterface (2 samples, 0.15%)</title><rect x="83.0975%" y="501" width="0.1489%" height="15" fill="rgb(239,140,21)" fg:x="1116" fg:w="2"/><text x="83.3475%" y="511.50"></text></g><g><title>bcryptprimitives`ProcessPrng (2 samples, 0.15%)</title><rect x="83.0975%" y="485" width="0.1489%" height="15" fill="rgb(254,104,9)" fg:x="1116" fg:w="2"/><text x="83.3475%" y="495.50"></text></g><g><title>bcryptprimitives`ProcessPrng (1 samples, 0.07%)</title><rect x="83.1720%" y="469" width="0.0745%" height="15" fill="rgb(239,52,14)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="479.50"></text></g><g><title>bcryptprimitives`GetSecretAgreementInterface (1 samples, 0.07%)</title><rect x="83.1720%" y="453" width="0.0745%" height="15" fill="rgb(208,227,44)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="463.50"></text></g><g><title>bcryptprimitives`GetSecretAgreementInterface (1 samples, 0.07%)</title><rect x="83.1720%" y="437" width="0.0745%" height="15" fill="rgb(246,18,19)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="447.50"></text></g><g><title>ntdll`ZwOpenFile (1 samples, 0.07%)</title><rect x="83.1720%" y="421" width="0.0745%" height="15" fill="rgb(235,228,25)" fg:x="1117" fg:w="1"/><text x="83.4220%" y="431.50"></text></g><g><title>test3`ZN10swc_common10syntax_pos7Globals3new17h78e2287a80371d0fE (6 samples, 0.45%)</title><rect x="82.8742%" y="773" width="0.4468%" height="15" fill="rgb(240,156,20)" fg:x="1113" fg:w="6"/><text x="83.1242%" y="783.50"></text></g><g><title>test3`ZN10swc_common10syntax_pos7hygiene11HygieneData3new17h1537e6f2e7e03910E (6 samples, 0.45%)</title><rect x="82.8742%" y="757" width="0.4468%" height="15" fill="rgb(224,8,20)" fg:x="1113" fg:w="6"/><text x="83.1242%" y="767.50"></text></g><g><title>test3`ZN9once_cell4race8once_box16OnceBox$LT$T$GT$11get_or_init17h583a661a95d5c9b7E (5 samples, 0.37%)</title><rect x="82.9486%" y="741" width="0.3723%" height="15" fill="rgb(214,12,52)" fg:x="1114" fg:w="5"/><text x="83.1986%" y="751.50"></text></g><g><title>test3`ZN9getrandom9getrandom17h2e686cc27756b3ddE (5 samples, 0.37%)</title><rect x="82.9486%" y="725" width="0.3723%" height="15" fill="rgb(211,220,47)" fg:x="1114" fg:w="5"/><text x="83.1986%" y="735.50"></text></g><g><title>bcrypt`BCryptGenRandom (5 samples, 0.37%)</title><rect x="82.9486%" y="709" width="0.3723%" height="15" fill="rgb(250,173,5)" fg:x="1114" fg:w="5"/><text x="83.1986%" y="719.50"></text></g><g><title>bcrypt`BCryptGenRandom (5 samples, 0.37%)</title><rect x="82.9486%" y="693" width="0.3723%" height="15" fill="rgb(250,125,52)" fg:x="1114" fg:w="5"/><text x="83.1986%" y="703.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (5 samples, 0.37%)</title><rect x="82.9486%" y="677" width="0.3723%" height="15" fill="rgb(209,133,18)" fg:x="1114" fg:w="5"/><text x="83.1986%" y="687.50"></text></g><g><title>bcrypt`BCryptResolveProviders (1 samples, 0.07%)</title><rect x="83.2465%" y="661" width="0.0745%" height="15" fill="rgb(216,173,22)" fg:x="1118" fg:w="1"/><text x="83.4965%" y="671.50"></text></g><g><title>bcrypt`BCryptGetProperty (1 samples, 0.07%)</title><rect x="83.2465%" y="645" width="0.0745%" height="15" fill="rgb(205,3,22)" fg:x="1118" fg:w="1"/><text x="83.4965%" y="655.50"></text></g><g><title>bcrypt`BCryptOpenAlgorithmProvider (1 samples, 0.07%)</title><rect x="83.2465%" y="629" width="0.0745%" height="15" fill="rgb(248,22,20)" fg:x="1118" fg:w="1"/><text x="83.4965%" y="639.50"></text></g><g><title>ntdll`NtDeviceIoControlFile (1 samples, 0.07%)</title><rect x="83.2465%" y="613" width="0.0745%" height="15" fill="rgb(233,6,29)" fg:x="1118" fg:w="1"/><text x="83.4965%" y="623.50"></text></g><g><title>test3`ZN13rusty_js_core4ecma5array4init17h95d19dd462dccfd6E (1 samples, 0.07%)</title><rect x="83.3209%" y="757" width="0.0745%" height="15" fill="rgb(240,22,54)" fg:x="1119" fg:w="1"/><text x="83.5709%" y="767.50"></text></g><g><title>test3`ZN13rusty_js_core4ecma6enable17h7d37bd15ef100884E (2 samples, 0.15%)</title><rect x="83.3209%" y="773" width="0.1489%" height="15" fill="rgb(231,133,32)" fg:x="1119" fg:w="2"/><text x="83.5709%" y="783.50"></text></g><g><title>test3`ZN13rusty_js_core7bultins6object7JObject23insert_property_builtin17h9bc127b8024ba556E (1 samples, 0.07%)</title><rect x="83.3954%" y="757" width="0.0745%" height="15" fill="rgb(248,193,4)" fg:x="1120" fg:w="1"/><text x="83.6454%" y="767.50"></text></g><g><title>test3`ZN17crossbeam_channel7channel9unbounded17h594d550bbbcd668cE (1 samples, 0.07%)</title><rect x="83.4698%" y="773" width="0.0745%" height="15" fill="rgb(211,178,46)" fg:x="1121" fg:w="1"/><text x="83.7198%" y="783.50"></text></g><g><title>test3`std::sync::poison::Flag::new (1 samples, 0.07%)</title><rect x="83.4698%" y="757" width="0.0745%" height="15" fill="rgb(224,5,42)" fg:x="1121" fg:w="1"/><text x="83.7198%" y="767.50"></text></g><g><title>test3`std::sys_common::thread::min_stack (1 samples, 0.07%)</title><rect x="83.5443%" y="757" width="0.0745%" height="15" fill="rgb(239,176,25)" fg:x="1122" fg:w="1"/><text x="83.7943%" y="767.50"></text></g><g><title>test3`std::env::_var_os (1 samples, 0.07%)</title><rect x="83.5443%" y="741" width="0.0745%" height="15" fill="rgb(245,187,50)" fg:x="1122" fg:w="1"/><text x="83.7943%" y="751.50"></text></g><g><title>test3`std::sys::windows::to_u16s::inner (1 samples, 0.07%)</title><rect x="83.5443%" y="725" width="0.0745%" height="15" fill="rgb(248,24,15)" fg:x="1122" fg:w="1"/><text x="83.7943%" y="735.50"></text></g><g><title>test3`core::iter::traits::iterator::Iterator::collect&lt;std::sys_common::wtf8::EncodeWide,alloc::vec::Vec (1 samples, 0.07%)</title><rect x="83.5443%" y="709" width="0.0745%" height="15" fill="rgb(205,166,13)" fg:x="1122" fg:w="1"/><text x="83.7943%" y="719.50"></text></g><g><title>test3`ZN3std6thread5spawn17h55b372b5e5c9a821E (2 samples, 0.15%)</title><rect x="83.5443%" y="773" width="0.1489%" height="15" fill="rgb(208,114,23)" fg:x="1122" fg:w="2"/><text x="83.7943%" y="783.50"></text></g><g><title>test3`std::thread::Thread::new (1 samples, 0.07%)</title><rect x="83.6188%" y="757" width="0.0745%" height="15" fill="rgb(239,127,18)" fg:x="1123" fg:w="1"/><text x="83.8688%" y="767.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="83.6188%" y="741" width="0.0745%" height="15" fill="rgb(219,154,28)" fg:x="1123" fg:w="1"/><text x="83.8688%" y="751.50"></text></g><g><title>test3`llvm::EngineBuilder::create (1 samples, 0.07%)</title><rect x="83.6932%" y="725" width="0.0745%" height="15" fill="rgb(225,157,23)" fg:x="1124" fg:w="1"/><text x="83.9432%" y="735.50"></text></g><g><title>test3`llvm::Target::hasJIT (1 samples, 0.07%)</title><rect x="83.6932%" y="709" width="0.0745%" height="15" fill="rgb(219,8,6)" fg:x="1124" fg:w="1"/><text x="83.9432%" y="719.50"></text></g><g><title>test3`llvm::LLVMTargetMachine::LLVMTargetMachine (1 samples, 0.07%)</title><rect x="83.7677%" y="645" width="0.0745%" height="15" fill="rgb(212,47,6)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="655.50"></text></g><g><title>test3`llvm::TargetMachine::TargetMachine (1 samples, 0.07%)</title><rect x="83.7677%" y="629" width="0.0745%" height="15" fill="rgb(224,190,4)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="639.50"></text></g><g><title>test3`llvm::DataLayout::DataLayout (1 samples, 0.07%)</title><rect x="83.7677%" y="613" width="0.0745%" height="15" fill="rgb(239,183,29)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="623.50"></text></g><g><title>test3`llvm::DataLayout::reset (1 samples, 0.07%)</title><rect x="83.7677%" y="597" width="0.0745%" height="15" fill="rgb(213,57,7)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="607.50"></text></g><g><title>test3`llvm::DataLayout::parseSpecifier (1 samples, 0.07%)</title><rect x="83.7677%" y="581" width="0.0745%" height="15" fill="rgb(216,148,1)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="591.50"></text></g><g><title>test3`llvm::StructLayout::StructLayout (1 samples, 0.07%)</title><rect x="83.7677%" y="565" width="0.0745%" height="15" fill="rgb(236,182,29)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="575.50"></text></g><g><title>test3`llvm::StructLayout::StructLayout (1 samples, 0.07%)</title><rect x="83.7677%" y="549" width="0.0745%" height="15" fill="rgb(244,120,48)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="559.50"></text></g><g><title>test3`llvm::StringRef::getAsInteger (1 samples, 0.07%)</title><rect x="83.7677%" y="533" width="0.0745%" height="15" fill="rgb(206,71,34)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="543.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="83.7677%" y="517" width="0.0745%" height="15" fill="rgb(242,32,6)" fg:x="1125" fg:w="1"/><text x="84.0177%" y="527.50"></text></g><g><title>test3`llvm::Target::createMCAsmInfo (1 samples, 0.07%)</title><rect x="83.8421%" y="629" width="0.0745%" height="15" fill="rgb(241,35,3)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="639.50"></text></g><g><title>test3`llvm::X86_MC::resolveVariantSchedClassImpl (1 samples, 0.07%)</title><rect x="83.8421%" y="613" width="0.0745%" height="15" fill="rgb(222,62,19)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="623.50"></text></g><g><title>test3`llvm::MCCFIInstruction::cfiDefCfa (1 samples, 0.07%)</title><rect x="83.8421%" y="597" width="0.0745%" height="15" fill="rgb(223,110,41)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="607.50"></text></g><g><title>test3`llvm::MCCFIInstruction::MCCFIInstruction (1 samples, 0.07%)</title><rect x="83.8421%" y="581" width="0.0745%" height="15" fill="rgb(208,224,4)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="591.50"></text></g><g><title>test3`llvm::StringRef::operator std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="83.8421%" y="565" width="0.0745%" height="15" fill="rgb(241,137,19)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="575.50"></text></g><g><title>test3`llvm::StringRef::str (1 samples, 0.07%)</title><rect x="83.8421%" y="549" width="0.0745%" height="15" fill="rgb(244,24,17)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="559.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="83.8421%" y="533" width="0.0745%" height="15" fill="rgb(245,178,49)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="543.50"></text></g><g><title>test3`std::_Container_proxy_ptr12&lt;std::allocator&lt;std::_Container_proxy&gt; &gt;::_Container_proxy_ptr12&lt;std::allocator (1 samples, 0.07%)</title><rect x="83.8421%" y="517" width="0.0745%" height="15" fill="rgb(219,160,38)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="527.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="83.8421%" y="501" width="0.0745%" height="15" fill="rgb(228,137,14)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="511.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="83.8421%" y="485" width="0.0745%" height="15" fill="rgb(237,134,11)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="495.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="83.8421%" y="469" width="0.0745%" height="15" fill="rgb(211,126,44)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="479.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="83.8421%" y="453" width="0.0745%" height="15" fill="rgb(226,171,33)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="463.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="83.8421%" y="437" width="0.0745%" height="15" fill="rgb(253,99,13)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="447.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="83.8421%" y="421" width="0.0745%" height="15" fill="rgb(244,48,7)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="431.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="83.8421%" y="405" width="0.0745%" height="15" fill="rgb(244,217,54)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="415.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="83.8421%" y="389" width="0.0745%" height="15" fill="rgb(224,15,18)" fg:x="1126" fg:w="1"/><text x="84.0921%" y="399.50"></text></g><g><title>test3`llvm::Target::createMCRegInfo (1 samples, 0.07%)</title><rect x="83.9166%" y="629" width="0.0745%" height="15" fill="rgb(244,99,12)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="639.50"></text></g><g><title>test3`llvm::X86_MC::resolveVariantSchedClassImpl (1 samples, 0.07%)</title><rect x="83.9166%" y="613" width="0.0745%" height="15" fill="rgb(233,226,8)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="623.50"></text></g><g><title>test3`llvm::X86_MC::initLLVMToSEHAndCVRegMapping (1 samples, 0.07%)</title><rect x="83.9166%" y="597" width="0.0745%" height="15" fill="rgb(229,211,3)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="607.50"></text></g><g><title>test3`llvm::MCRegisterInfo::mapLLVMRegToSEHReg (1 samples, 0.07%)</title><rect x="83.9166%" y="581" width="0.0745%" height="15" fill="rgb(216,140,21)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="591.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="83.9166%" y="565" width="0.0745%" height="15" fill="rgb(234,122,30)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="575.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="83.9166%" y="549" width="0.0745%" height="15" fill="rgb(236,25,46)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="559.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="83.9166%" y="533" width="0.0745%" height="15" fill="rgb(217,52,54)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="543.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="83.9166%" y="517" width="0.0745%" height="15" fill="rgb(222,29,26)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="527.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="83.9166%" y="501" width="0.0745%" height="15" fill="rgb(216,177,29)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="511.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="83.9166%" y="485" width="0.0745%" height="15" fill="rgb(247,136,51)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="495.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="83.9166%" y="469" width="0.0745%" height="15" fill="rgb(231,47,47)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="479.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="83.9166%" y="453" width="0.0745%" height="15" fill="rgb(211,192,36)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="463.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;,llvm::MCRegister,int,llvm::DenseMapInfo&lt;llvm::MCRegister&gt;,llvm::detail::DenseMapPair&lt;llvm::MCRegister,int&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="83.9166%" y="437" width="0.0745%" height="15" fill="rgb(229,156,32)" fg:x="1127" fg:w="1"/><text x="84.1666%" y="447.50"></text></g><g><title>test3`llvm::Triple::Triple (1 samples, 0.07%)</title><rect x="83.9911%" y="613" width="0.0745%" height="15" fill="rgb(248,213,20)" fg:x="1128" fg:w="1"/><text x="84.2411%" y="623.50"></text></g><g><title>test3`llvm::Triple::getCanonicalVersionForOS (1 samples, 0.07%)</title><rect x="83.9911%" y="597" width="0.0745%" height="15" fill="rgb(217,64,7)" fg:x="1128" fg:w="1"/><text x="84.2411%" y="607.50"></text></g><g><title>test3`llvm::StringSwitch (1 samples, 0.07%)</title><rect x="83.9911%" y="581" width="0.0745%" height="15" fill="rgb(232,142,8)" fg:x="1128" fg:w="1"/><text x="84.2411%" y="591.50"></text></g><g><title>test3`llvm::StringSwitch (1 samples, 0.07%)</title><rect x="83.9911%" y="565" width="0.0745%" height="15" fill="rgb(224,92,44)" fg:x="1128" fg:w="1"/><text x="84.2411%" y="575.50"></text></g><g><title>test3`llvm::StringSwitch (1 samples, 0.07%)</title><rect x="83.9911%" y="549" width="0.0745%" height="15" fill="rgb(214,169,17)" fg:x="1128" fg:w="1"/><text x="84.2411%" y="559.50"></text></g><g><title>test3`std::is_sorted&lt;llvm::SubtargetFeatureKV const * __ptr64,std::less (1 samples, 0.07%)</title><rect x="84.0655%" y="485" width="0.0745%" height="15" fill="rgb(210,59,37)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="495.50"></text></g><g><title>test3`std::is_sorted_until&lt;llvm::SubtargetFeatureKV const * __ptr64,std::less (1 samples, 0.07%)</title><rect x="84.0655%" y="469" width="0.0745%" height="15" fill="rgb(214,116,48)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="479.50"></text></g><g><title>test3`std::_Debug_lt_pred&lt;std::less (1 samples, 0.07%)</title><rect x="84.0655%" y="453" width="0.0745%" height="15" fill="rgb(244,191,6)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="463.50"></text></g><g><title>test3`std::less&lt;void&gt;::operator() (1 samples, 0.07%)</title><rect x="84.0655%" y="437" width="0.0745%" height="15" fill="rgb(241,50,52)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="447.50"></text></g><g><title>test3`llvm::SubtargetFeatureKV::operator (1 samples, 0.07%)</title><rect x="84.0655%" y="421" width="0.0745%" height="15" fill="rgb(236,75,39)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="431.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="84.0655%" y="405" width="0.0745%" height="15" fill="rgb(236,99,0)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="415.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="84.0655%" y="389" width="0.0745%" height="15" fill="rgb(207,202,15)" fg:x="1129" fg:w="1"/><text x="84.3155%" y="399.50"></text></g><g><title>test3`llvm::RegisterTargetMachine (6 samples, 0.45%)</title><rect x="83.7677%" y="677" width="0.4468%" height="15" fill="rgb(233,207,14)" fg:x="1125" fg:w="6"/><text x="84.0177%" y="687.50"></text></g><g><title>test3`llvm::X86TargetMachine::X86TargetMachine (6 samples, 0.45%)</title><rect x="83.7677%" y="661" width="0.4468%" height="15" fill="rgb(226,27,51)" fg:x="1125" fg:w="6"/><text x="84.0177%" y="671.50"></text></g><g><title>test3`llvm::LLVMTargetMachine::initAsmInfo (5 samples, 0.37%)</title><rect x="83.8421%" y="645" width="0.3723%" height="15" fill="rgb(206,104,42)" fg:x="1126" fg:w="5"/><text x="84.0921%" y="655.50"></text></g><g><title>test3`llvm::Target::createMCSubtargetInfo (3 samples, 0.22%)</title><rect x="83.9911%" y="629" width="0.2234%" height="15" fill="rgb(212,225,4)" fg:x="1128" fg:w="3"/><text x="84.2411%" y="639.50"></text></g><g><title>test3`llvm::X86_MC::createX86MCSubtargetInfo (2 samples, 0.15%)</title><rect x="84.0655%" y="613" width="0.1489%" height="15" fill="rgb(233,96,42)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="623.50"></text></g><g><title>test3`llvm::X86_MC::resolveVariantSchedClassImpl (2 samples, 0.15%)</title><rect x="84.0655%" y="597" width="0.1489%" height="15" fill="rgb(229,21,32)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="607.50"></text></g><g><title>test3`llvm::X86GenMCSubtargetInfo::X86GenMCSubtargetInfo (2 samples, 0.15%)</title><rect x="84.0655%" y="581" width="0.1489%" height="15" fill="rgb(226,216,24)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="591.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::MCSubtargetInfo (2 samples, 0.15%)</title><rect x="84.0655%" y="565" width="0.1489%" height="15" fill="rgb(221,163,17)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="575.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::InitMCProcessorInfo (2 samples, 0.15%)</title><rect x="84.0655%" y="549" width="0.1489%" height="15" fill="rgb(216,216,42)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="559.50"></text></g><g><title>test3`llvm::MCSubtargetInfo::getMinPrefetchStride (2 samples, 0.15%)</title><rect x="84.0655%" y="533" width="0.1489%" height="15" fill="rgb(240,118,7)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="543.50"></text></g><g><title>test3`llvm::is_sorted&lt;llvm::ArrayRef (2 samples, 0.15%)</title><rect x="84.0655%" y="517" width="0.1489%" height="15" fill="rgb(221,67,37)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="527.50"></text></g><g><title>test3`std::is_sorted (2 samples, 0.15%)</title><rect x="84.0655%" y="501" width="0.1489%" height="15" fill="rgb(241,32,44)" fg:x="1129" fg:w="2"/><text x="84.3155%" y="511.50"></text></g><g><title>test3`std::is_sorted&lt;llvm::SubtargetSubTypeKV const * __ptr64,std::less (1 samples, 0.07%)</title><rect x="84.1400%" y="485" width="0.0745%" height="15" fill="rgb(235,204,43)" fg:x="1130" fg:w="1"/><text x="84.3900%" y="495.50"></text></g><g><title>test3`std::is_sorted_until&lt;llvm::SubtargetSubTypeKV const * __ptr64,std::less (1 samples, 0.07%)</title><rect x="84.1400%" y="469" width="0.0745%" height="15" fill="rgb(213,116,10)" fg:x="1130" fg:w="1"/><text x="84.3900%" y="479.50"></text></g><g><title>test3`std::_Debug_lt_pred&lt;std::less (1 samples, 0.07%)</title><rect x="84.1400%" y="453" width="0.0745%" height="15" fill="rgb(239,15,48)" fg:x="1130" fg:w="1"/><text x="84.3900%" y="463.50"></text></g><g><title>test3`std::less&lt;void&gt;::operator() (1 samples, 0.07%)</title><rect x="84.1400%" y="437" width="0.0745%" height="15" fill="rgb(207,123,36)" fg:x="1130" fg:w="1"/><text x="84.3900%" y="447.50"></text></g><g><title>test3`llvm::SubtargetFeatureKV::operator (1 samples, 0.07%)</title><rect x="84.1400%" y="421" width="0.0745%" height="15" fill="rgb(209,103,30)" fg:x="1130" fg:w="1"/><text x="84.3900%" y="431.50"></text></g><g><title>test3`llvm::Target::createTargetMachine (7 samples, 0.52%)</title><rect x="83.7677%" y="693" width="0.5212%" height="15" fill="rgb(238,100,19)" fg:x="1125" fg:w="7"/><text x="84.0177%" y="703.50"></text></g><g><title>test3`llvm::Triple::Triple (1 samples, 0.07%)</title><rect x="84.2144%" y="677" width="0.0745%" height="15" fill="rgb(244,30,14)" fg:x="1131" fg:w="1"/><text x="84.4644%" y="687.50"></text></g><g><title>test3`llvm::Twine::str (1 samples, 0.07%)</title><rect x="84.2144%" y="661" width="0.0745%" height="15" fill="rgb(249,174,6)" fg:x="1131" fg:w="1"/><text x="84.4644%" y="671.50"></text></g><g><title>test3`llvm::SmallString&lt;256&gt;::SmallString (1 samples, 0.07%)</title><rect x="84.2144%" y="645" width="0.0745%" height="15" fill="rgb(235,213,41)" fg:x="1131" fg:w="1"/><text x="84.4644%" y="655.50"></text></g><g><title>test3`llvm::EngineBuilder::selectTarget (8 samples, 0.60%)</title><rect x="83.7677%" y="709" width="0.5957%" height="15" fill="rgb(213,118,6)" fg:x="1125" fg:w="8"/><text x="84.0177%" y="719.50"></text></g><g><title>test3`llvm::sys::getProcessTriple (1 samples, 0.07%)</title><rect x="84.2889%" y="693" width="0.0745%" height="15" fill="rgb(235,44,51)" fg:x="1132" fg:w="1"/><text x="84.5389%" y="703.50"></text></g><g><title>test3`llvm::Triple::normalize (1 samples, 0.07%)</title><rect x="84.2889%" y="677" width="0.0745%" height="15" fill="rgb(217,9,53)" fg:x="1132" fg:w="1"/><text x="84.5389%" y="687.50"></text></g><g><title>test3`LLVMCreateJITCompilerForModule (10 samples, 0.74%)</title><rect x="83.6932%" y="757" width="0.7446%" height="15" fill="rgb(237,172,34)" fg:x="1124" fg:w="10"/><text x="83.9432%" y="767.50"></text></g><g><title>test3`llvm::EngineBuilder::create (10 samples, 0.74%)</title><rect x="83.6932%" y="741" width="0.7446%" height="15" fill="rgb(206,206,11)" fg:x="1124" fg:w="10"/><text x="83.9432%" y="751.50"></text></g><g><title>test3`llvm::EngineBuilder::selectTarget (9 samples, 0.67%)</title><rect x="83.7677%" y="725" width="0.6701%" height="15" fill="rgb(214,149,29)" fg:x="1125" fg:w="9"/><text x="84.0177%" y="735.50"></text></g><g><title>test3`llvm::Triple::setTriple (1 samples, 0.07%)</title><rect x="84.3634%" y="709" width="0.0745%" height="15" fill="rgb(208,123,3)" fg:x="1133" fg:w="1"/><text x="84.6134%" y="719.50"></text></g><g><title>test3`llvm::Triple::Triple (1 samples, 0.07%)</title><rect x="84.3634%" y="693" width="0.0745%" height="15" fill="rgb(229,126,4)" fg:x="1133" fg:w="1"/><text x="84.6134%" y="703.50"></text></g><g><title>test3`llvm::Triple::getCanonicalVersionForOS (1 samples, 0.07%)</title><rect x="84.3634%" y="677" width="0.0745%" height="15" fill="rgb(222,92,36)" fg:x="1133" fg:w="1"/><text x="84.6134%" y="687.50"></text></g><g><title>test3`llvm::initializeIRTranslatorPass (1 samples, 0.07%)</title><rect x="84.4378%" y="693" width="0.0745%" height="15" fill="rgb(216,39,41)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="703.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="677" width="0.0745%" height="15" fill="rgb(253,127,28)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="687.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="661" width="0.0745%" height="15" fill="rgb(249,152,51)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="671.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="645" width="0.0745%" height="15" fill="rgb(209,123,42)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="655.50"></text></g><g><title>test3`llvm::initializeIRTranslatorPass (1 samples, 0.07%)</title><rect x="84.4378%" y="629" width="0.0745%" height="15" fill="rgb(241,118,22)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="639.50"></text></g><g><title>test3`llvm::initializeBlockFrequencyInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.4378%" y="613" width="0.0745%" height="15" fill="rgb(208,25,7)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="623.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="597" width="0.0745%" height="15" fill="rgb(243,144,39)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="607.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="581" width="0.0745%" height="15" fill="rgb(250,50,5)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="591.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="565" width="0.0745%" height="15" fill="rgb(207,67,11)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="575.50"></text></g><g><title>test3`llvm::initializeBlockFrequencyInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.4378%" y="549" width="0.0745%" height="15" fill="rgb(245,204,40)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="559.50"></text></g><g><title>test3`llvm::initializeBranchProbabilityInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.4378%" y="533" width="0.0745%" height="15" fill="rgb(238,228,24)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="543.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="517" width="0.0745%" height="15" fill="rgb(217,116,22)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="527.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="501" width="0.0745%" height="15" fill="rgb(234,98,12)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="511.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="485" width="0.0745%" height="15" fill="rgb(242,170,50)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="495.50"></text></g><g><title>test3`llvm::initializeBranchProbabilityInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.4378%" y="469" width="0.0745%" height="15" fill="rgb(235,7,5)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="479.50"></text></g><g><title>test3`llvm::initializeLoopInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.4378%" y="453" width="0.0745%" height="15" fill="rgb(241,114,28)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="463.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="437" width="0.0745%" height="15" fill="rgb(246,112,42)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="447.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="421" width="0.0745%" height="15" fill="rgb(248,228,14)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="431.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.4378%" y="405" width="0.0745%" height="15" fill="rgb(208,133,18)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="415.50"></text></g><g><title>test3`llvm::initializeLoopInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.4378%" y="389" width="0.0745%" height="15" fill="rgb(207,35,49)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="399.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="84.4378%" y="373" width="0.0745%" height="15" fill="rgb(205,68,36)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="383.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="84.4378%" y="357" width="0.0745%" height="15" fill="rgb(245,62,40)" fg:x="1134" fg:w="1"/><text x="84.6878%" y="367.50"></text></g><g><title>test3`llvm::initializeGlobalISel (2 samples, 0.15%)</title><rect x="84.4378%" y="709" width="0.1489%" height="15" fill="rgb(228,27,24)" fg:x="1134" fg:w="2"/><text x="84.6878%" y="719.50"></text></g><g><title>test3`llvm::initializeLocalizerPass (1 samples, 0.07%)</title><rect x="84.5123%" y="693" width="0.0745%" height="15" fill="rgb(253,19,12)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="703.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5123%" y="677" width="0.0745%" height="15" fill="rgb(232,28,20)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="687.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5123%" y="661" width="0.0745%" height="15" fill="rgb(218,35,51)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="671.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5123%" y="645" width="0.0745%" height="15" fill="rgb(212,90,40)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="655.50"></text></g><g><title>test3`llvm::initializeLocalizerPass (1 samples, 0.07%)</title><rect x="84.5123%" y="629" width="0.0745%" height="15" fill="rgb(220,172,12)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="639.50"></text></g><g><title>test3`llvm::initializeTargetTransformInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.5123%" y="613" width="0.0745%" height="15" fill="rgb(226,159,20)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="623.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5123%" y="597" width="0.0745%" height="15" fill="rgb(234,205,16)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="607.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5123%" y="581" width="0.0745%" height="15" fill="rgb(207,9,39)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="591.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5123%" y="565" width="0.0745%" height="15" fill="rgb(249,143,15)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="575.50"></text></g><g><title>test3`llvm::initializeTargetTransformInfoWrapperPassPass (1 samples, 0.07%)</title><rect x="84.5123%" y="549" width="0.0745%" height="15" fill="rgb(253,133,29)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="559.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="84.5123%" y="533" width="0.0745%" height="15" fill="rgb(221,187,0)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="543.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="84.5123%" y="517" width="0.0745%" height="15" fill="rgb(205,204,26)" fg:x="1135" fg:w="1"/><text x="84.7623%" y="527.50"></text></g><g><title>test3`llvm::initializeWinEHStatePassPass (1 samples, 0.07%)</title><rect x="84.5867%" y="709" width="0.0745%" height="15" fill="rgb(224,68,54)" fg:x="1136" fg:w="1"/><text x="84.8367%" y="719.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5867%" y="693" width="0.0745%" height="15" fill="rgb(209,67,4)" fg:x="1136" fg:w="1"/><text x="84.8367%" y="703.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5867%" y="677" width="0.0745%" height="15" fill="rgb(228,229,18)" fg:x="1136" fg:w="1"/><text x="84.8367%" y="687.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.5867%" y="661" width="0.0745%" height="15" fill="rgb(231,89,13)" fg:x="1136" fg:w="1"/><text x="84.8367%" y="671.50"></text></g><g><title>test3`llvm::initializeWinEHStatePassPass (1 samples, 0.07%)</title><rect x="84.5867%" y="645" width="0.0745%" height="15" fill="rgb(210,182,18)" fg:x="1136" fg:w="1"/><text x="84.8367%" y="655.50"></text></g><g><title>test3`llvm::initializeX86AvoidSFBPassPass (1 samples, 0.07%)</title><rect x="84.6612%" y="709" width="0.0745%" height="15" fill="rgb(240,105,2)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="719.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.6612%" y="693" width="0.0745%" height="15" fill="rgb(207,170,50)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="703.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.6612%" y="677" width="0.0745%" height="15" fill="rgb(232,133,24)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="687.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.6612%" y="661" width="0.0745%" height="15" fill="rgb(235,166,27)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="671.50"></text></g><g><title>test3`llvm::initializeX86AvoidSFBPassPass (1 samples, 0.07%)</title><rect x="84.6612%" y="645" width="0.0745%" height="15" fill="rgb(209,19,13)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="655.50"></text></g><g><title>test3`llvm::initializeAAResultsWrapperPassPass (1 samples, 0.07%)</title><rect x="84.6612%" y="629" width="0.0745%" height="15" fill="rgb(226,79,39)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="639.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.6612%" y="613" width="0.0745%" height="15" fill="rgb(222,163,10)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="623.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.6612%" y="597" width="0.0745%" height="15" fill="rgb(214,44,19)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="607.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.6612%" y="581" width="0.0745%" height="15" fill="rgb(210,217,13)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="591.50"></text></g><g><title>test3`llvm::initializeExternalAAWrapperPassPass (1 samples, 0.07%)</title><rect x="84.6612%" y="565" width="0.0745%" height="15" fill="rgb(237,61,54)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="575.50"></text></g><g><title>test3`llvm::initializeGlobalsAAWrapperPassPass (1 samples, 0.07%)</title><rect x="84.6612%" y="549" width="0.0745%" height="15" fill="rgb(226,184,24)" fg:x="1137" fg:w="1"/><text x="84.9112%" y="559.50"></text></g><g><title>test3`llvm::initializeX86AvoidTrailingCallPassPass (1 samples, 0.07%)</title><rect x="84.7357%" y="709" width="0.0745%" height="15" fill="rgb(223,226,4)" fg:x="1138" fg:w="1"/><text x="84.9857%" y="719.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.7357%" y="693" width="0.0745%" height="15" fill="rgb(210,26,41)" fg:x="1138" fg:w="1"/><text x="84.9857%" y="703.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.7357%" y="677" width="0.0745%" height="15" fill="rgb(220,221,6)" fg:x="1138" fg:w="1"/><text x="84.9857%" y="687.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.7357%" y="661" width="0.0745%" height="15" fill="rgb(225,89,49)" fg:x="1138" fg:w="1"/><text x="84.9857%" y="671.50"></text></g><g><title>test3`llvm::initializeX86AvoidTrailingCallPassPass (1 samples, 0.07%)</title><rect x="84.7357%" y="645" width="0.0745%" height="15" fill="rgb(218,70,45)" fg:x="1138" fg:w="1"/><text x="84.9857%" y="655.50"></text></g><g><title>test3`llvm::initializeX86CmovConverterPassPass (1 samples, 0.07%)</title><rect x="84.8101%" y="709" width="0.0745%" height="15" fill="rgb(238,166,21)" fg:x="1139" fg:w="1"/><text x="85.0601%" y="719.50"></text></g><g><title>test3`llvm::initializeX86DomainReassignmentPass (1 samples, 0.07%)</title><rect x="84.8846%" y="709" width="0.0745%" height="15" fill="rgb(224,141,44)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="719.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.8846%" y="693" width="0.0745%" height="15" fill="rgb(230,12,49)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="703.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.8846%" y="677" width="0.0745%" height="15" fill="rgb(212,174,12)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="687.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.8846%" y="661" width="0.0745%" height="15" fill="rgb(246,67,9)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="671.50"></text></g><g><title>test3`llvm::initializeX86DomainReassignmentPass (1 samples, 0.07%)</title><rect x="84.8846%" y="645" width="0.0745%" height="15" fill="rgb(239,35,23)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="655.50"></text></g><g><title>test3`llvm::PassRegistry::registerPass (1 samples, 0.07%)</title><rect x="84.8846%" y="629" width="0.0745%" height="15" fill="rgb(211,167,0)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="639.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="613" width="0.0745%" height="15" fill="rgb(225,119,45)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="623.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt; &gt; &gt;::emplace_back&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="597" width="0.0745%" height="15" fill="rgb(210,162,6)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="607.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="581" width="0.0745%" height="15" fill="rgb(208,118,35)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="591.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="565" width="0.0745%" height="15" fill="rgb(239,4,53)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="575.50"></text></g><g><title>test3`std::vector&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt;,std::allocator&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="549" width="0.0745%" height="15" fill="rgb(213,130,21)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="559.50"></text></g><g><title>test3`std::_Uninitialized_move&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete&lt;llvm::PassInfo const &gt; &gt; * __ptr64,std::allocator&lt;std::unique_ptr&lt;llvm::PassInfo const ,std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="533" width="0.0745%" height="15" fill="rgb(235,148,0)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="543.50"></text></g><g><title>test3`std::_Uninitialized_backout_al&lt;std::allocator&lt;std::unique_ptr&lt;char [0],std::default_delete&lt;char [0]&gt; &gt; &gt; &gt;::_Emplace_back&lt;std::unique_ptr&lt;char [0],std::default_delete (1 samples, 0.07%)</title><rect x="84.8846%" y="517" width="0.0745%" height="15" fill="rgb(244,224,18)" fg:x="1140" fg:w="1"/><text x="85.1346%" y="527.50"></text></g><g><title>test3`LLVMInitializeX86Target (8 samples, 0.60%)</title><rect x="84.4378%" y="725" width="0.5957%" height="15" fill="rgb(211,214,4)" fg:x="1134" fg:w="8"/><text x="84.6878%" y="735.50"></text></g><g><title>test3`llvm::initializeX86LowerAMXIntrinsicsLegacyPassPass (1 samples, 0.07%)</title><rect x="84.9590%" y="709" width="0.0745%" height="15" fill="rgb(206,119,25)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="719.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.9590%" y="693" width="0.0745%" height="15" fill="rgb(243,93,47)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="703.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.9590%" y="677" width="0.0745%" height="15" fill="rgb(224,194,6)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="687.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.9590%" y="661" width="0.0745%" height="15" fill="rgb(243,229,6)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="671.50"></text></g><g><title>test3`llvm::createX86LowerAMXIntrinsicsPass (1 samples, 0.07%)</title><rect x="84.9590%" y="645" width="0.0745%" height="15" fill="rgb(207,23,50)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="655.50"></text></g><g><title>test3`llvm::initializeTargetPassConfigPass (1 samples, 0.07%)</title><rect x="84.9590%" y="629" width="0.0745%" height="15" fill="rgb(253,192,32)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="639.50"></text></g><g><title>test3`llvm::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.9590%" y="613" width="0.0745%" height="15" fill="rgb(213,21,6)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="623.50"></text></g><g><title>test3`std::call_once&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.9590%" y="597" width="0.0745%" height="15" fill="rgb(243,151,13)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="607.50"></text></g><g><title>test3`std::invoke&lt;void * __ptr64 (__cdecl&amp;)(llvm::PassRegistry &amp; __ptr64),std::reference_wrapper (1 samples, 0.07%)</title><rect x="84.9590%" y="581" width="0.0745%" height="15" fill="rgb(233,165,41)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="591.50"></text></g><g><title>test3`llvm::LLVMTargetMachine::createPassConfig (1 samples, 0.07%)</title><rect x="84.9590%" y="565" width="0.0745%" height="15" fill="rgb(246,176,45)" fg:x="1141" fg:w="1"/><text x="85.2090%" y="575.50"></text></g><g><title>test3`ZN7inkwell6module6Module27create_jit_execution_engine17h8483e95844a18cccE (19 samples, 1.41%)</title><rect x="83.6932%" y="773" width="1.4147%" height="15" fill="rgb(217,170,52)" fg:x="1124" fg:w="19"/><text x="83.9432%" y="783.50"></text></g><g><title>test3`ZN7inkwell7targets6Target17initialize_native17hc42a9028243a9a0fE (9 samples, 0.67%)</title><rect x="84.4378%" y="757" width="0.6701%" height="15" fill="rgb(214,203,54)" fg:x="1134" fg:w="9"/><text x="84.6878%" y="767.50"></text></g><g><title>test3`LLVM_InitializeNativeTarget (9 samples, 0.67%)</title><rect x="84.4378%" y="741" width="0.6701%" height="15" fill="rgb(248,215,49)" fg:x="1134" fg:w="9"/><text x="84.6878%" y="751.50"></text></g><g><title>test3`LLVMInitializeX86TargetMC (1 samples, 0.07%)</title><rect x="85.0335%" y="725" width="0.0745%" height="15" fill="rgb(208,46,10)" fg:x="1142" fg:w="1"/><text x="85.2835%" y="735.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="85.0335%" y="709" width="0.0745%" height="15" fill="rgb(254,5,31)" fg:x="1142" fg:w="1"/><text x="85.2835%" y="719.50"></text></g><g><title>test3`ZN7inkwell7context11ContextImpl13create_module17h92bdafdca1d2eaa7E (1 samples, 0.07%)</title><rect x="85.1080%" y="773" width="0.0745%" height="15" fill="rgb(222,104,33)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="783.50"></text></g><g><title>test3`LLVMModuleCreateWithNameInContext (1 samples, 0.07%)</title><rect x="85.1080%" y="757" width="0.0745%" height="15" fill="rgb(248,49,16)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="767.50"></text></g><g><title>test3`llvm::Module::Module (1 samples, 0.07%)</title><rect x="85.1080%" y="741" width="0.0745%" height="15" fill="rgb(232,198,41)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="751.50"></text></g><g><title>test3`llvm::DataLayout::DataLayout (1 samples, 0.07%)</title><rect x="85.1080%" y="725" width="0.0745%" height="15" fill="rgb(214,125,3)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="735.50"></text></g><g><title>test3`llvm::DataLayout::reset (1 samples, 0.07%)</title><rect x="85.1080%" y="709" width="0.0745%" height="15" fill="rgb(229,220,28)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="719.50"></text></g><g><title>test3`llvm::DataLayout::setAlignment (1 samples, 0.07%)</title><rect x="85.1080%" y="693" width="0.0745%" height="15" fill="rgb(222,64,37)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="703.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="85.1080%" y="677" width="0.0745%" height="15" fill="rgb(249,184,13)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="687.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;llvm::LayoutAlignElem&gt;::insert_one_impl (1 samples, 0.07%)</title><rect x="85.1080%" y="661" width="0.0745%" height="15" fill="rgb(252,176,6)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="671.50"></text></g><g><title>test3`std::move_backward (1 samples, 0.07%)</title><rect x="85.1080%" y="645" width="0.0745%" height="15" fill="rgb(228,153,7)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="655.50"></text></g><g><title>test3`std::_Move_backward_unchecked (1 samples, 0.07%)</title><rect x="85.1080%" y="629" width="0.0745%" height="15" fill="rgb(242,193,5)" fg:x="1143" fg:w="1"/><text x="85.3580%" y="639.50"></text></g><g><title>test3`llvm::LLVMContextImpl::LLVMContextImpl (1 samples, 0.07%)</title><rect x="85.1824%" y="725" width="0.0745%" height="15" fill="rgb(232,140,9)" fg:x="1144" fg:w="1"/><text x="85.4324%" y="735.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::AllocaInst * __ptr64,std::vector&lt;llvm::DbgVariableIntrinsic * __ptr64,std::allocator&lt;llvm::DbgVariableIntrinsic * __ptr64&gt; &gt;,llvm::DenseMapInfo&lt;llvm::AllocaInst * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AllocaInst * __ptr64,std::vector&lt;llvm::DbgVariableIntrinsic * __ptr64,std::allocator&lt;llvm::DbgVariableIntrinsic * __ptr64&gt; &gt; &gt; &gt;::DenseMap&lt;llvm::AllocaInst * __ptr64,std::vector&lt;llvm::DbgVariableIntrinsic * __ptr64,std::allocator&lt;llvm::DbgVariableIntrinsic * __ptr64&gt; &gt;,llvm::DenseMapInfo&lt;llvm::AllocaInst * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AllocaInst * __ptr64,std::vector&lt;llvm::DbgVariableIntrinsic * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="85.1824%" y="709" width="0.0745%" height="15" fill="rgb(213,222,16)" fg:x="1144" fg:w="1"/><text x="85.4324%" y="719.50"></text></g><g><title>test3`llvm::DenseMap&lt;llvm::AllocaInst * __ptr64,std::vector&lt;llvm::DbgVariableIntrinsic * __ptr64,std::allocator&lt;llvm::DbgVariableIntrinsic * __ptr64&gt; &gt;,llvm::DenseMapInfo&lt;llvm::AllocaInst * __ptr64&gt;,llvm::detail::DenseMapPair&lt;llvm::AllocaInst * __ptr64,std::vector&lt;llvm::DbgVariableIntrinsic * __ptr64,std::allocator (1 samples, 0.07%)</title><rect x="85.1824%" y="693" width="0.0745%" height="15" fill="rgb(222,75,50)" fg:x="1144" fg:w="1"/><text x="85.4324%" y="703.50"></text></g><g><title>test3`ZN7inkwell7context7Context6create17ha5899f0de3655cf8E (2 samples, 0.15%)</title><rect x="85.1824%" y="773" width="0.1489%" height="15" fill="rgb(205,180,2)" fg:x="1144" fg:w="2"/><text x="85.4324%" y="783.50"></text></g><g><title>test3`LLVMContextCreate (2 samples, 0.15%)</title><rect x="85.1824%" y="757" width="0.1489%" height="15" fill="rgb(216,34,7)" fg:x="1144" fg:w="2"/><text x="85.4324%" y="767.50"></text></g><g><title>test3`llvm::LLVMContext::LLVMContext (2 samples, 0.15%)</title><rect x="85.1824%" y="741" width="0.1489%" height="15" fill="rgb(253,16,32)" fg:x="1144" fg:w="2"/><text x="85.4324%" y="751.50"></text></g><g><title>test3`llvm::LLVMContextImpl::getOrInsertSyncScopeID (1 samples, 0.07%)</title><rect x="85.2569%" y="725" width="0.0745%" height="15" fill="rgb(208,97,28)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="735.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="85.2569%" y="709" width="0.0745%" height="15" fill="rgb(225,92,11)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="719.50"></text></g><g><title>test3`llvm::StringMap&lt;unsigned char,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="85.2569%" y="693" width="0.0745%" height="15" fill="rgb(243,38,12)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="703.50"></text></g><g><title>test3`llvm::StringMapImpl::LookupBucketFor (1 samples, 0.07%)</title><rect x="85.2569%" y="677" width="0.0745%" height="15" fill="rgb(208,139,16)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="687.50"></text></g><g><title>test3`llvm::StringMapImpl::init (1 samples, 0.07%)</title><rect x="85.2569%" y="661" width="0.0745%" height="15" fill="rgb(227,24,9)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="671.50"></text></g><g><title>test3`llvm::safe_calloc (1 samples, 0.07%)</title><rect x="85.2569%" y="645" width="0.0745%" height="15" fill="rgb(206,62,11)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="655.50"></text></g><g><title>ucrtbased`calloc (1 samples, 0.07%)</title><rect x="85.2569%" y="629" width="0.0745%" height="15" fill="rgb(228,134,27)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="639.50"></text></g><g><title>ucrtbased`calloc_dbg (1 samples, 0.07%)</title><rect x="85.2569%" y="613" width="0.0745%" height="15" fill="rgb(205,55,33)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="623.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="85.2569%" y="597" width="0.0745%" height="15" fill="rgb(243,75,43)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="607.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="85.2569%" y="581" width="0.0745%" height="15" fill="rgb(223,27,42)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="591.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="85.2569%" y="565" width="0.0745%" height="15" fill="rgb(232,189,33)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="575.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="85.2569%" y="549" width="0.0745%" height="15" fill="rgb(210,9,39)" fg:x="1145" fg:w="1"/><text x="85.5069%" y="559.50"></text></g><g><title>test3`ZN13rusty_js_core7runtime7Runtime3new17h55a2ac45c1525837E (34 samples, 2.53%)</title><rect x="82.8742%" y="789" width="2.5316%" height="15" fill="rgb(242,85,26)" fg:x="1113" fg:w="34"/><text x="83.1242%" y="799.50">te..</text></g><g><title>test3`std::sync::once::Once::call_inner (1 samples, 0.07%)</title><rect x="85.3313%" y="773" width="0.0745%" height="15" fill="rgb(248,44,4)" fg:x="1146" fg:w="1"/><text x="85.5813%" y="783.50"></text></g><g><title>test3`ZN3std4sync4once4Once9call_once28_$u7b$$u7b$closure$u7d$$u7d$17h0dba733b4fc159aaE.llvm.16330083221214638000 (1 samples, 0.07%)</title><rect x="85.3313%" y="757" width="0.0745%" height="15" fill="rgb(250,96,46)" fg:x="1146" fg:w="1"/><text x="85.5813%" y="767.50"></text></g><g><title>test3`ZN13rusty_js_core5utils15string_interner10init_names17h7081fed73155e9d2E (1 samples, 0.07%)</title><rect x="85.3313%" y="741" width="0.0745%" height="15" fill="rgb(229,116,26)" fg:x="1146" fg:w="1"/><text x="85.5813%" y="751.50"></text></g><g><title>test3`ZN9hashbrown3map28HashMap$LT$K$C$V$C$S$C$A$GT$6insert17h4786f3bc6e464970E (1 samples, 0.07%)</title><rect x="85.3313%" y="725" width="0.0745%" height="15" fill="rgb(246,94,34)" fg:x="1146" fg:w="1"/><text x="85.5813%" y="735.50"></text></g><g><title>test3`ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$6insert17h81ae324d8a25e7f5E (1 samples, 0.07%)</title><rect x="85.3313%" y="709" width="0.0745%" height="15" fill="rgb(251,73,21)" fg:x="1146" fg:w="1"/><text x="85.5813%" y="719.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer14Lexer$LT$I$GT$3new17h464c35bfb8fa528dE (1 samples, 0.07%)</title><rect x="85.4058%" y="773" width="0.0745%" height="15" fill="rgb(254,121,25)" fg:x="1147" fg:w="1"/><text x="85.6558%" y="783.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.5547%" y="549" width="0.0745%" height="15" fill="rgb(215,161,49)" fg:x="1149" fg:w="1"/><text x="85.8047%" y="559.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.5547%" y="533" width="0.0745%" height="15" fill="rgb(221,43,13)" fg:x="1149" fg:w="1"/><text x="85.8047%" y="543.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.6292%" y="549" width="0.0745%" height="15" fill="rgb(249,5,37)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="559.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.6292%" y="533" width="0.0745%" height="15" fill="rgb(226,25,44)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="543.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.6292%" y="517" width="0.0745%" height="15" fill="rgb(238,189,16)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="527.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.6292%" y="501" width="0.0745%" height="15" fill="rgb(251,186,8)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="511.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.6292%" y="485" width="0.0745%" height="15" fill="rgb(254,34,31)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="495.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.6292%" y="469" width="0.0745%" height="15" fill="rgb(225,215,27)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="479.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.6292%" y="453" width="0.0745%" height="15" fill="rgb(221,192,48)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="463.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.6292%" y="437" width="0.0745%" height="15" fill="rgb(219,137,20)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="447.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser5input15Buffer$LT$I$GT$10bump_inner17h49811205fb67864bE (1 samples, 0.07%)</title><rect x="85.6292%" y="421" width="0.0745%" height="15" fill="rgb(219,84,11)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="431.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$4next17h9eb1260caa82bd60E (1 samples, 0.07%)</title><rect x="85.6292%" y="405" width="0.0745%" height="15" fill="rgb(224,10,23)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="415.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer14Lexer$LT$I$GT$3new17h464c35bfb8fa528dE (1 samples, 0.07%)</title><rect x="85.6292%" y="389" width="0.0745%" height="15" fill="rgb(248,22,39)" fg:x="1150" fg:w="1"/><text x="85.8792%" y="399.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (3 samples, 0.22%)</title><rect x="85.5547%" y="677" width="0.2234%" height="15" fill="rgb(212,154,20)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="687.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (3 samples, 0.22%)</title><rect x="85.5547%" y="661" width="0.2234%" height="15" fill="rgb(236,199,50)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="671.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (3 samples, 0.22%)</title><rect x="85.5547%" y="645" width="0.2234%" height="15" fill="rgb(211,9,17)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="655.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (3 samples, 0.22%)</title><rect x="85.5547%" y="629" width="0.2234%" height="15" fill="rgb(243,216,36)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="639.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (3 samples, 0.22%)</title><rect x="85.5547%" y="613" width="0.2234%" height="15" fill="rgb(250,2,10)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="623.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (3 samples, 0.22%)</title><rect x="85.5547%" y="597" width="0.2234%" height="15" fill="rgb(226,50,48)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="607.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (3 samples, 0.22%)</title><rect x="85.5547%" y="581" width="0.2234%" height="15" fill="rgb(243,81,16)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="591.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (3 samples, 0.22%)</title><rect x="85.5547%" y="565" width="0.2234%" height="15" fill="rgb(250,14,2)" fg:x="1149" fg:w="3"/><text x="85.8047%" y="575.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser5input15Buffer$LT$I$GT$10bump_inner17h49811205fb67864bE (1 samples, 0.07%)</title><rect x="85.7036%" y="549" width="0.0745%" height="15" fill="rgb(233,135,29)" fg:x="1151" fg:w="1"/><text x="85.9536%" y="559.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$4next17h9eb1260caa82bd60E (1 samples, 0.07%)</title><rect x="85.7036%" y="533" width="0.0745%" height="15" fill="rgb(224,64,43)" fg:x="1151" fg:w="1"/><text x="85.9536%" y="543.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer14Lexer$LT$I$GT$3new17h464c35bfb8fa528dE (1 samples, 0.07%)</title><rect x="85.7036%" y="517" width="0.0745%" height="15" fill="rgb(238,84,13)" fg:x="1151" fg:w="1"/><text x="85.9536%" y="527.50"></text></g><g><title>test3`ZN4core3ptr56drop_in_place$LT$swc_ecma_parser..error..SyntaxError$GT$17h1549462ee5c59bd8E.llvm.12314793372199223703 (1 samples, 0.07%)</title><rect x="85.7036%" y="501" width="0.0745%" height="15" fill="rgb(253,48,26)" fg:x="1151" fg:w="1"/><text x="85.9536%" y="511.50"></text></g><g><title>test3`ZN19lexical_parse_float5parse14parse_complete17he72dbfcf4dc9ea79E (1 samples, 0.07%)</title><rect x="85.7036%" y="485" width="0.0745%" height="15" fill="rgb(205,223,31)" fg:x="1151" fg:w="1"/><text x="85.9536%" y="495.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (4 samples, 0.30%)</title><rect x="85.5547%" y="693" width="0.2978%" height="15" fill="rgb(221,41,32)" fg:x="1149" fg:w="4"/><text x="85.8047%" y="703.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.7781%" y="677" width="0.0745%" height="15" fill="rgb(213,158,31)" fg:x="1152" fg:w="1"/><text x="86.0281%" y="687.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.7781%" y="661" width="0.0745%" height="15" fill="rgb(245,126,43)" fg:x="1152" fg:w="1"/><text x="86.0281%" y="671.50"></text></g><g><title>test3`ZN12swc_ecma_ast5ident5Ident3new17h995202880ae499e2E (1 samples, 0.07%)</title><rect x="85.7781%" y="645" width="0.0745%" height="15" fill="rgb(227,7,22)" fg:x="1152" fg:w="1"/><text x="86.0281%" y="655.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (5 samples, 0.37%)</title><rect x="85.5547%" y="725" width="0.3723%" height="15" fill="rgb(252,90,44)" fg:x="1149" fg:w="5"/><text x="85.8047%" y="735.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (5 samples, 0.37%)</title><rect x="85.5547%" y="709" width="0.3723%" height="15" fill="rgb(253,91,0)" fg:x="1149" fg:w="5"/><text x="85.8047%" y="719.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.8526%" y="693" width="0.0745%" height="15" fill="rgb(252,175,49)" fg:x="1153" fg:w="1"/><text x="86.1026%" y="703.50"></text></g><g><title>test3`ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hbcfdd82c51bf14d0E (1 samples, 0.07%)</title><rect x="85.8526%" y="677" width="0.0745%" height="15" fill="rgb(246,150,1)" fg:x="1153" fg:w="1"/><text x="86.1026%" y="687.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (7 samples, 0.52%)</title><rect x="85.4803%" y="757" width="0.5212%" height="15" fill="rgb(241,192,25)" fg:x="1148" fg:w="7"/><text x="85.7303%" y="767.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (7 samples, 0.52%)</title><rect x="85.4803%" y="741" width="0.5212%" height="15" fill="rgb(239,187,11)" fg:x="1148" fg:w="7"/><text x="85.7303%" y="751.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (1 samples, 0.07%)</title><rect x="85.9270%" y="725" width="0.0745%" height="15" fill="rgb(218,202,51)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="735.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser3pat58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$19reparse_expr_as_pat17he338bb0d374af4a8E (1 samples, 0.07%)</title><rect x="85.9270%" y="709" width="0.0745%" height="15" fill="rgb(225,176,8)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="719.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.9270%" y="693" width="0.0745%" height="15" fill="rgb(219,122,41)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="703.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.9270%" y="677" width="0.0745%" height="15" fill="rgb(248,140,20)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="687.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser4expr58_$LT$impl$u20$swc_ecma_parser..parser..Parser$LT$I$GT$$GT$10parse_expr17hb6616b54919c2576E (1 samples, 0.07%)</title><rect x="85.9270%" y="661" width="0.0745%" height="15" fill="rgb(245,41,37)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="671.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.9270%" y="645" width="0.0745%" height="15" fill="rgb(235,82,39)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="655.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.9270%" y="629" width="0.0745%" height="15" fill="rgb(230,108,42)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="639.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.9270%" y="613" width="0.0745%" height="15" fill="rgb(215,150,50)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="623.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$swc_ecma_parser..parser..input..Tokens$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$7set_ctx17h98ff2ac71b317b44E.llvm.9708625077220069487 (1 samples, 0.07%)</title><rect x="85.9270%" y="597" width="0.0745%" height="15" fill="rgb(233,212,5)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="607.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser5input15Buffer$LT$I$GT$10bump_inner17h49811205fb67864bE (1 samples, 0.07%)</title><rect x="85.9270%" y="581" width="0.0745%" height="15" fill="rgb(245,80,22)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="591.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$4next17h9eb1260caa82bd60E (1 samples, 0.07%)</title><rect x="85.9270%" y="565" width="0.0745%" height="15" fill="rgb(238,129,16)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="575.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer14Lexer$LT$I$GT$3new17h464c35bfb8fa528dE (1 samples, 0.07%)</title><rect x="85.9270%" y="549" width="0.0745%" height="15" fill="rgb(240,19,0)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="559.50"></text></g><g><title>test3`ZN4core3ptr56drop_in_place$LT$swc_ecma_parser..error..SyntaxError$GT$17h1549462ee5c59bd8E.llvm.12314793372199223703 (1 samples, 0.07%)</title><rect x="85.9270%" y="533" width="0.0745%" height="15" fill="rgb(232,42,35)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="543.50"></text></g><g><title>test3`ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h8bcd5ec6b9e9d743E (1 samples, 0.07%)</title><rect x="85.9270%" y="517" width="0.0745%" height="15" fill="rgb(223,130,24)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="527.50"></text></g><g><title>test3`ZN5alloc7raw_vec11finish_grow17h0b8bc813651f0f00E.llvm.14391220496274562118 (1 samples, 0.07%)</title><rect x="85.9270%" y="501" width="0.0745%" height="15" fill="rgb(237,16,22)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="511.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="85.9270%" y="485" width="0.0745%" height="15" fill="rgb(248,192,20)" fg:x="1154" fg:w="1"/><text x="86.1770%" y="495.50"></text></g><g><title>test3`invoke_main (542 samples, 40.36%)</title><rect x="45.7185%" y="885" width="40.3574%" height="15" fill="rgb(233,167,2)" fg:x="614" fg:w="542"/><text x="45.9685%" y="895.50">test3`invoke_main</text></g><g><title>test3`main (542 samples, 40.36%)</title><rect x="45.7185%" y="869" width="40.3574%" height="15" fill="rgb(252,71,44)" fg:x="614" fg:w="542"/><text x="45.9685%" y="879.50">test3`main</text></g><g><title>test3`std::rt::lang_start_internal (542 samples, 40.36%)</title><rect x="45.7185%" y="853" width="40.3574%" height="15" fill="rgb(238,37,47)" fg:x="614" fg:w="542"/><text x="45.9685%" y="863.50">test3`std::rt::lang_start_internal</text></g><g><title>test3`ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4d24f204f5add4b6E.llvm.8830776385643783094 (541 samples, 40.28%)</title><rect x="45.7930%" y="837" width="40.2829%" height="15" fill="rgb(214,202,54)" fg:x="615" fg:w="541"/><text x="46.0430%" y="847.50">test3`ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4d24f2..</text></g><g><title>test3`ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h832d7587a89f95e0E (541 samples, 40.28%)</title><rect x="45.7930%" y="821" width="40.2829%" height="15" fill="rgb(254,165,40)" fg:x="615" fg:w="541"/><text x="46.0430%" y="831.50">test3`ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17..</text></g><g><title>test3`ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h6953311a3195df12E.llvm.11736961832574053403 (541 samples, 40.28%)</title><rect x="45.7930%" y="805" width="40.2829%" height="15" fill="rgb(246,173,38)" fg:x="615" fg:w="541"/><text x="46.0430%" y="815.50">test3`ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$..</text></g><g><title>test3`ZN15swc_ecma_parser20parse_file_as_module17he952e14bc3629ec1E (9 samples, 0.67%)</title><rect x="85.4058%" y="789" width="0.6701%" height="15" fill="rgb(215,3,27)" fg:x="1147" fg:w="9"/><text x="85.6558%" y="799.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser15Parser$LT$I$GT$12parse_module17ha7c50e2e83aa4092E (8 samples, 0.60%)</title><rect x="85.4803%" y="773" width="0.5957%" height="15" fill="rgb(239,169,51)" fg:x="1148" fg:w="8"/><text x="85.7303%" y="783.50"></text></g><g><title>test3`ZN15swc_ecma_parser6parser5input15Buffer$LT$I$GT$10bump_inner17h49811205fb67864bE (1 samples, 0.07%)</title><rect x="86.0015%" y="757" width="0.0745%" height="15" fill="rgb(212,5,25)" fg:x="1155" fg:w="1"/><text x="86.2515%" y="767.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer5state107_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$swc_ecma_parser..lexer..Lexer$LT$I$GT$$GT$4next17h9eb1260caa82bd60E (1 samples, 0.07%)</title><rect x="86.0015%" y="741" width="0.0745%" height="15" fill="rgb(243,45,17)" fg:x="1155" fg:w="1"/><text x="86.2515%" y="751.50"></text></g><g><title>test3`ZN15swc_ecma_parser5lexer14Lexer$LT$I$GT$3new17h464c35bfb8fa528dE (1 samples, 0.07%)</title><rect x="86.0015%" y="725" width="0.0745%" height="15" fill="rgb(242,97,9)" fg:x="1155" fg:w="1"/><text x="86.2515%" y="735.50"></text></g><g><title>combase`InternalDoATClassCreate (1 samples, 0.07%)</title><rect x="86.0759%" y="773" width="0.0745%" height="15" fill="rgb(228,71,31)" fg:x="1156" fg:w="1"/><text x="86.3259%" y="783.50"></text></g><g><title>combase`InternalDoATClassCreate (1 samples, 0.07%)</title><rect x="86.0759%" y="757" width="0.0745%" height="15" fill="rgb(252,184,16)" fg:x="1156" fg:w="1"/><text x="86.3259%" y="767.50"></text></g><g><title>combase`ReleaseFuncDescs (1 samples, 0.07%)</title><rect x="86.0759%" y="741" width="0.0745%" height="15" fill="rgb(236,169,46)" fg:x="1156" fg:w="1"/><text x="86.3259%" y="751.50"></text></g><g><title>ntdll`EtwNotificationUnregister (1 samples, 0.07%)</title><rect x="86.0759%" y="725" width="0.0745%" height="15" fill="rgb(207,17,47)" fg:x="1156" fg:w="1"/><text x="86.3259%" y="735.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.07%)</title><rect x="86.0759%" y="709" width="0.0745%" height="15" fill="rgb(206,201,28)" fg:x="1156" fg:w="1"/><text x="86.3259%" y="719.50"></text></g><g><title>msvcp_win`std::num_put&lt;unsigned short,std::ostreambuf_iterator&lt;unsigned short,std::char_traits (1 samples, 0.07%)</title><rect x="86.1504%" y="773" width="0.0745%" height="15" fill="rgb(224,184,23)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="783.50"></text></g><g><title>msvcp_win`std::num_put&lt;unsigned short,std::ostreambuf_iterator&lt;unsigned short,std::char_traits (1 samples, 0.07%)</title><rect x="86.1504%" y="757" width="0.0745%" height="15" fill="rgb(208,139,48)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="767.50"></text></g><g><title>ucrtbase`o_atoi (1 samples, 0.07%)</title><rect x="86.1504%" y="741" width="0.0745%" height="15" fill="rgb(208,130,10)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="751.50"></text></g><g><title>ucrtbase`execute_onexit_table (1 samples, 0.07%)</title><rect x="86.1504%" y="725" width="0.0745%" height="15" fill="rgb(211,213,45)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="735.50"></text></g><g><title>ucrtbase`execute_onexit_table (1 samples, 0.07%)</title><rect x="86.1504%" y="709" width="0.0745%" height="15" fill="rgb(235,100,30)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="719.50"></text></g><g><title>ucrtbase`execute_onexit_table (1 samples, 0.07%)</title><rect x="86.1504%" y="693" width="0.0745%" height="15" fill="rgb(206,144,31)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="703.50"></text></g><g><title>msvcp_win`std::basic_streambuf&lt;wchar_t,std::char_traits (1 samples, 0.07%)</title><rect x="86.1504%" y="677" width="0.0745%" height="15" fill="rgb(224,200,26)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="687.50"></text></g><g><title>msvcp_win`std::basic_istream&lt;wchar_t,std::char_traits (1 samples, 0.07%)</title><rect x="86.1504%" y="661" width="0.0745%" height="15" fill="rgb(247,104,53)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="671.50"></text></g><g><title>msvcp_win`std::locale::_Locimp::_Locimp_ctor (1 samples, 0.07%)</title><rect x="86.1504%" y="645" width="0.0745%" height="15" fill="rgb(220,14,17)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="655.50"></text></g><g><title>ucrtbase`o_free (1 samples, 0.07%)</title><rect x="86.1504%" y="629" width="0.0745%" height="15" fill="rgb(230,140,40)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="639.50"></text></g><g><title>ucrtbase`free_base (1 samples, 0.07%)</title><rect x="86.1504%" y="613" width="0.0745%" height="15" fill="rgb(229,2,41)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="623.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="86.1504%" y="597" width="0.0745%" height="15" fill="rgb(232,89,16)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="607.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="86.1504%" y="581" width="0.0745%" height="15" fill="rgb(247,59,52)" fg:x="1157" fg:w="1"/><text x="86.4004%" y="591.50"></text></g><g><title>rpcrt4`NdrServerCall2 (1 samples, 0.07%)</title><rect x="86.2249%" y="773" width="0.0745%" height="15" fill="rgb(226,110,21)" fg:x="1158" fg:w="1"/><text x="86.4749%" y="783.50"></text></g><g><title>rpcrt4`I_RpcServerSetAddressChangeFn (1 samples, 0.07%)</title><rect x="86.2249%" y="757" width="0.0745%" height="15" fill="rgb(224,176,43)" fg:x="1158" fg:w="1"/><text x="86.4749%" y="767.50"></text></g><g><title>ucrtbased`initialize_wide_environment (1 samples, 0.07%)</title><rect x="86.2993%" y="677" width="0.0745%" height="15" fill="rgb(221,73,6)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="687.50"></text></g><g><title>ucrtbased`get_initial_wide_environment (1 samples, 0.07%)</title><rect x="86.2993%" y="661" width="0.0745%" height="15" fill="rgb(232,78,19)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="671.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="86.2993%" y="645" width="0.0745%" height="15" fill="rgb(233,112,48)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="655.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="86.2993%" y="629" width="0.0745%" height="15" fill="rgb(243,131,47)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="639.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="86.2993%" y="613" width="0.0745%" height="15" fill="rgb(226,51,1)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="623.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="86.2993%" y="597" width="0.0745%" height="15" fill="rgb(247,58,7)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="607.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="86.2993%" y="581" width="0.0745%" height="15" fill="rgb(209,7,32)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="591.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="86.2993%" y="565" width="0.0745%" height="15" fill="rgb(209,39,41)" fg:x="1159" fg:w="1"/><text x="86.5493%" y="575.50"></text></g><g><title>ucrtbased`setsystime (2 samples, 0.15%)</title><rect x="86.2993%" y="773" width="0.1489%" height="15" fill="rgb(226,182,46)" fg:x="1159" fg:w="2"/><text x="86.5493%" y="783.50"></text></g><g><title>ucrtbased`setsystime (2 samples, 0.15%)</title><rect x="86.2993%" y="757" width="0.1489%" height="15" fill="rgb(230,219,10)" fg:x="1159" fg:w="2"/><text x="86.5493%" y="767.50"></text></g><g><title>ucrtbased`setsystime (2 samples, 0.15%)</title><rect x="86.2993%" y="741" width="0.1489%" height="15" fill="rgb(227,175,30)" fg:x="1159" fg:w="2"/><text x="86.5493%" y="751.50"></text></g><g><title>ucrtbased`recalloc (2 samples, 0.15%)</title><rect x="86.2993%" y="725" width="0.1489%" height="15" fill="rgb(217,2,50)" fg:x="1159" fg:w="2"/><text x="86.5493%" y="735.50"></text></g><g><title>ucrtbased`set_app_type (2 samples, 0.15%)</title><rect x="86.2993%" y="709" width="0.1489%" height="15" fill="rgb(229,160,0)" fg:x="1159" fg:w="2"/><text x="86.5493%" y="719.50"></text></g><g><title>ucrtbased`recalloc (2 samples, 0.15%)</title><rect x="86.2993%" y="693" width="0.1489%" height="15" fill="rgb(207,78,37)" fg:x="1159" fg:w="2"/><text x="86.5493%" y="703.50"></text></g><g><title>ucrtbased`initterm (1 samples, 0.07%)</title><rect x="86.3738%" y="677" width="0.0745%" height="15" fill="rgb(225,57,0)" fg:x="1160" fg:w="1"/><text x="86.6238%" y="687.50"></text></g><g><title>ucrtbased`_acrt_iob_func (1 samples, 0.07%)</title><rect x="86.3738%" y="661" width="0.0745%" height="15" fill="rgb(232,154,2)" fg:x="1160" fg:w="1"/><text x="86.6238%" y="671.50"></text></g><g><title>ucrtbased`unlock_file (1 samples, 0.07%)</title><rect x="86.3738%" y="645" width="0.0745%" height="15" fill="rgb(241,212,25)" fg:x="1160" fg:w="1"/><text x="86.6238%" y="655.50"></text></g><g><title>ucrtbased`fsetpos (1 samples, 0.07%)</title><rect x="86.3738%" y="629" width="0.0745%" height="15" fill="rgb(226,69,20)" fg:x="1160" fg:w="1"/><text x="86.6238%" y="639.50"></text></g><g><title>ntdll`RtlActivateActivationContextUnsafeFast (6 samples, 0.45%)</title><rect x="86.0759%" y="789" width="0.4468%" height="15" fill="rgb(247,184,54)" fg:x="1156" fg:w="6"/><text x="86.3259%" y="799.50"></text></g><g><title>user32`UserClientDllInitialize (1 samples, 0.07%)</title><rect x="86.4483%" y="773" width="0.0745%" height="15" fill="rgb(210,145,0)" fg:x="1161" fg:w="1"/><text x="86.6983%" y="783.50"></text></g><g><title>ntdll`EtwNotificationUnregister (1 samples, 0.07%)</title><rect x="86.4483%" y="757" width="0.0745%" height="15" fill="rgb(253,82,12)" fg:x="1161" fg:w="1"/><text x="86.6983%" y="767.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.07%)</title><rect x="86.4483%" y="741" width="0.0745%" height="15" fill="rgb(245,42,11)" fg:x="1161" fg:w="1"/><text x="86.6983%" y="751.50"></text></g><g><title>kernel32`FatalExit (7 samples, 0.52%)</title><rect x="86.0759%" y="837" width="0.5212%" height="15" fill="rgb(219,147,32)" fg:x="1156" fg:w="7"/><text x="86.3259%" y="847.50"></text></g><g><title>ntdll`RtlExitUserProcess (7 samples, 0.52%)</title><rect x="86.0759%" y="821" width="0.5212%" height="15" fill="rgb(246,12,7)" fg:x="1156" fg:w="7"/><text x="86.3259%" y="831.50"></text></g><g><title>ntdll`LdrShutdownProcess (7 samples, 0.52%)</title><rect x="86.0759%" y="805" width="0.5212%" height="15" fill="rgb(243,50,9)" fg:x="1156" fg:w="7"/><text x="86.3259%" y="815.50"></text></g><g><title>ntdll`RtlProcessFlsData (1 samples, 0.07%)</title><rect x="86.5227%" y="789" width="0.0745%" height="15" fill="rgb(219,149,6)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="799.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="773" width="0.0745%" height="15" fill="rgb(241,51,42)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="783.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="757" width="0.0745%" height="15" fill="rgb(226,128,27)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="767.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="741" width="0.0745%" height="15" fill="rgb(244,144,4)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="751.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="725" width="0.0745%" height="15" fill="rgb(221,4,13)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="735.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="709" width="0.0745%" height="15" fill="rgb(208,170,28)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="719.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="693" width="0.0745%" height="15" fill="rgb(226,131,13)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="703.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="677" width="0.0745%" height="15" fill="rgb(215,72,41)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="687.50"></text></g><g><title>ucrtbased`unlock_locales (1 samples, 0.07%)</title><rect x="86.5227%" y="661" width="0.0745%" height="15" fill="rgb(243,108,20)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="671.50"></text></g><g><title>ucrtbased`putwch_nolock (1 samples, 0.07%)</title><rect x="86.5227%" y="645" width="0.0745%" height="15" fill="rgb(230,189,17)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="655.50"></text></g><g><title>ucrtbased`cgetws (1 samples, 0.07%)</title><rect x="86.5227%" y="629" width="0.0745%" height="15" fill="rgb(220,50,17)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="639.50"></text></g><g><title>ntdll`RtlRestoreLastWin32Error (1 samples, 0.07%)</title><rect x="86.5227%" y="613" width="0.0745%" height="15" fill="rgb(248,152,48)" fg:x="1162" fg:w="1"/><text x="86.7727%" y="623.50"></text></g><g><title>KernelBase`GetModuleHandleExW (1 samples, 0.07%)</title><rect x="86.5972%" y="821" width="0.0745%" height="15" fill="rgb(244,91,11)" fg:x="1163" fg:w="1"/><text x="86.8472%" y="831.50"></text></g><g><title>ntdll`RtlInitUnicodeString (1 samples, 0.07%)</title><rect x="86.5972%" y="805" width="0.0745%" height="15" fill="rgb(220,157,5)" fg:x="1163" fg:w="1"/><text x="86.8472%" y="815.50"></text></g><g><title>ntdll`NtClose (1 samples, 0.07%)</title><rect x="86.6716%" y="549" width="0.0745%" height="15" fill="rgb(253,137,8)" fg:x="1164" fg:w="1"/><text x="86.9216%" y="559.50"></text></g><g><title>ntdll`LdrShutdownThread (1 samples, 0.07%)</title><rect x="86.7461%" y="533" width="0.0745%" height="15" fill="rgb(217,137,51)" fg:x="1165" fg:w="1"/><text x="86.9961%" y="543.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (2 samples, 0.15%)</title><rect x="86.7461%" y="549" width="0.1489%" height="15" fill="rgb(218,209,53)" fg:x="1165" fg:w="2"/><text x="86.9961%" y="559.50"></text></g><g><title>ntdll`RtlIsCriticalSectionLockedByThread (1 samples, 0.07%)</title><rect x="86.8206%" y="533" width="0.0745%" height="15" fill="rgb(249,137,25)" fg:x="1166" fg:w="1"/><text x="87.0706%" y="543.50"></text></g><g><title>ntdll`ZwMapViewOfSection (1 samples, 0.07%)</title><rect x="86.8206%" y="517" width="0.0745%" height="15" fill="rgb(239,155,26)" fg:x="1166" fg:w="1"/><text x="87.0706%" y="527.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="821" width="0.3723%" height="15" fill="rgb(227,85,46)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="831.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="805" width="0.3723%" height="15" fill="rgb(251,107,43)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="815.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="789" width="0.3723%" height="15" fill="rgb(234,170,33)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="799.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="773" width="0.3723%" height="15" fill="rgb(206,29,35)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="783.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="757" width="0.3723%" height="15" fill="rgb(227,138,25)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="767.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="741" width="0.3723%" height="15" fill="rgb(249,131,35)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="751.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="725" width="0.3723%" height="15" fill="rgb(239,6,40)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="735.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="709" width="0.3723%" height="15" fill="rgb(246,136,47)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="719.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="693" width="0.3723%" height="15" fill="rgb(253,58,26)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="703.50"></text></g><g><title>ucrtbased`set_app_type (5 samples, 0.37%)</title><rect x="86.6716%" y="677" width="0.3723%" height="15" fill="rgb(237,141,10)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="687.50"></text></g><g><title>KernelBase`LoadLibraryExW (5 samples, 0.37%)</title><rect x="86.6716%" y="661" width="0.3723%" height="15" fill="rgb(234,156,12)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="671.50"></text></g><g><title>ntdll`LdrLoadDll (5 samples, 0.37%)</title><rect x="86.6716%" y="645" width="0.3723%" height="15" fill="rgb(243,224,36)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="655.50"></text></g><g><title>ntdll`RtlDosPathNameToNtPathName_U (5 samples, 0.37%)</title><rect x="86.6716%" y="629" width="0.3723%" height="15" fill="rgb(205,229,51)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="639.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (5 samples, 0.37%)</title><rect x="86.6716%" y="613" width="0.3723%" height="15" fill="rgb(223,189,4)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="623.50"></text></g><g><title>ntdll`RtlUnlockHeap (5 samples, 0.37%)</title><rect x="86.6716%" y="597" width="0.3723%" height="15" fill="rgb(249,167,54)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="607.50"></text></g><g><title>ntdll`RtlUnlockHeap (5 samples, 0.37%)</title><rect x="86.6716%" y="581" width="0.3723%" height="15" fill="rgb(218,34,28)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="591.50"></text></g><g><title>ntdll`RtlUnlockHeap (5 samples, 0.37%)</title><rect x="86.6716%" y="565" width="0.3723%" height="15" fill="rgb(232,109,42)" fg:x="1164" fg:w="5"/><text x="86.9216%" y="575.50"></text></g><g><title>ntdll`RtlUnlockHeap (2 samples, 0.15%)</title><rect x="86.8950%" y="549" width="0.1489%" height="15" fill="rgb(248,214,46)" fg:x="1167" fg:w="2"/><text x="87.1450%" y="559.50"></text></g><g><title>ntdll`NtQueryAttributesFile (2 samples, 0.15%)</title><rect x="86.8950%" y="533" width="0.1489%" height="15" fill="rgb(244,216,40)" fg:x="1167" fg:w="2"/><text x="87.1450%" y="543.50"></text></g><g><title>test3`llvm::cl::list&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;::~list&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.0439%" y="725" width="0.0745%" height="15" fill="rgb(231,226,31)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="735.50"></text></g><g><title>test3`std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;::~vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="87.0439%" y="709" width="0.0745%" height="15" fill="rgb(238,38,43)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="719.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.0439%" y="693" width="0.0745%" height="15" fill="rgb(208,88,43)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="703.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.0439%" y="677" width="0.0745%" height="15" fill="rgb(205,136,37)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="687.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.0439%" y="661" width="0.0745%" height="15" fill="rgb(237,34,14)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="671.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="87.0439%" y="645" width="0.0745%" height="15" fill="rgb(236,193,44)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="655.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.0439%" y="629" width="0.0745%" height="15" fill="rgb(231,48,10)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="639.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.0439%" y="613" width="0.0745%" height="15" fill="rgb(213,141,34)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="623.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="87.0439%" y="597" width="0.0745%" height="15" fill="rgb(249,130,34)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="607.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="87.0439%" y="581" width="0.0745%" height="15" fill="rgb(219,42,41)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="591.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="87.0439%" y="565" width="0.0745%" height="15" fill="rgb(224,100,54)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="575.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="87.0439%" y="549" width="0.0745%" height="15" fill="rgb(229,200,27)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="559.50"></text></g><g><title>ntdll`memset (1 samples, 0.07%)</title><rect x="87.0439%" y="533" width="0.0745%" height="15" fill="rgb(217,118,10)" fg:x="1169" fg:w="1"/><text x="87.2939%" y="543.50"></text></g><g><title>test3`llvm::cl::Option::~Option (1 samples, 0.07%)</title><rect x="87.1184%" y="709" width="0.0745%" height="15" fill="rgb(206,22,3)" fg:x="1170" fg:w="1"/><text x="87.3684%" y="719.50"></text></g><g><title>test3`llvm::SmallPtrSet&lt;llvm::AbstractAttribute * __ptr64,32&gt;::~SmallPtrSet (1 samples, 0.07%)</title><rect x="87.1184%" y="693" width="0.0745%" height="15" fill="rgb(232,163,46)" fg:x="1170" fg:w="1"/><text x="87.3684%" y="703.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl&lt;llvm::AbstractAttribute * __ptr64&gt;::~SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="87.1184%" y="677" width="0.0745%" height="15" fill="rgb(206,95,13)" fg:x="1170" fg:w="1"/><text x="87.3684%" y="687.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::~SmallPtrSetImplBase (1 samples, 0.07%)</title><rect x="87.1184%" y="661" width="0.0745%" height="15" fill="rgb(253,154,18)" fg:x="1170" fg:w="1"/><text x="87.3684%" y="671.50"></text></g><g><title>test3`llvm::SmallPtrSetImplBase::isSmall (1 samples, 0.07%)</title><rect x="87.1184%" y="645" width="0.0745%" height="15" fill="rgb(219,32,23)" fg:x="1170" fg:w="1"/><text x="87.3684%" y="655.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser&lt;int&gt; &gt;::~opt&lt;int,1,llvm::cl::parser (3 samples, 0.22%)</title><rect x="87.1184%" y="725" width="0.2234%" height="15" fill="rgb(230,191,45)" fg:x="1170" fg:w="3"/><text x="87.3684%" y="735.50"></text></g><g><title>test3`std::function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl(llvm::LegalityQuery const &amp; __ptr64)&gt;::~function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl (2 samples, 0.15%)</title><rect x="87.1929%" y="709" width="0.1489%" height="15" fill="rgb(229,64,36)" fg:x="1171" fg:w="2"/><text x="87.4429%" y="719.50"></text></g><g><title>test3`std::_Func_class&lt;llvm::AssumptionCache &amp; __ptr64,llvm::Function &amp; __ptr64&gt;::~_Func_class (2 samples, 0.15%)</title><rect x="87.1929%" y="693" width="0.1489%" height="15" fill="rgb(205,129,25)" fg:x="1171" fg:w="2"/><text x="87.4429%" y="703.50"></text></g><g><title>test3`std::_Func_class (2 samples, 0.15%)</title><rect x="87.1929%" y="677" width="0.1489%" height="15" fill="rgb(254,112,7)" fg:x="1171" fg:w="2"/><text x="87.4429%" y="687.50"></text></g><g><title>test3`std::_Func_class (1 samples, 0.07%)</title><rect x="87.2673%" y="661" width="0.0745%" height="15" fill="rgb(226,53,48)" fg:x="1172" fg:w="1"/><text x="87.5173%" y="671.50"></text></g><g><title>test3`std::_Func_class (1 samples, 0.07%)</title><rect x="87.2673%" y="645" width="0.0745%" height="15" fill="rgb(214,153,38)" fg:x="1172" fg:w="1"/><text x="87.5173%" y="655.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.3418%" y="645" width="0.0745%" height="15" fill="rgb(243,101,7)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="655.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.3418%" y="629" width="0.0745%" height="15" fill="rgb(240,140,22)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="639.50"></text></g><g><title>test3`std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.3418%" y="613" width="0.0745%" height="15" fill="rgb(235,114,2)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="623.50"></text></g><g><title>test3`std::_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.3418%" y="597" width="0.0745%" height="15" fill="rgb(242,59,12)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="607.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.3418%" y="581" width="0.0745%" height="15" fill="rgb(252,134,9)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="591.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.3418%" y="565" width="0.0745%" height="15" fill="rgb(236,4,44)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="575.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all (1 samples, 0.07%)</title><rect x="87.3418%" y="549" width="0.0745%" height="15" fill="rgb(254,172,41)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="559.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all_locked_v3 (1 samples, 0.07%)</title><rect x="87.3418%" y="533" width="0.0745%" height="15" fill="rgb(244,63,20)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="543.50"></text></g><g><title>msvcp140d`std::_Lockit::_Lockit (1 samples, 0.07%)</title><rect x="87.3418%" y="517" width="0.0745%" height="15" fill="rgb(250,73,31)" fg:x="1173" fg:w="1"/><text x="87.5918%" y="527.50"></text></g><g><title>test3`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt; &gt;::~map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="87.3418%" y="725" width="0.1489%" height="15" fill="rgb(241,38,36)" fg:x="1173" fg:w="2"/><text x="87.5918%" y="735.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="87.3418%" y="709" width="0.1489%" height="15" fill="rgb(245,211,2)" fg:x="1173" fg:w="2"/><text x="87.5918%" y="719.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_head&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="87.3418%" y="693" width="0.1489%" height="15" fill="rgb(206,120,28)" fg:x="1173" fg:w="2"/><text x="87.5918%" y="703.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="87.3418%" y="677" width="0.1489%" height="15" fill="rgb(211,59,34)" fg:x="1173" fg:w="2"/><text x="87.5918%" y="687.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="87.3418%" y="661" width="0.1489%" height="15" fill="rgb(233,168,5)" fg:x="1173" fg:w="2"/><text x="87.5918%" y="671.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="645" width="0.0745%" height="15" fill="rgb(234,33,13)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="655.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="629" width="0.0745%" height="15" fill="rgb(231,150,26)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="639.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="613" width="0.0745%" height="15" fill="rgb(217,191,4)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="623.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="597" width="0.0745%" height="15" fill="rgb(246,198,38)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="607.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="581" width="0.0745%" height="15" fill="rgb(245,64,37)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="591.50"></text></g><g><title>test3`std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="565" width="0.0745%" height="15" fill="rgb(250,30,36)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="575.50"></text></g><g><title>test3`std::_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="549" width="0.0745%" height="15" fill="rgb(217,86,53)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="559.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="533" width="0.0745%" height="15" fill="rgb(228,157,16)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="543.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="517" width="0.0745%" height="15" fill="rgb(217,59,31)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="527.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="501" width="0.0745%" height="15" fill="rgb(237,138,41)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="511.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.4162%" y="485" width="0.0745%" height="15" fill="rgb(227,91,49)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="495.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="87.4162%" y="469" width="0.0745%" height="15" fill="rgb(247,21,44)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="479.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.4162%" y="453" width="0.0745%" height="15" fill="rgb(219,210,51)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="463.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.4162%" y="437" width="0.0745%" height="15" fill="rgb(209,140,6)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="447.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="87.4162%" y="421" width="0.0745%" height="15" fill="rgb(221,188,24)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="431.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="87.4162%" y="405" width="0.0745%" height="15" fill="rgb(232,154,20)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="415.50"></text></g><g><title>ucrtbased`CrtIsValidHeapPointer (1 samples, 0.07%)</title><rect x="87.4162%" y="389" width="0.0745%" height="15" fill="rgb(244,137,50)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="399.50"></text></g><g><title>KernelBase`HeapValidate (1 samples, 0.07%)</title><rect x="87.4162%" y="373" width="0.0745%" height="15" fill="rgb(225,185,43)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="383.50"></text></g><g><title>ntdll`RtlValidateHeap (1 samples, 0.07%)</title><rect x="87.4162%" y="357" width="0.0745%" height="15" fill="rgb(213,205,38)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="367.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="87.4162%" y="341" width="0.0745%" height="15" fill="rgb(236,73,12)" fg:x="1174" fg:w="1"/><text x="87.6662%" y="351.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="661" width="0.0745%" height="15" fill="rgb(235,219,13)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="671.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="645" width="0.0745%" height="15" fill="rgb(218,59,36)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="655.50"></text></g><g><title>test3`std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="629" width="0.0745%" height="15" fill="rgb(205,110,39)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="639.50"></text></g><g><title>test3`llvm::cl::OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="613" width="0.0745%" height="15" fill="rgb(218,206,42)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="623.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="597" width="0.0745%" height="15" fill="rgb(248,125,24)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="607.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="581" width="0.0745%" height="15" fill="rgb(242,28,27)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="591.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="565" width="0.0745%" height="15" fill="rgb(216,228,15)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="575.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.4907%" y="549" width="0.0745%" height="15" fill="rgb(235,116,46)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="559.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="87.4907%" y="533" width="0.0745%" height="15" fill="rgb(224,18,32)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="543.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.4907%" y="517" width="0.0745%" height="15" fill="rgb(252,5,12)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="527.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.4907%" y="501" width="0.0745%" height="15" fill="rgb(251,36,5)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="511.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="87.4907%" y="485" width="0.0745%" height="15" fill="rgb(217,53,14)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="495.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="87.4907%" y="469" width="0.0745%" height="15" fill="rgb(215,86,45)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="479.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="87.4907%" y="453" width="0.0745%" height="15" fill="rgb(242,169,11)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="463.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="87.4907%" y="437" width="0.0745%" height="15" fill="rgb(211,213,45)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="447.50"></text></g><g><title>ntdll`memset (1 samples, 0.07%)</title><rect x="87.4907%" y="421" width="0.0745%" height="15" fill="rgb(205,88,11)" fg:x="1175" fg:w="1"/><text x="87.7407%" y="431.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="629" width="0.0745%" height="15" fill="rgb(252,69,26)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="639.50"></text></g><g><title>test3`std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="613" width="0.0745%" height="15" fill="rgb(246,123,37)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="623.50"></text></g><g><title>test3`llvm::cl::OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="597" width="0.0745%" height="15" fill="rgb(212,205,5)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="607.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="581" width="0.0745%" height="15" fill="rgb(253,148,0)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="591.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="565" width="0.0745%" height="15" fill="rgb(239,22,4)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="575.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="549" width="0.0745%" height="15" fill="rgb(226,26,53)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="559.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="87.5652%" y="533" width="0.0745%" height="15" fill="rgb(225,229,45)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="543.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="87.5652%" y="517" width="0.0745%" height="15" fill="rgb(220,60,37)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="527.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.5652%" y="501" width="0.0745%" height="15" fill="rgb(217,180,35)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="511.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.5652%" y="485" width="0.0745%" height="15" fill="rgb(229,7,53)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="495.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="87.5652%" y="469" width="0.0745%" height="15" fill="rgb(254,137,3)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="479.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="87.5652%" y="453" width="0.0745%" height="15" fill="rgb(215,140,41)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="463.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="87.5652%" y="437" width="0.0745%" height="15" fill="rgb(250,80,15)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="447.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="87.5652%" y="421" width="0.0745%" height="15" fill="rgb(252,191,6)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="431.50"></text></g><g><title>ntdll`memset (1 samples, 0.07%)</title><rect x="87.5652%" y="405" width="0.0745%" height="15" fill="rgb(246,217,18)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="415.50"></text></g><g><title>ntdll`RtlEqualUnicodeString (1 samples, 0.07%)</title><rect x="87.5652%" y="389" width="0.0745%" height="15" fill="rgb(223,93,7)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="399.50"></text></g><g><title>ntdll`RtlSetUserValueHeap (1 samples, 0.07%)</title><rect x="87.5652%" y="373" width="0.0745%" height="15" fill="rgb(225,55,52)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="383.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="87.5652%" y="357" width="0.0745%" height="15" fill="rgb(240,31,24)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="367.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="87.5652%" y="341" width="0.0745%" height="15" fill="rgb(205,56,52)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="351.50"></text></g><g><title>ntdll`RtlGetCurrentServiceSessionId (1 samples, 0.07%)</title><rect x="87.5652%" y="325" width="0.0745%" height="15" fill="rgb(246,146,12)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="335.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="87.5652%" y="309" width="0.0745%" height="15" fill="rgb(239,84,36)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="319.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (1 samples, 0.07%)</title><rect x="87.5652%" y="293" width="0.0745%" height="15" fill="rgb(207,41,40)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="303.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (1 samples, 0.07%)</title><rect x="87.5652%" y="277" width="0.0745%" height="15" fill="rgb(241,179,25)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="287.50"></text></g><g><title>ntdll`TpWaitForWait (1 samples, 0.07%)</title><rect x="87.5652%" y="261" width="0.0745%" height="15" fill="rgb(210,0,34)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="271.50"></text></g><g><title>ntdll`NtFreeVirtualMemory (1 samples, 0.07%)</title><rect x="87.5652%" y="245" width="0.0745%" height="15" fill="rgb(225,217,29)" fg:x="1176" fg:w="1"/><text x="87.8152%" y="255.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="87.5652%" y="645" width="0.1489%" height="15" fill="rgb(216,191,38)" fg:x="1176" fg:w="2"/><text x="87.8152%" y="655.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode0&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.6396%" y="629" width="0.0745%" height="15" fill="rgb(232,140,52)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="639.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="87.6396%" y="613" width="0.0745%" height="15" fill="rgb(223,158,51)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="623.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="87.6396%" y="597" width="0.0745%" height="15" fill="rgb(235,29,51)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="607.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.6396%" y="581" width="0.0745%" height="15" fill="rgb(215,181,18)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="591.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="87.6396%" y="565" width="0.0745%" height="15" fill="rgb(227,125,34)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="575.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="87.6396%" y="549" width="0.0745%" height="15" fill="rgb(230,197,49)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="559.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="87.6396%" y="533" width="0.0745%" height="15" fill="rgb(239,141,16)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="543.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="87.6396%" y="517" width="0.0745%" height="15" fill="rgb(225,105,43)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="527.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="87.6396%" y="501" width="0.0745%" height="15" fill="rgb(214,131,14)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="511.50"></text></g><g><title>ntdll`memset (1 samples, 0.07%)</title><rect x="87.6396%" y="485" width="0.0745%" height="15" fill="rgb(229,177,11)" fg:x="1177" fg:w="1"/><text x="87.8896%" y="495.50"></text></g><g><title>test3```anonymous namespace&apos;::AArch64Operand::ComputeRegsForAlias&apos;::`2&apos;::`dynamic atexit destructor for &apos;RegMap&apos;&apos; (10 samples, 0.74%)</title><rect x="87.0439%" y="741" width="0.7446%" height="15" fill="rgb(231,180,14)" fg:x="1169" fg:w="10"/><text x="87.2939%" y="751.50"></text></g><g><title>test3`std::map&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (4 samples, 0.30%)</title><rect x="87.4907%" y="725" width="0.2978%" height="15" fill="rgb(232,88,2)" fg:x="1175" fg:w="4"/><text x="87.7407%" y="735.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (4 samples, 0.30%)</title><rect x="87.4907%" y="709" width="0.2978%" height="15" fill="rgb(205,220,8)" fg:x="1175" fg:w="4"/><text x="87.7407%" y="719.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_head&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (4 samples, 0.30%)</title><rect x="87.4907%" y="693" width="0.2978%" height="15" fill="rgb(225,23,53)" fg:x="1175" fg:w="4"/><text x="87.7407%" y="703.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (4 samples, 0.30%)</title><rect x="87.4907%" y="677" width="0.2978%" height="15" fill="rgb(213,62,29)" fg:x="1175" fg:w="4"/><text x="87.7407%" y="687.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (3 samples, 0.22%)</title><rect x="87.5652%" y="661" width="0.2234%" height="15" fill="rgb(227,75,7)" fg:x="1176" fg:w="3"/><text x="87.8152%" y="671.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="645" width="0.0745%" height="15" fill="rgb(207,105,14)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="655.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="629" width="0.0745%" height="15" fill="rgb(245,62,29)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="639.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="613" width="0.0745%" height="15" fill="rgb(236,202,4)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="623.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="597" width="0.0745%" height="15" fill="rgb(250,67,1)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="607.50"></text></g><g><title>test3`std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="581" width="0.0745%" height="15" fill="rgb(253,115,44)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="591.50"></text></g><g><title>test3`llvm::cl::OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="565" width="0.0745%" height="15" fill="rgb(251,139,18)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="575.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="549" width="0.0745%" height="15" fill="rgb(218,22,32)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="559.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="87.7141%" y="533" width="0.0745%" height="15" fill="rgb(243,53,5)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="543.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all (1 samples, 0.07%)</title><rect x="87.7141%" y="517" width="0.0745%" height="15" fill="rgb(227,56,16)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="527.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all_locked_v3 (1 samples, 0.07%)</title><rect x="87.7141%" y="501" width="0.0745%" height="15" fill="rgb(245,53,0)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="511.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all_unlocked_v3 (1 samples, 0.07%)</title><rect x="87.7141%" y="485" width="0.0745%" height="15" fill="rgb(216,170,35)" fg:x="1178" fg:w="1"/><text x="87.9641%" y="495.50"></text></g><g><title>test3```anonymous namespace&apos;::DenseMapInfo (1 samples, 0.07%)</title><rect x="87.7885%" y="741" width="0.0745%" height="15" fill="rgb(211,200,8)" fg:x="1179" fg:w="1"/><text x="88.0385%" y="751.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser&lt;int&gt; &gt;::~opt&lt;int,1,llvm::cl::parser (2 samples, 0.15%)</title><rect x="87.9375%" y="725" width="0.1489%" height="15" fill="rgb(228,204,44)" fg:x="1181" fg:w="2"/><text x="88.1875%" y="735.50"></text></g><g><title>test3`std::function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl(llvm::LegalityQuery const &amp; __ptr64)&gt;::~function&lt;std::pair&lt;unsigned int,llvm::LLT&gt; __cdecl (2 samples, 0.15%)</title><rect x="87.9375%" y="709" width="0.1489%" height="15" fill="rgb(214,121,17)" fg:x="1181" fg:w="2"/><text x="88.1875%" y="719.50"></text></g><g><title>test3`std::_Func_class&lt;llvm::AssumptionCache &amp; __ptr64,llvm::Function &amp; __ptr64&gt;::~_Func_class (2 samples, 0.15%)</title><rect x="87.9375%" y="693" width="0.1489%" height="15" fill="rgb(233,64,38)" fg:x="1181" fg:w="2"/><text x="88.1875%" y="703.50"></text></g><g><title>test3`std::_Func_class (2 samples, 0.15%)</title><rect x="87.9375%" y="677" width="0.1489%" height="15" fill="rgb(253,54,19)" fg:x="1181" fg:w="2"/><text x="88.1875%" y="687.50"></text></g><g><title>test3`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt; &gt;::~map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="725" width="0.0745%" height="15" fill="rgb(253,94,18)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="735.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="709" width="0.0745%" height="15" fill="rgb(227,57,52)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="719.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_head&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="693" width="0.0745%" height="15" fill="rgb(230,228,50)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="703.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="677" width="0.0745%" height="15" fill="rgb(217,205,27)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="687.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="661" width="0.0745%" height="15" fill="rgb(252,71,50)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="671.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="645" width="0.0745%" height="15" fill="rgb(209,86,4)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="655.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="629" width="0.0745%" height="15" fill="rgb(229,94,0)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="639.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode0&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.0864%" y="613" width="0.0745%" height="15" fill="rgb(252,223,21)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="623.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="88.0864%" y="597" width="0.0745%" height="15" fill="rgb(230,210,4)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="607.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="88.0864%" y="581" width="0.0745%" height="15" fill="rgb(240,149,38)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="591.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="88.0864%" y="565" width="0.0745%" height="15" fill="rgb(254,105,20)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="575.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="88.0864%" y="549" width="0.0745%" height="15" fill="rgb(253,87,46)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="559.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="88.0864%" y="533" width="0.0745%" height="15" fill="rgb(253,116,33)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="543.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="88.0864%" y="517" width="0.0745%" height="15" fill="rgb(229,198,5)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="527.50"></text></g><g><title>ucrtbased`free_base (1 samples, 0.07%)</title><rect x="88.0864%" y="501" width="0.0745%" height="15" fill="rgb(242,38,37)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="511.50"></text></g><g><title>ntdll`RtlFreeHeap (1 samples, 0.07%)</title><rect x="88.0864%" y="485" width="0.0745%" height="15" fill="rgb(242,69,53)" fg:x="1183" fg:w="1"/><text x="88.3364%" y="495.50"></text></g><g><title>test3`std::map&lt;unsigned int,int,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,int&gt; &gt; &gt;::~map&lt;unsigned int,int,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="88.1608%" y="725" width="0.0745%" height="15" fill="rgb(249,80,16)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="735.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,int,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,int&gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;unsigned int,int,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair (1 samples, 0.07%)</title><rect x="88.1608%" y="709" width="0.0745%" height="15" fill="rgb(206,128,11)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="719.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;int const ,unsigned int&gt; &gt; &gt;::_Erase_head&lt;std::allocator&lt;std::_Tree_node&lt;std::pair (1 samples, 0.07%)</title><rect x="88.1608%" y="693" width="0.0745%" height="15" fill="rgb(212,35,20)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="703.50"></text></g><g><title>test3`std::_Tree_node&lt;llvm::sampleprof::ProfiledCallGraphNode * __ptr64,void * __ptr64&gt;::_Freenode0&lt;std::allocator&lt;std::_Tree_node (1 samples, 0.07%)</title><rect x="88.1608%" y="677" width="0.0745%" height="15" fill="rgb(236,79,13)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="687.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_List_node&lt;llvm::SparseBitVectorElement (1 samples, 0.07%)</title><rect x="88.1608%" y="661" width="0.0745%" height="15" fill="rgb(233,123,3)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="671.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="88.1608%" y="645" width="0.0745%" height="15" fill="rgb(214,93,52)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="655.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="88.1608%" y="629" width="0.0745%" height="15" fill="rgb(251,37,40)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="639.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="88.1608%" y="613" width="0.0745%" height="15" fill="rgb(227,80,54)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="623.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="88.1608%" y="597" width="0.0745%" height="15" fill="rgb(254,48,11)" fg:x="1184" fg:w="1"/><text x="88.4108%" y="607.50"></text></g><g><title>ucrtbased`exit (30 samples, 2.23%)</title><rect x="86.0759%" y="885" width="2.2338%" height="15" fill="rgb(235,193,26)" fg:x="1156" fg:w="30"/><text x="86.3259%" y="895.50">u..</text></g><g><title>ucrtbased`wassert (30 samples, 2.23%)</title><rect x="86.0759%" y="869" width="2.2338%" height="15" fill="rgb(229,99,21)" fg:x="1156" fg:w="30"/><text x="86.3259%" y="879.50">u..</text></g><g><title>ucrtbased`wassert (30 samples, 2.23%)</title><rect x="86.0759%" y="853" width="2.2338%" height="15" fill="rgb(211,140,41)" fg:x="1156" fg:w="30"/><text x="86.3259%" y="863.50">u..</text></g><g><title>ucrtbased`wassert (23 samples, 1.71%)</title><rect x="86.5972%" y="837" width="1.7126%" height="15" fill="rgb(240,227,30)" fg:x="1163" fg:w="23"/><text x="86.8472%" y="847.50"></text></g><g><title>ucrtbased`wassert (17 samples, 1.27%)</title><rect x="87.0439%" y="821" width="1.2658%" height="15" fill="rgb(215,224,45)" fg:x="1169" fg:w="17"/><text x="87.2939%" y="831.50"></text></g><g><title>ucrtbased`execute_onexit_table (17 samples, 1.27%)</title><rect x="87.0439%" y="805" width="1.2658%" height="15" fill="rgb(206,123,31)" fg:x="1169" fg:w="17"/><text x="87.2939%" y="815.50"></text></g><g><title>ucrtbased`initterm_e (17 samples, 1.27%)</title><rect x="87.0439%" y="789" width="1.2658%" height="15" fill="rgb(210,138,16)" fg:x="1169" fg:w="17"/><text x="87.2939%" y="799.50"></text></g><g><title>ucrtbased`initterm_e (17 samples, 1.27%)</title><rect x="87.0439%" y="773" width="1.2658%" height="15" fill="rgb(228,57,28)" fg:x="1169" fg:w="17"/><text x="87.2939%" y="783.50"></text></g><g><title>ucrtbased`initterm_e (17 samples, 1.27%)</title><rect x="87.0439%" y="757" width="1.2658%" height="15" fill="rgb(242,170,10)" fg:x="1169" fg:w="17"/><text x="87.2939%" y="767.50"></text></g><g><title>test3``llvm::GraphTraits (6 samples, 0.45%)</title><rect x="87.8630%" y="741" width="0.4468%" height="15" fill="rgb(228,214,39)" fg:x="1180" fg:w="6"/><text x="88.1130%" y="751.50"></text></g><g><title>test3`std::map&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="725" width="0.0745%" height="15" fill="rgb(218,179,33)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="735.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;,0&gt; &gt;::~_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="709" width="0.0745%" height="15" fill="rgb(235,193,39)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="719.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_head&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="693" width="0.0745%" height="15" fill="rgb(219,221,36)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="703.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="677" width="0.0745%" height="15" fill="rgb(248,218,19)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="687.50"></text></g><g><title>test3`std::_Tree_val&lt;std::_Tree_simple_types&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Erase_tree&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="661" width="0.0745%" height="15" fill="rgb(205,50,9)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="671.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt;::_Freenode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="645" width="0.0745%" height="15" fill="rgb(238,81,28)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="655.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="629" width="0.0745%" height="15" fill="rgb(235,110,19)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="639.50"></text></g><g><title>test3`std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="613" width="0.0745%" height="15" fill="rgb(214,7,14)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="623.50"></text></g><g><title>test3`llvm::cl::OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="597" width="0.0745%" height="15" fill="rgb(211,77,3)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="607.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="581" width="0.0745%" height="15" fill="rgb(229,5,9)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="591.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="88.2353%" y="565" width="0.0745%" height="15" fill="rgb(225,90,11)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="575.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all (1 samples, 0.07%)</title><rect x="88.2353%" y="549" width="0.0745%" height="15" fill="rgb(242,56,8)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="559.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all_locked_v3 (1 samples, 0.07%)</title><rect x="88.2353%" y="533" width="0.0745%" height="15" fill="rgb(249,212,39)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="543.50"></text></g><g><title>msvcp140d`std::_Lockit::_Lockit (1 samples, 0.07%)</title><rect x="88.2353%" y="517" width="0.0745%" height="15" fill="rgb(236,90,9)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="527.50"></text></g><g><title>msvcp140d`Mtxlock (1 samples, 0.07%)</title><rect x="88.2353%" y="501" width="0.0745%" height="15" fill="rgb(206,88,35)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="511.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="88.2353%" y="485" width="0.0745%" height="15" fill="rgb(205,126,30)" fg:x="1185" fg:w="1"/><text x="88.4853%" y="495.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="89.2777%" y="805" width="0.0745%" height="15" fill="rgb(230,176,12)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="815.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="89.2777%" y="789" width="0.0745%" height="15" fill="rgb(243,19,9)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="799.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="89.2777%" y="773" width="0.0745%" height="15" fill="rgb(245,171,17)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="783.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="89.2777%" y="757" width="0.0745%" height="15" fill="rgb(227,52,21)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="767.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="89.2777%" y="741" width="0.0745%" height="15" fill="rgb(238,69,14)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="751.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="89.2777%" y="725" width="0.0745%" height="15" fill="rgb(241,156,39)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="735.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="89.2777%" y="709" width="0.0745%" height="15" fill="rgb(212,227,28)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="719.50"></text></g><g><title>ucrtbased`recalloc (1 samples, 0.07%)</title><rect x="89.2777%" y="693" width="0.0745%" height="15" fill="rgb(209,118,27)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="703.50"></text></g><g><title>ntdll`RtlEnterCriticalSection (1 samples, 0.07%)</title><rect x="89.2777%" y="677" width="0.0745%" height="15" fill="rgb(226,102,5)" fg:x="1199" fg:w="1"/><text x="89.5277%" y="687.50"></text></g><g><title>test3`llvm::cl::OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~OptionValueCopy&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (4 samples, 0.30%)</title><rect x="89.2033%" y="837" width="0.2978%" height="15" fill="rgb(223,34,3)" fg:x="1198" fg:w="4"/><text x="89.4533%" y="847.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (4 samples, 0.30%)</title><rect x="89.2033%" y="821" width="0.2978%" height="15" fill="rgb(221,81,38)" fg:x="1198" fg:w="4"/><text x="89.4533%" y="831.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="89.3522%" y="805" width="0.1489%" height="15" fill="rgb(236,219,28)" fg:x="1200" fg:w="2"/><text x="89.6022%" y="815.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all (2 samples, 0.15%)</title><rect x="89.3522%" y="789" width="0.1489%" height="15" fill="rgb(213,200,14)" fg:x="1200" fg:w="2"/><text x="89.6022%" y="799.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all_locked_v3 (2 samples, 0.15%)</title><rect x="89.3522%" y="773" width="0.1489%" height="15" fill="rgb(240,33,19)" fg:x="1200" fg:w="2"/><text x="89.6022%" y="783.50"></text></g><g><title>test3`std::_Delete_plain_internal&lt;std::allocator (1 samples, 0.07%)</title><rect x="89.5011%" y="805" width="0.0745%" height="15" fill="rgb(233,113,27)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="815.50"></text></g><g><title>test3`std::_Deallocate_plain&lt;std::allocator (1 samples, 0.07%)</title><rect x="89.5011%" y="789" width="0.0745%" height="15" fill="rgb(220,221,18)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="799.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator (1 samples, 0.07%)</title><rect x="89.5011%" y="773" width="0.0745%" height="15" fill="rgb(238,92,8)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="783.50"></text></g><g><title>test3`std::_Deallocate (1 samples, 0.07%)</title><rect x="89.5011%" y="757" width="0.0745%" height="15" fill="rgb(222,164,16)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="767.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="89.5011%" y="741" width="0.0745%" height="15" fill="rgb(241,119,3)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="751.50"></text></g><g><title>test3`operator delete (1 samples, 0.07%)</title><rect x="89.5011%" y="725" width="0.0745%" height="15" fill="rgb(241,44,8)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="735.50"></text></g><g><title>ucrtbased`free_dbg (1 samples, 0.07%)</title><rect x="89.5011%" y="709" width="0.0745%" height="15" fill="rgb(230,36,40)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="719.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="89.5011%" y="693" width="0.0745%" height="15" fill="rgb(243,16,36)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="703.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="89.5011%" y="677" width="0.0745%" height="15" fill="rgb(231,4,26)" fg:x="1202" fg:w="1"/><text x="89.7511%" y="687.50"></text></g><g><title>test3``vector destructor iterator&apos; (6 samples, 0.45%)</title><rect x="89.2033%" y="853" width="0.4468%" height="15" fill="rgb(240,9,31)" fg:x="1198" fg:w="6"/><text x="89.4533%" y="863.50"></text></g><g><title>test3`std::_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::~_Tuple_val&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="89.5011%" y="837" width="0.1489%" height="15" fill="rgb(207,173,15)" fg:x="1202" fg:w="2"/><text x="89.7511%" y="847.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (2 samples, 0.15%)</title><rect x="89.5011%" y="821" width="0.1489%" height="15" fill="rgb(224,192,53)" fg:x="1202" fg:w="2"/><text x="89.7511%" y="831.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="89.5756%" y="805" width="0.0745%" height="15" fill="rgb(223,67,28)" fg:x="1203" fg:w="1"/><text x="89.8256%" y="815.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all (1 samples, 0.07%)</title><rect x="89.5756%" y="789" width="0.0745%" height="15" fill="rgb(211,20,47)" fg:x="1203" fg:w="1"/><text x="89.8256%" y="799.50"></text></g><g><title>test3`std::_Container_base12::_Orphan_all_locked_v3 (1 samples, 0.07%)</title><rect x="89.5756%" y="773" width="0.0745%" height="15" fill="rgb(240,228,2)" fg:x="1203" fg:w="1"/><text x="89.8256%" y="783.50"></text></g><g><title>test3`atexit (1 samples, 0.07%)</title><rect x="89.6500%" y="853" width="0.0745%" height="15" fill="rgb(248,151,12)" fg:x="1204" fg:w="1"/><text x="89.9000%" y="863.50"></text></g><g><title>test3`_onexit (1 samples, 0.07%)</title><rect x="89.6500%" y="837" width="0.0745%" height="15" fill="rgb(244,8,39)" fg:x="1204" fg:w="1"/><text x="89.9000%" y="847.50"></text></g><g><title>ucrtbased`crt_atexit (1 samples, 0.07%)</title><rect x="89.6500%" y="821" width="0.0745%" height="15" fill="rgb(222,26,8)" fg:x="1204" fg:w="1"/><text x="89.9000%" y="831.50"></text></g><g><title>test3`llvm::Align::Align (1 samples, 0.07%)</title><rect x="89.7245%" y="853" width="0.0745%" height="15" fill="rgb(213,106,44)" fg:x="1205" fg:w="1"/><text x="89.9745%" y="863.50"></text></g><g><title>test3`llvm::Log2_64 (1 samples, 0.07%)</title><rect x="89.7245%" y="837" width="0.0745%" height="15" fill="rgb(214,129,20)" fg:x="1205" fg:w="1"/><text x="89.9745%" y="847.50"></text></g><g><title>test3`llvm::countLeadingZeros (1 samples, 0.07%)</title><rect x="89.7245%" y="821" width="0.0745%" height="15" fill="rgb(212,32,13)" fg:x="1205" fg:w="1"/><text x="89.9745%" y="831.50"></text></g><g><title>test3`llvm::detail::LeadingZerosCounter (1 samples, 0.07%)</title><rect x="89.7245%" y="805" width="0.0745%" height="15" fill="rgb(208,168,33)" fg:x="1205" fg:w="1"/><text x="89.9745%" y="815.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="89.7245%" y="789" width="0.0745%" height="15" fill="rgb(231,207,8)" fg:x="1205" fg:w="1"/><text x="89.9745%" y="799.50"></text></g><g><title>test3`llvm::DebugCounter::CounterInfo::operator= (1 samples, 0.07%)</title><rect x="89.7990%" y="821" width="0.0745%" height="15" fill="rgb(235,219,23)" fg:x="1206" fg:w="1"/><text x="90.0490%" y="831.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;,unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="89.8734%" y="821" width="0.0745%" height="15" fill="rgb(226,216,26)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="831.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;,unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="89.8734%" y="805" width="0.0745%" height="15" fill="rgb(239,137,16)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="815.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;,unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;::InsertIntoBucket (1 samples, 0.07%)</title><rect x="89.8734%" y="789" width="0.0745%" height="15" fill="rgb(207,12,36)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="799.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;,unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;::InsertIntoBucketImpl (1 samples, 0.07%)</title><rect x="89.8734%" y="773" width="0.0745%" height="15" fill="rgb(210,214,24)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="783.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;,unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="89.8734%" y="757" width="0.0745%" height="15" fill="rgb(206,56,30)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="767.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;,unsigned int,llvm::DebugCounter::CounterInfo,llvm::DenseMapInfo&lt;unsigned int&gt;,llvm::detail::DenseMapPair&lt;unsigned int,llvm::DebugCounter::CounterInfo&gt; &gt;::LookupBucketFor (1 samples, 0.07%)</title><rect x="89.8734%" y="741" width="0.0745%" height="15" fill="rgb(228,143,26)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="751.50"></text></g><g><title>test3`llvm::DenseMapBase&lt;llvm::DenseMap&lt;int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair&lt;int,int&gt; &gt;,int,int,llvm::DenseMapInfo&lt;int&gt;,llvm::detail::DenseMapPair (1 samples, 0.07%)</title><rect x="89.8734%" y="725" width="0.0745%" height="15" fill="rgb(216,218,46)" fg:x="1207" fg:w="1"/><text x="90.1234%" y="735.50"></text></g><g><title>test3`llvm::DebugCounter::registerCounter (3 samples, 0.22%)</title><rect x="89.7990%" y="853" width="0.2234%" height="15" fill="rgb(206,6,19)" fg:x="1206" fg:w="3"/><text x="90.0490%" y="863.50"></text></g><g><title>test3`llvm::DebugCounter::addCounter (3 samples, 0.22%)</title><rect x="89.7990%" y="837" width="0.2234%" height="15" fill="rgb(239,177,51)" fg:x="1206" fg:w="3"/><text x="90.0490%" y="847.50"></text></g><g><title>test3`llvm::UniqueVector&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="89.9479%" y="821" width="0.0745%" height="15" fill="rgb(216,55,25)" fg:x="1208" fg:w="1"/><text x="90.1979%" y="831.50"></text></g><g><title>test3`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="89.9479%" y="805" width="0.0745%" height="15" fill="rgb(231,163,29)" fg:x="1208" fg:w="1"/><text x="90.1979%" y="815.50"></text></g><g><title>test3`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::_Try_emplace&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="89.9479%" y="789" width="0.0745%" height="15" fill="rgb(232,149,50)" fg:x="1208" fg:w="1"/><text x="90.1979%" y="799.50"></text></g><g><title>test3`std::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;&lt;std::piecewise_construct_t const &amp; __ptr64,std::tuple&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const &amp; __ptr64&gt;,std::tuple (1 samples, 0.07%)</title><rect x="89.9479%" y="773" width="0.0745%" height="15" fill="rgb(223,142,48)" fg:x="1208" fg:w="1"/><text x="90.1979%" y="783.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::construct&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,std::piecewise_construct_t const &amp; __ptr64,std::tuple&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const &amp; __ptr64&gt;,std::tuple (1 samples, 0.07%)</title><rect x="89.9479%" y="757" width="0.0745%" height="15" fill="rgb(245,83,23)" fg:x="1208" fg:w="1"/><text x="90.1979%" y="767.50"></text></g><g><title>test3`llvm::DiagnosticHandler::isAnyRemarkEnabled (1 samples, 0.07%)</title><rect x="90.0223%" y="853" width="0.0745%" height="15" fill="rgb(224,63,2)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="863.50"></text></g><g><title>test3`llvm::DiagnosticHandler::isAnyRemarkEnabled (1 samples, 0.07%)</title><rect x="90.0223%" y="837" width="0.0745%" height="15" fill="rgb(218,65,53)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="90.0223%" y="821" width="0.0745%" height="15" fill="rgb(221,84,29)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="90.0223%" y="805" width="0.0745%" height="15" fill="rgb(234,0,32)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="90.0223%" y="789" width="0.0745%" height="15" fill="rgb(206,20,16)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="90.0223%" y="773" width="0.0745%" height="15" fill="rgb(244,172,18)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="90.0223%" y="757" width="0.0745%" height="15" fill="rgb(254,133,1)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="767.50"></text></g><g><title>test3`llvm::StringMapImpl::LookupBucketFor (1 samples, 0.07%)</title><rect x="90.0223%" y="741" width="0.0745%" height="15" fill="rgb(222,206,41)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="751.50"></text></g><g><title>test3`llvm::djbHash (1 samples, 0.07%)</title><rect x="90.0223%" y="725" width="0.0745%" height="15" fill="rgb(212,3,42)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="735.50"></text></g><g><title>test3`llvm::StringRef::bytes (1 samples, 0.07%)</title><rect x="90.0223%" y="709" width="0.0745%" height="15" fill="rgb(241,11,4)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="719.50"></text></g><g><title>test3`llvm::make_range&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="90.0223%" y="693" width="0.0745%" height="15" fill="rgb(205,19,26)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="703.50"></text></g><g><title>test3`llvm::iterator_range&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; * __ptr64 * __ptr64&gt;::iterator_range&lt;llvm::DomTreeNodeBase (1 samples, 0.07%)</title><rect x="90.0223%" y="677" width="0.0745%" height="15" fill="rgb(210,179,32)" fg:x="1209" fg:w="1"/><text x="90.2723%" y="687.50"></text></g><g><title>test3`llvm::Interpreter::runFunction (1 samples, 0.07%)</title><rect x="90.0968%" y="853" width="0.0745%" height="15" fill="rgb(227,116,49)" fg:x="1210" fg:w="1"/><text x="90.3468%" y="863.50"></text></g><g><title>test3`llvm::Interpreter::Register (1 samples, 0.07%)</title><rect x="90.0968%" y="837" width="0.0745%" height="15" fill="rgb(211,146,6)" fg:x="1210" fg:w="1"/><text x="90.3468%" y="847.50"></text></g><g><title>test3`llvm::LLT::scalar (1 samples, 0.07%)</title><rect x="90.1713%" y="853" width="0.0745%" height="15" fill="rgb(219,44,39)" fg:x="1211" fg:w="1"/><text x="90.4213%" y="863.50"></text></g><g><title>test3`llvm::LinearPolySize (1 samples, 0.07%)</title><rect x="90.2457%" y="853" width="0.0745%" height="15" fill="rgb(234,128,11)" fg:x="1212" fg:w="1"/><text x="90.4957%" y="863.50"></text></g><g><title>test3`llvm::MCDummyFragment::MCDummyFragment (1 samples, 0.07%)</title><rect x="90.3202%" y="853" width="0.0745%" height="15" fill="rgb(220,183,53)" fg:x="1213" fg:w="1"/><text x="90.5702%" y="863.50"></text></g><g><title>test3`llvm::MCFragment::MCFragment (1 samples, 0.07%)</title><rect x="90.3202%" y="837" width="0.0745%" height="15" fill="rgb(213,219,32)" fg:x="1213" fg:w="1"/><text x="90.5702%" y="847.50"></text></g><g><title>test3`llvm::PassBuilder::OptimizationLevel::OptimizationLevel (1 samples, 0.07%)</title><rect x="90.3946%" y="853" width="0.0745%" height="15" fill="rgb(232,156,16)" fg:x="1214" fg:w="1"/><text x="90.6446%" y="863.50"></text></g><g><title>test3`llvm::PredicateBitsetImpl&lt;36&gt;::PredicateBitsetImpl (1 samples, 0.07%)</title><rect x="90.4691%" y="853" width="0.0745%" height="15" fill="rgb(246,135,34)" fg:x="1215" fg:w="1"/><text x="90.7191%" y="863.50"></text></g><g><title>test3`llvm::Regex::Regex (1 samples, 0.07%)</title><rect x="90.5436%" y="853" width="0.0745%" height="15" fill="rgb(241,99,0)" fg:x="1216" fg:w="1"/><text x="90.7936%" y="863.50"></text></g><g><title>test3`llvm_regcomp (1 samples, 0.07%)</title><rect x="90.5436%" y="837" width="0.0745%" height="15" fill="rgb(222,103,45)" fg:x="1216" fg:w="1"/><text x="90.7936%" y="847.50"></text></g><g><title>test3`llvm_regcomp (1 samples, 0.07%)</title><rect x="90.5436%" y="821" width="0.0745%" height="15" fill="rgb(212,57,4)" fg:x="1216" fg:w="1"/><text x="90.7936%" y="831.50"></text></g><g><title>test3`llvm::RegisterBank::RegisterBank (1 samples, 0.07%)</title><rect x="90.6180%" y="853" width="0.0745%" height="15" fill="rgb(215,68,47)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="863.50"></text></g><g><title>test3`llvm::BitVector::resize (1 samples, 0.07%)</title><rect x="90.6180%" y="837" width="0.0745%" height="15" fill="rgb(230,84,2)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="847.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="90.6180%" y="821" width="0.0745%" height="15" fill="rgb(220,102,14)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="831.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="90.6180%" y="805" width="0.0745%" height="15" fill="rgb(240,10,32)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="815.50"></text></g><g><title>test3`std::uninitialized_fill_n (1 samples, 0.07%)</title><rect x="90.6180%" y="789" width="0.0745%" height="15" fill="rgb(215,47,27)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="799.50"></text></g><g><title>test3`std::_Is_all_bits_zero (1 samples, 0.07%)</title><rect x="90.6180%" y="773" width="0.0745%" height="15" fill="rgb(233,188,43)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="783.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="90.6180%" y="757" width="0.0745%" height="15" fill="rgb(253,190,1)" fg:x="1217" fg:w="1"/><text x="90.8680%" y="767.50"></text></g><g><title>test3`llvm::StringRef::StringRef (29 samples, 2.16%)</title><rect x="90.6925%" y="853" width="2.1593%" height="15" fill="rgb(206,114,52)" fg:x="1218" fg:w="29"/><text x="90.9425%" y="863.50">t..</text></g><g><title>test3`std::_Narrow_char_traits (29 samples, 2.16%)</title><rect x="90.6925%" y="837" width="2.1593%" height="15" fill="rgb(233,120,37)" fg:x="1218" fg:w="29"/><text x="90.9425%" y="847.50">t..</text></g><g><title>test3`llvm::cl::Option::Option (1 samples, 0.07%)</title><rect x="92.9263%" y="837" width="0.0745%" height="15" fill="rgb(214,52,39)" fg:x="1248" fg:w="1"/><text x="93.1763%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;bool,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="93.0007%" y="837" width="0.0745%" height="15" fill="rgb(223,80,29)" fg:x="1249" fg:w="1"/><text x="93.2507%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt; (4 samples, 0.30%)</title><rect x="92.8518%" y="853" width="0.2978%" height="15" fill="rgb(230,101,40)" fg:x="1247" fg:w="4"/><text x="93.1018%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="93.0752%" y="837" width="0.0745%" height="15" fill="rgb(219,211,8)" fg:x="1250" fg:w="1"/><text x="93.3252%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="93.0752%" y="821" width="0.0745%" height="15" fill="rgb(252,126,28)" fg:x="1250" fg:w="1"/><text x="93.3252%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.0752%" y="805" width="0.0745%" height="15" fill="rgb(215,56,38)" fg:x="1250" fg:w="1"/><text x="93.3252%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.0752%" y="789" width="0.0745%" height="15" fill="rgb(249,55,44)" fg:x="1250" fg:w="1"/><text x="93.3252%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="93.0752%" y="773" width="0.0745%" height="15" fill="rgb(220,221,32)" fg:x="1250" fg:w="1"/><text x="93.3252%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="93.0752%" y="757" width="0.0745%" height="15" fill="rgb(212,216,41)" fg:x="1250" fg:w="1"/><text x="93.3252%" y="767.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [10],llvm::cl::initializer (2 samples, 0.15%)</title><rect x="93.1497%" y="853" width="0.1489%" height="15" fill="rgb(228,213,43)" fg:x="1251" fg:w="2"/><text x="93.3997%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="93.2241%" y="837" width="0.0745%" height="15" fill="rgb(211,31,26)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="93.2241%" y="821" width="0.0745%" height="15" fill="rgb(229,202,19)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.2241%" y="805" width="0.0745%" height="15" fill="rgb(229,105,46)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.2241%" y="789" width="0.0745%" height="15" fill="rgb(235,108,1)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="93.2241%" y="773" width="0.0745%" height="15" fill="rgb(245,111,35)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="93.2241%" y="757" width="0.0745%" height="15" fill="rgb(219,185,31)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="767.50"></text></g><g><title>test3`llvm::StringMapImpl::RehashTable (1 samples, 0.07%)</title><rect x="93.2241%" y="741" width="0.0745%" height="15" fill="rgb(214,4,43)" fg:x="1252" fg:w="1"/><text x="93.4741%" y="751.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [15],llvm::cl::initializer (2 samples, 0.15%)</title><rect x="93.2986%" y="853" width="0.1489%" height="15" fill="rgb(235,227,40)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (2 samples, 0.15%)</title><rect x="93.2986%" y="837" width="0.1489%" height="15" fill="rgb(230,88,30)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (2 samples, 0.15%)</title><rect x="93.2986%" y="821" width="0.1489%" height="15" fill="rgb(216,217,1)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (2 samples, 0.15%)</title><rect x="93.2986%" y="805" width="0.1489%" height="15" fill="rgb(248,139,50)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (2 samples, 0.15%)</title><rect x="93.2986%" y="789" width="0.1489%" height="15" fill="rgb(233,1,21)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="799.50"></text></g><g><title>test3`llvm::StringMap (2 samples, 0.15%)</title><rect x="93.2986%" y="773" width="0.1489%" height="15" fill="rgb(215,183,12)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (2 samples, 0.15%)</title><rect x="93.2986%" y="757" width="0.1489%" height="15" fill="rgb(229,104,42)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="767.50"></text></g><g><title>test3`llvm::StringMapEntry&lt;unsigned __int64&gt;::Create (2 samples, 0.15%)</title><rect x="93.2986%" y="741" width="0.1489%" height="15" fill="rgb(243,34,48)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="751.50"></text></g><g><title>test3`llvm::StringMapEntryBase::allocateWithKey (2 samples, 0.15%)</title><rect x="93.2986%" y="725" width="0.1489%" height="15" fill="rgb(239,11,44)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="735.50"></text></g><g><title>test3`llvm::MallocAllocator::Allocate (2 samples, 0.15%)</title><rect x="93.2986%" y="709" width="0.1489%" height="15" fill="rgb(231,98,35)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="719.50"></text></g><g><title>test3`llvm::allocate_buffer (2 samples, 0.15%)</title><rect x="93.2986%" y="693" width="0.1489%" height="15" fill="rgb(233,28,25)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="703.50"></text></g><g><title>test3`operator new (2 samples, 0.15%)</title><rect x="93.2986%" y="677" width="0.1489%" height="15" fill="rgb(234,123,11)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="687.50"></text></g><g><title>ucrtbased`malloc (2 samples, 0.15%)</title><rect x="93.2986%" y="661" width="0.1489%" height="15" fill="rgb(220,69,3)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="671.50"></text></g><g><title>ucrtbased`malloc_dbg (2 samples, 0.15%)</title><rect x="93.2986%" y="645" width="0.1489%" height="15" fill="rgb(214,64,36)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="655.50"></text></g><g><title>ucrtbased`calloc_base (2 samples, 0.15%)</title><rect x="93.2986%" y="629" width="0.1489%" height="15" fill="rgb(211,138,32)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="639.50"></text></g><g><title>ucrtbased`calloc_base (2 samples, 0.15%)</title><rect x="93.2986%" y="613" width="0.1489%" height="15" fill="rgb(213,118,47)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.15%)</title><rect x="93.2986%" y="597" width="0.1489%" height="15" fill="rgb(243,124,49)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="607.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.15%)</title><rect x="93.2986%" y="581" width="0.1489%" height="15" fill="rgb(221,30,28)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="591.50"></text></g><g><title>ntdll`RtlTryEnterCriticalSection (2 samples, 0.15%)</title><rect x="93.2986%" y="565" width="0.1489%" height="15" fill="rgb(246,37,13)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="575.50"></text></g><g><title>ntdll`RtlGetFullPathName_UstrEx (2 samples, 0.15%)</title><rect x="93.2986%" y="549" width="0.1489%" height="15" fill="rgb(249,66,14)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="559.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.15%)</title><rect x="93.2986%" y="533" width="0.1489%" height="15" fill="rgb(213,166,5)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="543.50"></text></g><g><title>ntdll`RtlAllocateHeap (2 samples, 0.15%)</title><rect x="93.2986%" y="517" width="0.1489%" height="15" fill="rgb(221,66,24)" fg:x="1253" fg:w="2"/><text x="93.5486%" y="527.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [16],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="93.4475%" y="853" width="0.0745%" height="15" fill="rgb(210,132,17)" fg:x="1255" fg:w="1"/><text x="93.6975%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;,char [9],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="93.4475%" y="837" width="0.0745%" height="15" fill="rgb(243,202,5)" fg:x="1255" fg:w="1"/><text x="93.6975%" y="847.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="93.4475%" y="821" width="0.0745%" height="15" fill="rgb(233,70,48)" fg:x="1255" fg:w="1"/><text x="93.6975%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="93.4475%" y="805" width="0.0745%" height="15" fill="rgb(238,41,26)" fg:x="1255" fg:w="1"/><text x="93.6975%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [16],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="93.5220%" y="853" width="0.0745%" height="15" fill="rgb(241,19,31)" fg:x="1256" fg:w="1"/><text x="93.7720%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="93.5220%" y="837" width="0.0745%" height="15" fill="rgb(214,76,10)" fg:x="1256" fg:w="1"/><text x="93.7720%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="93.5220%" y="821" width="0.0745%" height="15" fill="rgb(254,202,22)" fg:x="1256" fg:w="1"/><text x="93.7720%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.5220%" y="805" width="0.0745%" height="15" fill="rgb(214,72,24)" fg:x="1256" fg:w="1"/><text x="93.7720%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.5220%" y="789" width="0.0745%" height="15" fill="rgb(221,92,46)" fg:x="1256" fg:w="1"/><text x="93.7720%" y="799.50"></text></g><g><title>test3`std::_Atomic_storage (1 samples, 0.07%)</title><rect x="93.5220%" y="773" width="0.0745%" height="15" fill="rgb(246,13,50)" fg:x="1256" fg:w="1"/><text x="93.7720%" y="783.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [16],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="93.5964%" y="853" width="0.0745%" height="15" fill="rgb(240,165,38)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="93.5964%" y="837" width="0.0745%" height="15" fill="rgb(241,24,51)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="93.5964%" y="821" width="0.0745%" height="15" fill="rgb(227,51,44)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.5964%" y="805" width="0.0745%" height="15" fill="rgb(231,121,3)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.5964%" y="789" width="0.0745%" height="15" fill="rgb(245,3,41)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="93.5964%" y="773" width="0.0745%" height="15" fill="rgb(214,13,26)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="93.5964%" y="757" width="0.0745%" height="15" fill="rgb(252,75,11)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="767.50"></text></g><g><title>test3`llvm::StringMapImpl::LookupBucketFor (1 samples, 0.07%)</title><rect x="93.5964%" y="741" width="0.0745%" height="15" fill="rgb(218,226,17)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="751.50"></text></g><g><title>test3`llvm::djbHash (1 samples, 0.07%)</title><rect x="93.5964%" y="725" width="0.0745%" height="15" fill="rgb(248,89,38)" fg:x="1257" fg:w="1"/><text x="93.8464%" y="735.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [17],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="93.6709%" y="853" width="0.0745%" height="15" fill="rgb(237,73,46)" fg:x="1258" fg:w="1"/><text x="93.9209%" y="863.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="93.8198%" y="805" width="0.0745%" height="15" fill="rgb(242,78,33)" fg:x="1260" fg:w="1"/><text x="94.0698%" y="815.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="93.8198%" y="789" width="0.0745%" height="15" fill="rgb(235,60,3)" fg:x="1260" fg:w="1"/><text x="94.0698%" y="799.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="93.8943%" y="693" width="0.0745%" height="15" fill="rgb(216,172,19)" fg:x="1261" fg:w="1"/><text x="94.1443%" y="703.50"></text></g><g><title>test3`std::copy (1 samples, 0.07%)</title><rect x="93.8943%" y="677" width="0.0745%" height="15" fill="rgb(227,6,42)" fg:x="1261" fg:w="1"/><text x="94.1443%" y="687.50"></text></g><g><title>test3`std::copy (1 samples, 0.07%)</title><rect x="93.8943%" y="661" width="0.0745%" height="15" fill="rgb(223,207,42)" fg:x="1261" fg:w="1"/><text x="94.1443%" y="671.50"></text></g><g><title>test3`llvm::SmallPtrSetIterator (1 samples, 0.07%)</title><rect x="93.8943%" y="645" width="0.0745%" height="15" fill="rgb(246,138,30)" fg:x="1261" fg:w="1"/><text x="94.1443%" y="655.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (2 samples, 0.15%)</title><rect x="93.8943%" y="725" width="0.1489%" height="15" fill="rgb(251,199,47)" fg:x="1261" fg:w="2"/><text x="94.1443%" y="735.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (2 samples, 0.15%)</title><rect x="93.8943%" y="709" width="0.1489%" height="15" fill="rgb(228,218,44)" fg:x="1261" fg:w="2"/><text x="94.1443%" y="719.50"></text></g><g><title>test3`llvm::ManagedStatic&lt;llvm::cl::SubCommand,llvm::object_creator&lt;llvm::cl::SubCommand&gt;,llvm::object_deleter (1 samples, 0.07%)</title><rect x="93.9687%" y="693" width="0.0745%" height="15" fill="rgb(220,68,6)" fg:x="1262" fg:w="1"/><text x="94.2187%" y="703.50"></text></g><g><title>test3`llvm::ManagedStaticBase::RegisterManagedStatic (1 samples, 0.07%)</title><rect x="93.9687%" y="677" width="0.0745%" height="15" fill="rgb(240,60,26)" fg:x="1262" fg:w="1"/><text x="94.2187%" y="687.50"></text></g><g><title>test3`std::lock_guard&lt;std::mutex&gt;::~lock_guard (1 samples, 0.07%)</title><rect x="93.9687%" y="661" width="0.0745%" height="15" fill="rgb(211,200,19)" fg:x="1262" fg:w="1"/><text x="94.2187%" y="671.50"></text></g><g><title>test3`std::_Mutex_base::unlock (1 samples, 0.07%)</title><rect x="93.9687%" y="645" width="0.0745%" height="15" fill="rgb(242,145,30)" fg:x="1262" fg:w="1"/><text x="94.2187%" y="655.50"></text></g><g><title>test3`llvm::cl::Option::Option (4 samples, 0.30%)</title><rect x="93.8198%" y="837" width="0.2978%" height="15" fill="rgb(225,64,13)" fg:x="1260" fg:w="4"/><text x="94.0698%" y="847.50"></text></g><g><title>test3`llvm::cl::getGeneralCategory (4 samples, 0.30%)</title><rect x="93.8198%" y="821" width="0.2978%" height="15" fill="rgb(218,103,35)" fg:x="1260" fg:w="4"/><text x="94.0698%" y="831.50"></text></g><g><title>test3`llvm::cl::OptionCategory::OptionCategory (3 samples, 0.22%)</title><rect x="93.8943%" y="805" width="0.2234%" height="15" fill="rgb(216,93,46)" fg:x="1261" fg:w="3"/><text x="94.1443%" y="815.50"></text></g><g><title>test3`llvm::cl::OptionCategory::registerCategory (3 samples, 0.22%)</title><rect x="93.8943%" y="789" width="0.2234%" height="15" fill="rgb(225,159,27)" fg:x="1261" fg:w="3"/><text x="94.1443%" y="799.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (3 samples, 0.22%)</title><rect x="93.8943%" y="773" width="0.2234%" height="15" fill="rgb(225,204,11)" fg:x="1261" fg:w="3"/><text x="94.1443%" y="783.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (3 samples, 0.22%)</title><rect x="93.8943%" y="757" width="0.2234%" height="15" fill="rgb(205,56,4)" fg:x="1261" fg:w="3"/><text x="94.1443%" y="767.50"></text></g><g><title>test3`llvm::ManagedStaticBase::RegisterManagedStatic (3 samples, 0.22%)</title><rect x="93.8943%" y="741" width="0.2234%" height="15" fill="rgb(206,6,35)" fg:x="1261" fg:w="3"/><text x="94.1443%" y="751.50"></text></g><g><title>test3`llvm::llvm_shutdown (1 samples, 0.07%)</title><rect x="94.0432%" y="725" width="0.0745%" height="15" fill="rgb(247,73,52)" fg:x="1263" fg:w="1"/><text x="94.2932%" y="735.50"></text></g><g><title>test3`std::recursive_mutex::recursive_mutex (1 samples, 0.07%)</title><rect x="94.0432%" y="709" width="0.0745%" height="15" fill="rgb(246,97,4)" fg:x="1263" fg:w="1"/><text x="94.2932%" y="719.50"></text></g><g><title>test3`std::_Mutex_base::_Mutex_base (1 samples, 0.07%)</title><rect x="94.0432%" y="693" width="0.0745%" height="15" fill="rgb(212,37,15)" fg:x="1263" fg:w="1"/><text x="94.2932%" y="703.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [17],llvm::cl::desc,llvm::cl::initializer (6 samples, 0.45%)</title><rect x="93.7453%" y="853" width="0.4468%" height="15" fill="rgb(208,130,40)" fg:x="1259" fg:w="6"/><text x="93.9953%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="94.1176%" y="837" width="0.0745%" height="15" fill="rgb(236,55,29)" fg:x="1264" fg:w="1"/><text x="94.3676%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="94.1176%" y="821" width="0.0745%" height="15" fill="rgb(209,156,45)" fg:x="1264" fg:w="1"/><text x="94.3676%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="94.1176%" y="805" width="0.0745%" height="15" fill="rgb(249,107,4)" fg:x="1264" fg:w="1"/><text x="94.3676%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="94.1176%" y="789" width="0.0745%" height="15" fill="rgb(227,7,13)" fg:x="1264" fg:w="1"/><text x="94.3676%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="94.1176%" y="773" width="0.0745%" height="15" fill="rgb(250,129,14)" fg:x="1264" fg:w="1"/><text x="94.3676%" y="783.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [18],enum llvm::cl::NumOccurrencesFlag,enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.1921%" y="853" width="0.0745%" height="15" fill="rgb(229,92,13)" fg:x="1265" fg:w="1"/><text x="94.4421%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [18],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.2666%" y="853" width="0.0745%" height="15" fill="rgb(245,98,39)" fg:x="1266" fg:w="1"/><text x="94.5166%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;,char [18],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.2666%" y="837" width="0.0745%" height="15" fill="rgb(234,135,48)" fg:x="1266" fg:w="1"/><text x="94.5166%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [22],enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.3410%" y="853" width="0.0745%" height="15" fill="rgb(230,98,28)" fg:x="1267" fg:w="1"/><text x="94.5910%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [22],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.4155%" y="853" width="0.0745%" height="15" fill="rgb(223,121,0)" fg:x="1268" fg:w="1"/><text x="94.6655%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;,char [17],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.4155%" y="837" width="0.0745%" height="15" fill="rgb(234,173,33)" fg:x="1268" fg:w="1"/><text x="94.6655%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [23],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.4899%" y="853" width="0.0745%" height="15" fill="rgb(245,47,8)" fg:x="1269" fg:w="1"/><text x="94.7399%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [24],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.5644%" y="853" width="0.0745%" height="15" fill="rgb(205,17,20)" fg:x="1270" fg:w="1"/><text x="94.8144%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="94.5644%" y="837" width="0.0745%" height="15" fill="rgb(232,151,16)" fg:x="1270" fg:w="1"/><text x="94.8144%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="94.5644%" y="821" width="0.0745%" height="15" fill="rgb(208,30,32)" fg:x="1270" fg:w="1"/><text x="94.8144%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="94.5644%" y="805" width="0.0745%" height="15" fill="rgb(254,26,3)" fg:x="1270" fg:w="1"/><text x="94.8144%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="94.5644%" y="789" width="0.0745%" height="15" fill="rgb(240,177,30)" fg:x="1270" fg:w="1"/><text x="94.8144%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="94.5644%" y="773" width="0.0745%" height="15" fill="rgb(248,76,44)" fg:x="1270" fg:w="1"/><text x="94.8144%" y="783.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [26],llvm::cl::desc,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.6389%" y="853" width="0.0745%" height="15" fill="rgb(241,186,54)" fg:x="1271" fg:w="1"/><text x="94.8889%" y="863.50"></text></g><g><title>test3`llvm::cl::opt_storage&lt;llvm::FunctionPass * __ptr64 (__cdecl*)(void),0,0&gt;::opt_storage&lt;llvm::FunctionPass * __ptr64 (__cdecl*) (1 samples, 0.07%)</title><rect x="94.6389%" y="837" width="0.0745%" height="15" fill="rgb(249,171,29)" fg:x="1271" fg:w="1"/><text x="94.8889%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [27],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.7133%" y="853" width="0.0745%" height="15" fill="rgb(237,151,44)" fg:x="1272" fg:w="1"/><text x="94.9633%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [30],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.7878%" y="853" width="0.0745%" height="15" fill="rgb(228,174,30)" fg:x="1273" fg:w="1"/><text x="95.0378%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [30],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.8622%" y="853" width="0.0745%" height="15" fill="rgb(252,14,37)" fg:x="1274" fg:w="1"/><text x="95.1122%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;,char [10],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.8622%" y="837" width="0.0745%" height="15" fill="rgb(207,111,40)" fg:x="1274" fg:w="1"/><text x="95.1122%" y="847.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="94.8622%" y="821" width="0.0745%" height="15" fill="rgb(248,171,54)" fg:x="1274" fg:w="1"/><text x="95.1122%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="94.8622%" y="805" width="0.0745%" height="15" fill="rgb(211,127,2)" fg:x="1274" fg:w="1"/><text x="95.1122%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [34],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="94.9367%" y="853" width="0.0745%" height="15" fill="rgb(236,87,47)" fg:x="1275" fg:w="1"/><text x="95.1867%" y="863.50"></text></g><g><title>test3`llvm::cl::Option::Option (1 samples, 0.07%)</title><rect x="94.9367%" y="837" width="0.0745%" height="15" fill="rgb(223,190,45)" fg:x="1275" fg:w="1"/><text x="95.1867%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [5],enum llvm::cl::OptionHidden,llvm::cl::initializer (2 samples, 0.15%)</title><rect x="95.0112%" y="853" width="0.1489%" height="15" fill="rgb(215,5,16)" fg:x="1276" fg:w="2"/><text x="95.2612%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (2 samples, 0.15%)</title><rect x="95.0112%" y="837" width="0.1489%" height="15" fill="rgb(252,82,33)" fg:x="1276" fg:w="2"/><text x="95.2612%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (2 samples, 0.15%)</title><rect x="95.0112%" y="821" width="0.1489%" height="15" fill="rgb(247,213,44)" fg:x="1276" fg:w="2"/><text x="95.2612%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="95.0856%" y="805" width="0.0745%" height="15" fill="rgb(205,196,44)" fg:x="1277" fg:w="1"/><text x="95.3356%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="95.0856%" y="789" width="0.0745%" height="15" fill="rgb(237,96,54)" fg:x="1277" fg:w="1"/><text x="95.3356%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="95.0856%" y="773" width="0.0745%" height="15" fill="rgb(230,113,34)" fg:x="1277" fg:w="1"/><text x="95.3356%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="95.0856%" y="757" width="0.0745%" height="15" fill="rgb(221,224,12)" fg:x="1277" fg:w="1"/><text x="95.3356%" y="767.50"></text></g><g><title>test3`llvm::StringMapImpl::LookupBucketFor (1 samples, 0.07%)</title><rect x="95.0856%" y="741" width="0.0745%" height="15" fill="rgb(219,112,44)" fg:x="1277" fg:w="1"/><text x="95.3356%" y="751.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [9],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.1601%" y="853" width="0.0745%" height="15" fill="rgb(210,31,13)" fg:x="1278" fg:w="1"/><text x="95.4101%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;bool,0,llvm::cl::parser&lt;bool&gt; &gt;,char [9],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.1601%" y="837" width="0.0745%" height="15" fill="rgb(230,25,16)" fg:x="1278" fg:w="1"/><text x="95.4101%" y="847.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="95.1601%" y="821" width="0.0745%" height="15" fill="rgb(246,108,53)" fg:x="1278" fg:w="1"/><text x="95.4101%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="95.1601%" y="805" width="0.0745%" height="15" fill="rgb(241,172,50)" fg:x="1278" fg:w="1"/><text x="95.4101%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;bool,1,llvm::cl::parser&lt;bool&gt; &gt;::opt&lt;bool,1,llvm::cl::parser&lt;bool&gt; &gt;&lt;char [19],llvm::cl::LocationClass (1 samples, 0.07%)</title><rect x="95.2345%" y="853" width="0.0745%" height="15" fill="rgb(235,141,10)" fg:x="1279" fg:w="1"/><text x="95.4845%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;char * __ptr64,0,llvm::cl::parser&lt;char * __ptr64&gt; &gt;::opt&lt;char * __ptr64,0,llvm::cl::parser&lt;char * __ptr64&gt; &gt;&lt;char [24],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.3090%" y="853" width="0.0745%" height="15" fill="rgb(220,174,43)" fg:x="1280" fg:w="1"/><text x="95.5590%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;char * __ptr64,0,llvm::cl::parser&lt;char * __ptr64&gt; &gt;,char [24],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.3090%" y="837" width="0.0745%" height="15" fill="rgb(215,181,40)" fg:x="1280" fg:w="1"/><text x="95.5590%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;double,0,llvm::cl::parser&lt;double&gt; &gt;::opt&lt;double,0,llvm::cl::parser&lt;double&gt; &gt;&lt;char [19],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.3835%" y="853" width="0.0745%" height="15" fill="rgb(230,97,2)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;double,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.3835%" y="837" width="0.0745%" height="15" fill="rgb(211,25,27)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="95.3835%" y="821" width="0.0745%" height="15" fill="rgb(230,87,26)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="95.3835%" y="805" width="0.0745%" height="15" fill="rgb(227,160,17)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="95.3835%" y="789" width="0.0745%" height="15" fill="rgb(244,85,34)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="95.3835%" y="773" width="0.0745%" height="15" fill="rgb(207,70,0)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="95.3835%" y="757" width="0.0745%" height="15" fill="rgb(223,129,7)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="767.50"></text></g><g><title>test3`llvm::StringMapEntry&lt;unsigned __int64&gt;::Create (1 samples, 0.07%)</title><rect x="95.3835%" y="741" width="0.0745%" height="15" fill="rgb(246,105,7)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="751.50"></text></g><g><title>test3`llvm::StringMapEntryBase::allocateWithKey (1 samples, 0.07%)</title><rect x="95.3835%" y="725" width="0.0745%" height="15" fill="rgb(215,154,42)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="735.50"></text></g><g><title>test3`llvm::MallocAllocator::Allocate (1 samples, 0.07%)</title><rect x="95.3835%" y="709" width="0.0745%" height="15" fill="rgb(220,215,30)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="719.50"></text></g><g><title>test3`llvm::allocate_buffer (1 samples, 0.07%)</title><rect x="95.3835%" y="693" width="0.0745%" height="15" fill="rgb(228,81,51)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="703.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="95.3835%" y="677" width="0.0745%" height="15" fill="rgb(247,71,54)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="687.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="95.3835%" y="661" width="0.0745%" height="15" fill="rgb(234,176,34)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="671.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="95.3835%" y="645" width="0.0745%" height="15" fill="rgb(241,103,54)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="655.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="95.3835%" y="629" width="0.0745%" height="15" fill="rgb(228,22,34)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="639.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="95.3835%" y="613" width="0.0745%" height="15" fill="rgb(241,179,48)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="623.50"></text></g><g><title>ucrtbased`memset (1 samples, 0.07%)</title><rect x="95.3835%" y="597" width="0.0745%" height="15" fill="rgb(235,167,37)" fg:x="1281" fg:w="1"/><text x="95.6335%" y="607.50"></text></g><g><title>test3`llvm::cl::opt&lt;double,0,llvm::cl::parser&lt;double&gt; &gt;::opt&lt;double,0,llvm::cl::parser&lt;double&gt; &gt;&lt;char [21],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.4579%" y="853" width="0.0745%" height="15" fill="rgb(213,109,30)" fg:x="1282" fg:w="1"/><text x="95.7079%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum DefaultOnOff,0,llvm::cl::parser&lt;enum DefaultOnOff&gt; &gt;::opt&lt;enum DefaultOnOff,0,llvm::cl::parser&lt;enum DefaultOnOff&gt; &gt;&lt;char [22],enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.5324%" y="853" width="0.0745%" height="15" fill="rgb(222,172,16)" fg:x="1283" fg:w="1"/><text x="95.7824%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum DefaultOnOff,0,llvm::cl::parser&lt;enum DefaultOnOff&gt; &gt;,char [17],enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.5324%" y="837" width="0.0745%" height="15" fill="rgb(233,192,5)" fg:x="1283" fg:w="1"/><text x="95.7824%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum DefaultOnOff,0,llvm::cl::parser&lt;enum DefaultOnOff&gt; &gt;,enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.5324%" y="821" width="0.0745%" height="15" fill="rgb(247,189,41)" fg:x="1283" fg:w="1"/><text x="95.7824%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum DefaultOnOff,0,llvm::cl::parser&lt;enum DefaultOnOff&gt; &gt;,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.5324%" y="805" width="0.0745%" height="15" fill="rgb(218,134,47)" fg:x="1283" fg:w="1"/><text x="95.7824%" y="815.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum DefaultOnOff,0,llvm::cl::parser&lt;enum DefaultOnOff&gt; &gt;,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.5324%" y="789" width="0.0745%" height="15" fill="rgb(216,29,3)" fg:x="1283" fg:w="1"/><text x="95.7824%" y="799.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum DefaultOnOff,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.5324%" y="773" width="0.0745%" height="15" fill="rgb(246,140,12)" fg:x="1283" fg:w="1"/><text x="95.7824%" y="783.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser&lt;enum PreferPredicateTy::Option&gt; &gt;::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser&lt;enum PreferPredicateTy::Option&gt; &gt;&lt;char [31],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.6069%" y="853" width="0.0745%" height="15" fill="rgb(230,136,11)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser&lt;enum PreferPredicateTy::Option&gt; &gt;,char [31],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.6069%" y="837" width="0.0745%" height="15" fill="rgb(247,22,47)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser&lt;enum PreferPredicateTy::Option&gt; &gt;,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.6069%" y="821" width="0.0745%" height="15" fill="rgb(218,84,22)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.6069%" y="805" width="0.0745%" height="15" fill="rgb(216,87,39)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="815.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.6069%" y="789" width="0.0745%" height="15" fill="rgb(221,178,8)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="799.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.6069%" y="773" width="0.0745%" height="15" fill="rgb(230,42,11)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="783.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.6069%" y="757" width="0.0745%" height="15" fill="rgb(237,229,4)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="767.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum PreferPredicateTy::Option,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.6069%" y="741" width="0.0745%" height="15" fill="rgb(222,31,33)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="751.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum PreferPredicateTy::Option&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="95.6069%" y="725" width="0.0745%" height="15" fill="rgb(210,17,39)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="735.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="95.6069%" y="709" width="0.0745%" height="15" fill="rgb(244,93,20)" fg:x="1284" fg:w="1"/><text x="95.8569%" y="719.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum `anonymous namespace&apos;::DefaultOnOff,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::DefaultOnOff&gt; &gt;::opt&lt;enum `anonymous namespace&apos;::DefaultOnOff,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::DefaultOnOff&gt; &gt;&lt;char [19],enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.6813%" y="853" width="0.0745%" height="15" fill="rgb(210,40,47)" fg:x="1285" fg:w="1"/><text x="95.9313%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum `anonymous namespace&apos;::DefaultOnOff,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::DefaultOnOff&gt; &gt;,char [19],enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.6813%" y="837" width="0.0745%" height="15" fill="rgb(239,211,47)" fg:x="1285" fg:w="1"/><text x="95.9313%" y="847.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="95.6813%" y="821" width="0.0745%" height="15" fill="rgb(251,223,49)" fg:x="1285" fg:w="1"/><text x="95.9313%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="95.6813%" y="805" width="0.0745%" height="15" fill="rgb(221,149,5)" fg:x="1285" fg:w="1"/><text x="95.9313%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::Level&gt; &gt;::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::Level&gt; &gt;&lt;char [15],llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.7558%" y="853" width="0.0745%" height="15" fill="rgb(219,224,51)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::Level&gt; &gt;,char [15],llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.7558%" y="837" width="0.0745%" height="15" fill="rgb(223,7,8)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::Level&gt; &gt;,llvm::cl::desc,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.7558%" y="821" width="0.0745%" height="15" fill="rgb(241,217,22)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser&lt;enum `anonymous namespace&apos;::Level&gt; &gt;,llvm::cl::ValuesClass,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.7558%" y="805" width="0.0745%" height="15" fill="rgb(248,209,0)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="815.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.7558%" y="789" width="0.0745%" height="15" fill="rgb(217,205,4)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="799.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum `anonymous namespace&apos;::Level,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.7558%" y="773" width="0.0745%" height="15" fill="rgb(228,124,39)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="783.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum `anonymous namespace&apos;::Level&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="95.7558%" y="757" width="0.0745%" height="15" fill="rgb(250,116,42)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="767.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="95.7558%" y="741" width="0.0745%" height="15" fill="rgb(223,202,9)" fg:x="1286" fg:w="1"/><text x="96.0058%" y="751.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser&lt;enum llvm::AsanDetectStackUseAfterReturnMode&gt; &gt;::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser&lt;enum llvm::AsanDetectStackUseAfterReturnMode&gt; &gt;&lt;char [22],llvm::cl::desc,llvm::cl::ValuesClass,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.8302%" y="853" width="0.0745%" height="15" fill="rgb(242,222,40)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser&lt;enum llvm::AsanDetectStackUseAfterReturnMode&gt; &gt;,char [22],llvm::cl::desc,llvm::cl::ValuesClass,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.8302%" y="837" width="0.0745%" height="15" fill="rgb(229,99,46)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser&lt;enum llvm::AsanDetectStackUseAfterReturnMode&gt; &gt;,llvm::cl::desc,llvm::cl::ValuesClass,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.8302%" y="821" width="0.0745%" height="15" fill="rgb(225,56,46)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser&lt;enum llvm::AsanDetectStackUseAfterReturnMode&gt; &gt;,llvm::cl::ValuesClass,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.8302%" y="805" width="0.0745%" height="15" fill="rgb(227,94,5)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="815.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.8302%" y="789" width="0.0745%" height="15" fill="rgb(205,112,38)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="799.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum llvm::AsanDetectStackUseAfterReturnMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.8302%" y="773" width="0.0745%" height="15" fill="rgb(231,133,46)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="783.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum llvm::AsanDetectStackUseAfterReturnMode&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="95.8302%" y="757" width="0.0745%" height="15" fill="rgb(217,16,9)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="767.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="95.8302%" y="741" width="0.0745%" height="15" fill="rgb(249,173,9)" fg:x="1287" fg:w="1"/><text x="96.0802%" y="751.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser&lt;enum llvm::AttributorRunOption&gt; &gt;::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser&lt;enum llvm::AttributorRunOption&gt; &gt;&lt;char [18],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.9047%" y="853" width="0.0745%" height="15" fill="rgb(205,163,53)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser&lt;enum llvm::AttributorRunOption&gt; &gt;,char [18],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.9047%" y="837" width="0.0745%" height="15" fill="rgb(217,54,41)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser&lt;enum llvm::AttributorRunOption&gt; &gt;,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.9047%" y="821" width="0.0745%" height="15" fill="rgb(228,216,12)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser&lt;enum llvm::AttributorRunOption&gt; &gt;,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="95.9047%" y="805" width="0.0745%" height="15" fill="rgb(244,228,15)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="815.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9047%" y="789" width="0.0745%" height="15" fill="rgb(221,176,53)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="799.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9047%" y="773" width="0.0745%" height="15" fill="rgb(205,94,34)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="783.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9047%" y="757" width="0.0745%" height="15" fill="rgb(213,110,48)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="767.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum llvm::AttributorRunOption,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9047%" y="741" width="0.0745%" height="15" fill="rgb(236,142,28)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="751.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum llvm::AttributorRunOption&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="95.9047%" y="725" width="0.0745%" height="15" fill="rgb(225,135,29)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="735.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9047%" y="709" width="0.0745%" height="15" fill="rgb(252,45,31)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="719.50"></text></g><g><title>test3`llvm::SmallVectorTemplateCommon&lt;std::pair&lt;llvm::SMLoc,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="95.9047%" y="693" width="0.0745%" height="15" fill="rgb(211,187,50)" fg:x="1288" fg:w="1"/><text x="96.1547%" y="703.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser&lt;enum llvm::GVDAGType&gt; &gt;::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser&lt;enum llvm::GVDAGType&gt; &gt; (1 samples, 0.07%)</title><rect x="95.9792%" y="853" width="0.0745%" height="15" fill="rgb(229,109,7)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9792%" y="837" width="0.0745%" height="15" fill="rgb(251,131,51)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9792%" y="821" width="0.0745%" height="15" fill="rgb(251,180,35)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9792%" y="805" width="0.0745%" height="15" fill="rgb(211,46,32)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="815.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9792%" y="789" width="0.0745%" height="15" fill="rgb(248,123,17)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="799.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9792%" y="773" width="0.0745%" height="15" fill="rgb(227,141,18)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="783.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum llvm::GVDAGType,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="95.9792%" y="757" width="0.0745%" height="15" fill="rgb(216,102,9)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="767.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum llvm::GVDAGType&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="95.9792%" y="741" width="0.0745%" height="15" fill="rgb(253,47,13)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="751.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="95.9792%" y="725" width="0.0745%" height="15" fill="rgb(226,93,23)" fg:x="1289" fg:w="1"/><text x="96.2292%" y="735.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::InlinerFunctionImportStatsOpts,0,llvm::cl::parser&lt;enum llvm::InlinerFunctionImportStatsOpts&gt; &gt;::opt&lt;enum llvm::InlinerFunctionImportStatsOpts,0,llvm::cl::parser&lt;enum llvm::InlinerFunctionImportStatsOpts&gt; &gt;&lt;char [30],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.0536%" y="853" width="0.0745%" height="15" fill="rgb(247,104,17)" fg:x="1290" fg:w="1"/><text x="96.3036%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser&lt;enum llvm::InliningAdvisorMode&gt; &gt;::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser&lt;enum llvm::InliningAdvisorMode&gt; &gt;&lt;char [18],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.1281%" y="853" width="0.0745%" height="15" fill="rgb(233,203,26)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser&lt;enum llvm::InliningAdvisorMode&gt; &gt;,char [18],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.1281%" y="837" width="0.0745%" height="15" fill="rgb(244,98,49)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser&lt;enum llvm::InliningAdvisorMode&gt; &gt;,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.1281%" y="821" width="0.0745%" height="15" fill="rgb(235,134,22)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.1281%" y="805" width="0.0745%" height="15" fill="rgb(221,70,32)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="815.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.1281%" y="789" width="0.0745%" height="15" fill="rgb(238,15,50)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="799.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.1281%" y="773" width="0.0745%" height="15" fill="rgb(215,221,48)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="783.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.1281%" y="757" width="0.0745%" height="15" fill="rgb(236,73,3)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="767.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum llvm::InliningAdvisorMode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.1281%" y="741" width="0.0745%" height="15" fill="rgb(250,107,11)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="751.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum llvm::InliningAdvisorMode&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="96.1281%" y="725" width="0.0745%" height="15" fill="rgb(242,39,14)" fg:x="1291" fg:w="1"/><text x="96.3781%" y="735.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::RegBankSelect::Mode,0,llvm::cl::parser&lt;enum llvm::RegBankSelect::Mode&gt; &gt;::opt&lt;enum llvm::RegBankSelect::Mode,0,llvm::cl::parser&lt;enum llvm::RegBankSelect::Mode&gt; &gt; (1 samples, 0.07%)</title><rect x="96.2025%" y="853" width="0.0745%" height="15" fill="rgb(248,164,37)" fg:x="1292" fg:w="1"/><text x="96.4525%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::ReplaceExitVal,0,llvm::cl::parser&lt;enum llvm::ReplaceExitVal&gt; &gt;::opt&lt;enum llvm::ReplaceExitVal,0,llvm::cl::parser&lt;enum llvm::ReplaceExitVal&gt; &gt;&lt;char [12],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.2770%" y="853" width="0.0745%" height="15" fill="rgb(217,60,12)" fg:x="1293" fg:w="1"/><text x="96.5270%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser&lt;enum llvm::TailPredication::Mode&gt; &gt;::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser&lt;enum llvm::TailPredication::Mode&gt; &gt;&lt;char [17],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.3515%" y="853" width="0.0745%" height="15" fill="rgb(240,125,29)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser&lt;enum llvm::TailPredication::Mode&gt; &gt;,char [17],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.3515%" y="837" width="0.0745%" height="15" fill="rgb(208,207,28)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="847.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser&lt;enum llvm::TailPredication::Mode&gt; &gt;,llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.3515%" y="821" width="0.0745%" height="15" fill="rgb(209,159,27)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="831.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser&lt;enum llvm::TailPredication::Mode&gt; &gt;,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.3515%" y="805" width="0.0745%" height="15" fill="rgb(251,176,53)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="815.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.3515%" y="789" width="0.0745%" height="15" fill="rgb(211,85,7)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="799.50"></text></g><g><title>test3`llvm::cl::applicator&lt;llvm::cl::ValuesClass&gt;::opt&lt;llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.3515%" y="773" width="0.0745%" height="15" fill="rgb(216,64,54)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="783.50"></text></g><g><title>test3`llvm::cl::ValuesClass::apply&lt;llvm::cl::opt&lt;enum llvm::TailPredication::Mode,0,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.3515%" y="757" width="0.0745%" height="15" fill="rgb(217,54,24)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="767.50"></text></g><g><title>test3`llvm::cl::parser&lt;enum llvm::TailPredication::Mode&gt;::addLiteralOption (1 samples, 0.07%)</title><rect x="96.3515%" y="741" width="0.0745%" height="15" fill="rgb(208,206,53)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="751.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="96.3515%" y="725" width="0.0745%" height="15" fill="rgb(251,74,39)" fg:x="1294" fg:w="1"/><text x="96.6015%" y="735.50"></text></g><g><title>test3`llvm::cl::opt&lt;float,0,llvm::cl::parser&lt;float&gt; &gt;::opt&lt;float,0,llvm::cl::parser&lt;float&gt; &gt;&lt;char [22],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.4259%" y="853" width="0.0745%" height="15" fill="rgb(226,47,5)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="96.4259%" y="837" width="0.0745%" height="15" fill="rgb(234,111,33)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="96.4259%" y="821" width="0.0745%" height="15" fill="rgb(251,14,10)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="96.4259%" y="805" width="0.0745%" height="15" fill="rgb(232,43,0)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="96.4259%" y="789" width="0.0745%" height="15" fill="rgb(222,68,43)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="96.4259%" y="773" width="0.0745%" height="15" fill="rgb(217,24,23)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="96.4259%" y="757" width="0.0745%" height="15" fill="rgb(229,209,14)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="767.50"></text></g><g><title>test3`llvm::StringMapImpl::LookupBucketFor (1 samples, 0.07%)</title><rect x="96.4259%" y="741" width="0.0745%" height="15" fill="rgb(250,149,48)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="751.50"></text></g><g><title>test3`llvm::djbHash (1 samples, 0.07%)</title><rect x="96.4259%" y="725" width="0.0745%" height="15" fill="rgb(210,120,37)" fg:x="1295" fg:w="1"/><text x="96.6759%" y="735.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;&lt;char [17],enum llvm::cl::OptionHidden,enum llvm::cl::NumOccurrencesFlag,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.5004%" y="853" width="0.0745%" height="15" fill="rgb(210,21,8)" fg:x="1296" fg:w="1"/><text x="96.7504%" y="863.50"></text></g><g><title>test3`llvm::cl::Option::Option (1 samples, 0.07%)</title><rect x="96.5004%" y="837" width="0.0745%" height="15" fill="rgb(243,145,7)" fg:x="1296" fg:w="1"/><text x="96.7504%" y="847.50"></text></g><g><title>test3`llvm::SmallPtrSet&lt;llvm::Argument * __ptr64,1&gt;::SmallPtrSet (1 samples, 0.07%)</title><rect x="96.5004%" y="821" width="0.0745%" height="15" fill="rgb(238,178,32)" fg:x="1296" fg:w="1"/><text x="96.7504%" y="831.50"></text></g><g><title>test3`llvm::SmallPtrSetImpl&lt;llvm::AbstractAttribute * __ptr64&gt;::SmallPtrSetImpl (1 samples, 0.07%)</title><rect x="96.5004%" y="805" width="0.0745%" height="15" fill="rgb(222,4,10)" fg:x="1296" fg:w="1"/><text x="96.7504%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;&lt;char [20],llvm::cl::desc,enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.5748%" y="853" width="0.0745%" height="15" fill="rgb(239,7,37)" fg:x="1297" fg:w="1"/><text x="96.8248%" y="863.50"></text></g><g><title>test3`llvm::cl::opt_storage&lt;int,0,0&gt;::opt_storage (1 samples, 0.07%)</title><rect x="96.5748%" y="837" width="0.0745%" height="15" fill="rgb(215,31,37)" fg:x="1297" fg:w="1"/><text x="96.8248%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;&lt;char [21],enum llvm::cl::OptionHidden,llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.6493%" y="853" width="0.0745%" height="15" fill="rgb(224,83,33)" fg:x="1298" fg:w="1"/><text x="96.8993%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;&lt;char [21],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.7238%" y="853" width="0.0745%" height="15" fill="rgb(239,55,3)" fg:x="1299" fg:w="1"/><text x="96.9738%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;,char [21],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.7238%" y="837" width="0.0745%" height="15" fill="rgb(247,92,11)" fg:x="1299" fg:w="1"/><text x="96.9738%" y="847.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="96.7238%" y="821" width="0.0745%" height="15" fill="rgb(239,200,7)" fg:x="1299" fg:w="1"/><text x="96.9738%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="96.7238%" y="805" width="0.0745%" height="15" fill="rgb(227,115,8)" fg:x="1299" fg:w="1"/><text x="96.9738%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;&lt;char [9],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.7982%" y="853" width="0.0745%" height="15" fill="rgb(215,189,27)" fg:x="1300" fg:w="1"/><text x="97.0482%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;llvm::ScheduleDAGInstrs * __ptr64 (__cdecl*)(llvm::MachineSchedContext * __ptr64),0,llvm::RegisterPassParser&lt;llvm::MachineSchedRegistry&gt; &gt;::opt&lt;llvm::ScheduleDAGInstrs * __ptr64 (__cdecl*)(llvm::MachineSchedContext * __ptr64),0,llvm::RegisterPassParser&lt;llvm::MachineSchedRegistry&gt; &gt;&lt;char [8],llvm::cl::initializer&lt;llvm::ScheduleDAGInstrs * __ptr64 (__cdecl*) (1 samples, 0.07%)</title><rect x="96.8727%" y="853" width="0.0745%" height="15" fill="rgb(251,216,39)" fg:x="1301" fg:w="1"/><text x="97.1227%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;llvm::ScheduleDAGInstrs * __ptr64 (__cdecl*)(llvm::MachineSchedContext * __ptr64),0,llvm::RegisterPassParser (1 samples, 0.07%)</title><rect x="96.8727%" y="837" width="0.0745%" height="15" fill="rgb(207,29,47)" fg:x="1301" fg:w="1"/><text x="97.1227%" y="847.50"></text></g><g><title>test3`llvm::RegisterPassParser (1 samples, 0.07%)</title><rect x="96.8727%" y="821" width="0.0745%" height="15" fill="rgb(210,71,34)" fg:x="1301" fg:w="1"/><text x="97.1227%" y="831.50"></text></g><g><title>test3`llvm::MachineSchedRegistry::getList (1 samples, 0.07%)</title><rect x="96.8727%" y="805" width="0.0745%" height="15" fill="rgb(253,217,51)" fg:x="1301" fg:w="1"/><text x="97.1227%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,0,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;::opt&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,0,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;&lt;char [18],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="96.9471%" y="853" width="0.0745%" height="15" fill="rgb(222,117,46)" fg:x="1302" fg:w="1"/><text x="97.1971%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,0,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;::opt&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,0,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;&lt;char [20],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.0216%" y="853" width="0.0745%" height="15" fill="rgb(226,132,6)" fg:x="1303" fg:w="1"/><text x="97.2716%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,0,llvm::cl::parser&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;,char [20],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.0216%" y="837" width="0.0745%" height="15" fill="rgb(254,145,51)" fg:x="1303" fg:w="1"/><text x="97.2716%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned __int64,0,llvm::cl::parser&lt;unsigned __int64&gt; &gt;::opt&lt;unsigned __int64,0,llvm::cl::parser&lt;unsigned __int64&gt; &gt;&lt;char [27],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.0961%" y="853" width="0.0745%" height="15" fill="rgb(231,199,27)" fg:x="1304" fg:w="1"/><text x="97.3461%" y="863.50"></text></g><g><title>test3`llvm::cl::Option::Option (1 samples, 0.07%)</title><rect x="97.1705%" y="837" width="0.0745%" height="15" fill="rgb(245,158,14)" fg:x="1305" fg:w="1"/><text x="97.4205%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;&lt;char [16],enum llvm::cl::OptionHidden,llvm::cl::initializer (2 samples, 0.15%)</title><rect x="97.1705%" y="853" width="0.1489%" height="15" fill="rgb(240,113,14)" fg:x="1305" fg:w="2"/><text x="97.4205%" y="863.50"></text></g><g><title>test3`llvm::cl::opt_storage&lt;int,0,0&gt;::opt_storage (1 samples, 0.07%)</title><rect x="97.2450%" y="837" width="0.0745%" height="15" fill="rgb(210,20,13)" fg:x="1306" fg:w="1"/><text x="97.4950%" y="847.50"></text></g><g><title>test3`llvm::cl::OptionValue&lt;int&gt;::OptionValue (1 samples, 0.07%)</title><rect x="97.2450%" y="821" width="0.0745%" height="15" fill="rgb(241,144,13)" fg:x="1306" fg:w="1"/><text x="97.4950%" y="831.50"></text></g><g><title>test3`llvm::cl::OptionValueBase&lt;int,0&gt;::OptionValueBase (1 samples, 0.07%)</title><rect x="97.2450%" y="805" width="0.0745%" height="15" fill="rgb(235,43,34)" fg:x="1306" fg:w="1"/><text x="97.4950%" y="815.50"></text></g><g><title>test3`llvm::cl::OptionValueCopy&lt;int&gt;::OptionValueCopy (1 samples, 0.07%)</title><rect x="97.2450%" y="789" width="0.0745%" height="15" fill="rgb(208,36,20)" fg:x="1306" fg:w="1"/><text x="97.4950%" y="799.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;&lt;char [20],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.3194%" y="853" width="0.0745%" height="15" fill="rgb(239,204,10)" fg:x="1307" fg:w="1"/><text x="97.5694%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;int,0,llvm::cl::parser&lt;int&gt; &gt;,char [10],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.3194%" y="837" width="0.0745%" height="15" fill="rgb(217,84,43)" fg:x="1307" fg:w="1"/><text x="97.5694%" y="847.50"></text></g><g><title>test3`llvm::StringRef::StringRef (1 samples, 0.07%)</title><rect x="97.3194%" y="821" width="0.0745%" height="15" fill="rgb(241,170,50)" fg:x="1307" fg:w="1"/><text x="97.5694%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (1 samples, 0.07%)</title><rect x="97.3194%" y="805" width="0.0745%" height="15" fill="rgb(226,205,29)" fg:x="1307" fg:w="1"/><text x="97.5694%" y="815.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;&lt;char [21],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.3939%" y="853" width="0.0745%" height="15" fill="rgb(233,113,1)" fg:x="1308" fg:w="1"/><text x="97.6439%" y="863.50"></text></g><g><title>test3`llvm::cl::apply&lt;llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;,char [21],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.3939%" y="837" width="0.0745%" height="15" fill="rgb(253,98,13)" fg:x="1308" fg:w="1"/><text x="97.6439%" y="847.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;&lt;char [32],enum llvm::cl::OptionHidden,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.4684%" y="853" width="0.0745%" height="15" fill="rgb(211,115,12)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;int,1,llvm::cl::parser (1 samples, 0.07%)</title><rect x="97.4684%" y="837" width="0.0745%" height="15" fill="rgb(208,12,16)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="847.50"></text></g><g><title>test3`llvm::cl::Option::addArgument (1 samples, 0.07%)</title><rect x="97.4684%" y="821" width="0.0745%" height="15" fill="rgb(237,193,54)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="831.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="97.4684%" y="805" width="0.0745%" height="15" fill="rgb(243,22,42)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="815.50"></text></g><g><title>test3`LLVMParseCommandLineOptions (1 samples, 0.07%)</title><rect x="97.4684%" y="789" width="0.0745%" height="15" fill="rgb(233,151,36)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="799.50"></text></g><g><title>test3`llvm::StringMap (1 samples, 0.07%)</title><rect x="97.4684%" y="773" width="0.0745%" height="15" fill="rgb(237,57,45)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="783.50"></text></g><g><title>test3`llvm::StringMap&lt;llvm::VRegInfo * __ptr64,llvm::MallocAllocator&gt;::try_emplace (1 samples, 0.07%)</title><rect x="97.4684%" y="757" width="0.0745%" height="15" fill="rgb(221,88,17)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="767.50"></text></g><g><title>test3`llvm::StringMapImpl::LookupBucketFor (1 samples, 0.07%)</title><rect x="97.4684%" y="741" width="0.0745%" height="15" fill="rgb(230,79,15)" fg:x="1309" fg:w="1"/><text x="97.7184%" y="751.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;&lt;char [37],llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.5428%" y="853" width="0.0745%" height="15" fill="rgb(213,57,13)" fg:x="1310" fg:w="1"/><text x="97.7928%" y="863.50"></text></g><g><title>test3`llvm::cl::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;::opt&lt;unsigned int,0,llvm::cl::parser&lt;unsigned int&gt; &gt;&lt;char [38],llvm::cl::desc,llvm::cl::initializer (1 samples, 0.07%)</title><rect x="97.6173%" y="853" width="0.0745%" height="15" fill="rgb(222,116,39)" fg:x="1311" fg:w="1"/><text x="97.8673%" y="863.50"></text></g><g><title>test3`llvm::cl::Option::Option (1 samples, 0.07%)</title><rect x="97.6173%" y="837" width="0.0745%" height="15" fill="rgb(245,107,2)" fg:x="1311" fg:w="1"/><text x="97.8673%" y="847.50"></text></g><g><title>test3`llvm::cl::getGeneralCategory (1 samples, 0.07%)</title><rect x="97.6173%" y="821" width="0.0745%" height="15" fill="rgb(238,1,10)" fg:x="1311" fg:w="1"/><text x="97.8673%" y="831.50"></text></g><g><title>test3`llvm::SmallVectorImpl (1 samples, 0.07%)</title><rect x="97.6917%" y="757" width="0.0745%" height="15" fill="rgb(249,4,48)" fg:x="1312" fg:w="1"/><text x="97.9417%" y="767.50"></text></g><g><title>test3`llvm::SmallVectorBase (1 samples, 0.07%)</title><rect x="97.6917%" y="741" width="0.0745%" height="15" fill="rgb(223,151,18)" fg:x="1312" fg:w="1"/><text x="97.9417%" y="751.50"></text></g><g><title>test3`llvm::cl::values (2 samples, 0.15%)</title><rect x="97.6917%" y="853" width="0.1489%" height="15" fill="rgb(227,65,43)" fg:x="1312" fg:w="2"/><text x="97.9417%" y="863.50"></text></g><g><title>test3`llvm::cl::ValuesClass::ValuesClass (2 samples, 0.15%)</title><rect x="97.6917%" y="837" width="0.1489%" height="15" fill="rgb(218,40,45)" fg:x="1312" fg:w="2"/><text x="97.9417%" y="847.50"></text></g><g><title>test3`llvm::SmallVector&lt;llvm::cl::OptionEnumValue,4&gt;::SmallVector (2 samples, 0.15%)</title><rect x="97.6917%" y="821" width="0.1489%" height="15" fill="rgb(252,121,31)" fg:x="1312" fg:w="2"/><text x="97.9417%" y="831.50"></text></g><g><title>test3`llvm::SmallVectorImpl (2 samples, 0.15%)</title><rect x="97.6917%" y="805" width="0.1489%" height="15" fill="rgb(219,158,43)" fg:x="1312" fg:w="2"/><text x="97.9417%" y="815.50"></text></g><g><title>test3`llvm::SmallVectorImpl (2 samples, 0.15%)</title><rect x="97.6917%" y="789" width="0.1489%" height="15" fill="rgb(231,162,42)" fg:x="1312" fg:w="2"/><text x="97.9417%" y="799.50"></text></g><g><title>test3`llvm::SmallVectorImpl&lt;llvm::cl::OptionEnumValue&gt;::append (2 samples, 0.15%)</title><rect x="97.6917%" y="773" width="0.1489%" height="15" fill="rgb(217,179,25)" fg:x="1312" fg:w="2"/><text x="97.9417%" y="783.50"></text></g><g><title>test3`llvm::SmallVectorTemplateBase&lt;llvm::cl::OptionEnumValue,1&gt;::uninitialized_copy (1 samples, 0.07%)</title><rect x="97.7662%" y="757" width="0.0745%" height="15" fill="rgb(206,212,31)" fg:x="1313" fg:w="1"/><text x="98.0162%" y="767.50"></text></g><g><title>test3`llvm::codeview::ContinuationRecordBuilder::end (1 samples, 0.07%)</title><rect x="97.8407%" y="853" width="0.0745%" height="15" fill="rgb(235,144,12)" fg:x="1314" fg:w="1"/><text x="98.0907%" y="863.50"></text></g><g><title>test3`llvm::codeview::ContinuationRecordBuilder::end (1 samples, 0.07%)</title><rect x="97.8407%" y="837" width="0.0745%" height="15" fill="rgb(213,51,10)" fg:x="1314" fg:w="1"/><text x="98.0907%" y="847.50"></text></g><g><title>test3`llvm::support::detail::packed_endian_specific_integral&lt;unsigned short,1,1,1&gt;::packed_endian_specific_integral (1 samples, 0.07%)</title><rect x="97.8407%" y="821" width="0.0745%" height="15" fill="rgb(231,145,14)" fg:x="1314" fg:w="1"/><text x="98.0907%" y="831.50"></text></g><g><title>test3`llvm::initializeMicroMipsSizeReducePass (1 samples, 0.07%)</title><rect x="97.9151%" y="853" width="0.0745%" height="15" fill="rgb(235,15,28)" fg:x="1315" fg:w="1"/><text x="98.1651%" y="863.50"></text></g><g><title>test3`llvm::initializeMicroMipsSizeReducePass (1 samples, 0.07%)</title><rect x="97.9151%" y="837" width="0.0745%" height="15" fill="rgb(237,206,10)" fg:x="1315" fg:w="1"/><text x="98.1651%" y="847.50"></text></g><g><title>test3`llvm::initializeMicroMipsSizeReducePass (1 samples, 0.07%)</title><rect x="97.9151%" y="821" width="0.0745%" height="15" fill="rgb(236,227,27)" fg:x="1315" fg:w="1"/><text x="98.1651%" y="831.50"></text></g><g><title>test3`llvm::initializeMicroMipsSizeReducePass (1 samples, 0.07%)</title><rect x="97.9151%" y="805" width="0.0745%" height="15" fill="rgb(246,83,35)" fg:x="1315" fg:w="1"/><text x="98.1651%" y="815.50"></text></g><g><title>test3`llvm::makeArrayRef (1 samples, 0.07%)</title><rect x="97.9896%" y="853" width="0.0745%" height="15" fill="rgb(220,136,24)" fg:x="1316" fg:w="1"/><text x="98.2396%" y="863.50"></text></g><g><title>test3`llvm::sys::windows::GetCommandLineArguments (1 samples, 0.07%)</title><rect x="98.0640%" y="853" width="0.0745%" height="15" fill="rgb(217,3,25)" fg:x="1317" fg:w="1"/><text x="98.3140%" y="863.50"></text></g><g><title>test3`llvm::sys::windows::GetCommandLineArguments (1 samples, 0.07%)</title><rect x="98.0640%" y="837" width="0.0745%" height="15" fill="rgb(239,24,14)" fg:x="1317" fg:w="1"/><text x="98.3140%" y="847.50"></text></g><g><title>test3`_RTC_CheckStackVars (1 samples, 0.07%)</title><rect x="98.0640%" y="821" width="0.0745%" height="15" fill="rgb(244,16,53)" fg:x="1317" fg:w="1"/><text x="98.3140%" y="831.50"></text></g><g><title>test3`std::_Pass_fn (1 samples, 0.07%)</title><rect x="98.1385%" y="853" width="0.0745%" height="15" fill="rgb(208,175,44)" fg:x="1318" fg:w="1"/><text x="98.3885%" y="863.50"></text></g><g><title>test3`std::_Tuple_val&lt;std::function&lt;void __cdecl(llvm::PassManagerBuilder const &amp; __ptr64,llvm::legacy::PassManagerBase &amp; __ptr64)&gt; &gt;::~_Tuple_val&lt;std::function&lt;void __cdecl (1 samples, 0.07%)</title><rect x="98.2130%" y="853" width="0.0745%" height="15" fill="rgb(252,18,48)" fg:x="1319" fg:w="1"/><text x="98.4630%" y="863.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::construct&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.4363%" y="773" width="0.0745%" height="15" fill="rgb(234,199,32)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="783.50"></text></g><g><title>test3`std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.4363%" y="757" width="0.0745%" height="15" fill="rgb(225,77,54)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="767.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.4363%" y="741" width="0.0745%" height="15" fill="rgb(225,42,25)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="751.50"></text></g><g><title>test3`std::_Container_proxy_ptr12&lt;std::allocator&lt;std::_Container_proxy&gt; &gt;::_Container_proxy_ptr12&lt;std::allocator (1 samples, 0.07%)</title><rect x="98.4363%" y="725" width="0.0745%" height="15" fill="rgb(242,227,46)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="735.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="98.4363%" y="709" width="0.0745%" height="15" fill="rgb(246,197,35)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="719.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="98.4363%" y="693" width="0.0745%" height="15" fill="rgb(215,159,26)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="703.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="98.4363%" y="677" width="0.0745%" height="15" fill="rgb(212,194,50)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="687.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="98.4363%" y="661" width="0.0745%" height="15" fill="rgb(246,132,1)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="671.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="98.4363%" y="645" width="0.0745%" height="15" fill="rgb(217,71,7)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="655.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="98.4363%" y="629" width="0.0745%" height="15" fill="rgb(252,59,32)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="639.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.4363%" y="613" width="0.0745%" height="15" fill="rgb(253,204,25)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="623.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.4363%" y="597" width="0.0745%" height="15" fill="rgb(232,21,16)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="607.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="98.4363%" y="581" width="0.0745%" height="15" fill="rgb(248,90,29)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="591.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="98.4363%" y="565" width="0.0745%" height="15" fill="rgb(249,223,7)" fg:x="1322" fg:w="1"/><text x="98.6863%" y="575.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (3 samples, 0.22%)</title><rect x="98.3619%" y="837" width="0.2234%" height="15" fill="rgb(231,119,42)" fg:x="1321" fg:w="3"/><text x="98.6119%" y="847.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt;,0&gt; &gt;::insert&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (3 samples, 0.22%)</title><rect x="98.3619%" y="821" width="0.2234%" height="15" fill="rgb(215,41,35)" fg:x="1321" fg:w="3"/><text x="98.6119%" y="831.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt;,0&gt; &gt;::_Emplace_hint&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (3 samples, 0.22%)</title><rect x="98.3619%" y="805" width="0.2234%" height="15" fill="rgb(220,44,45)" fg:x="1321" fg:w="3"/><text x="98.6119%" y="815.50"></text></g><g><title>test3`std::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (3 samples, 0.22%)</title><rect x="98.3619%" y="789" width="0.2234%" height="15" fill="rgb(253,197,36)" fg:x="1321" fg:w="3"/><text x="98.6119%" y="799.50"></text></g><g><title>test3`std::_Tree_temp_node_alloc&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node_alloc&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.5108%" y="773" width="0.0745%" height="15" fill="rgb(245,225,54)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="783.50"></text></g><g><title>test3`std::_Alloc_construct_ptr&lt;std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="98.5108%" y="757" width="0.0745%" height="15" fill="rgb(239,94,37)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="767.50"></text></g><g><title>test3`std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="98.5108%" y="741" width="0.0745%" height="15" fill="rgb(242,217,10)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="751.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="98.5108%" y="725" width="0.0745%" height="15" fill="rgb(250,193,7)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="735.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="98.5108%" y="709" width="0.0745%" height="15" fill="rgb(230,104,19)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="719.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="98.5108%" y="693" width="0.0745%" height="15" fill="rgb(230,181,4)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="703.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="98.5108%" y="677" width="0.0745%" height="15" fill="rgb(216,219,49)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="687.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="98.5108%" y="661" width="0.0745%" height="15" fill="rgb(254,144,0)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="671.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.5108%" y="645" width="0.0745%" height="15" fill="rgb(205,209,38)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="655.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.5108%" y="629" width="0.0745%" height="15" fill="rgb(240,21,42)" fg:x="1323" fg:w="1"/><text x="98.7608%" y="639.50"></text></g><g><title>test3`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (5 samples, 0.37%)</title><rect x="98.2874%" y="853" width="0.3723%" height="15" fill="rgb(241,132,3)" fg:x="1320" fg:w="5"/><text x="98.5374%" y="863.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt; &gt;,0&gt; &gt;::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.5853%" y="837" width="0.0745%" height="15" fill="rgb(225,14,2)" fg:x="1324" fg:w="1"/><text x="98.8353%" y="847.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,enum llvm::Hexagon::ArchEnum,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.5853%" y="821" width="0.0745%" height="15" fill="rgb(210,141,35)" fg:x="1324" fg:w="1"/><text x="98.8353%" y="831.50"></text></g><g><title>test3`std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,enum llvm::Hexagon::ArchEnum&gt;,void * __ptr64&gt;::_Buyheadnode&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.5853%" y="805" width="0.0745%" height="15" fill="rgb(251,14,44)" fg:x="1324" fg:w="1"/><text x="98.8353%" y="815.50"></text></g><g><title>test3`std::_Construct_in_place (1 samples, 0.07%)</title><rect x="98.5853%" y="789" width="0.0745%" height="15" fill="rgb(247,48,18)" fg:x="1324" fg:w="1"/><text x="98.8353%" y="799.50"></text></g><g><title>test3`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt; &gt;::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.6597%" y="853" width="0.0745%" height="15" fill="rgb(225,0,40)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="863.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.6597%" y="837" width="0.0745%" height="15" fill="rgb(221,31,33)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="847.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt;,0&gt; &gt;::insert&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.6597%" y="821" width="0.0745%" height="15" fill="rgb(237,42,40)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="831.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,unsigned int,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt; &gt;,0&gt; &gt;::_Emplace_hint&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.6597%" y="805" width="0.0745%" height="15" fill="rgb(233,51,29)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="815.50"></text></g><g><title>test3`std::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;,void * __ptr64&gt; &gt; &gt;&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.6597%" y="789" width="0.0745%" height="15" fill="rgb(226,58,20)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="799.50"></text></g><g><title>test3`std::_Tree_temp_node_alloc&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node_alloc&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.6597%" y="773" width="0.0745%" height="15" fill="rgb(208,98,7)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="783.50"></text></g><g><title>test3`std::_Alloc_construct_ptr&lt;std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="98.6597%" y="757" width="0.0745%" height="15" fill="rgb(228,143,44)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="767.50"></text></g><g><title>test3`std::allocator&lt;std::_List_node (1 samples, 0.07%)</title><rect x="98.6597%" y="741" width="0.0745%" height="15" fill="rgb(246,55,38)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="751.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="98.6597%" y="725" width="0.0745%" height="15" fill="rgb(247,87,16)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="735.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="98.6597%" y="709" width="0.0745%" height="15" fill="rgb(234,129,42)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="719.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="98.6597%" y="693" width="0.0745%" height="15" fill="rgb(220,82,16)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="703.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="98.6597%" y="677" width="0.0745%" height="15" fill="rgb(211,88,4)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="687.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="98.6597%" y="661" width="0.0745%" height="15" fill="rgb(248,151,21)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="671.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.6597%" y="645" width="0.0745%" height="15" fill="rgb(238,163,6)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="655.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.6597%" y="629" width="0.0745%" height="15" fill="rgb(209,183,11)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="639.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="98.6597%" y="613" width="0.0745%" height="15" fill="rgb(219,37,20)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="623.50"></text></g><g><title>ntdll`RtlAllocateHeap (1 samples, 0.07%)</title><rect x="98.6597%" y="597" width="0.0745%" height="15" fill="rgb(210,158,4)" fg:x="1325" fg:w="1"/><text x="98.9097%" y="607.50"></text></g><g><title>test3`std::map&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="853" width="0.0745%" height="15" fill="rgb(221,167,53)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="863.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="837" width="0.0745%" height="15" fill="rgb(237,151,45)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="847.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;,0&gt; &gt;::insert&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="821" width="0.0745%" height="15" fill="rgb(231,39,3)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="831.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;,0&gt; &gt;::_Emplace_hint&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="805" width="0.0745%" height="15" fill="rgb(212,167,28)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="815.50"></text></g><g><title>test3`std::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="789" width="0.0745%" height="15" fill="rgb(232,178,8)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="799.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="773" width="0.0745%" height="15" fill="rgb(225,151,20)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="783.50"></text></g><g><title>test3`std::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::pair&lt;unsigned int const ,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="757" width="0.0745%" height="15" fill="rgb(238,3,37)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="767.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="741" width="0.0745%" height="15" fill="rgb(251,147,42)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="751.50"></text></g><g><title>test3`std::_Container_proxy_ptr12&lt;std::allocator&lt;std::_Container_proxy&gt; &gt;::_Container_proxy_ptr12&lt;std::allocator (1 samples, 0.07%)</title><rect x="98.7342%" y="725" width="0.0745%" height="15" fill="rgb(208,173,10)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="735.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="98.7342%" y="709" width="0.0745%" height="15" fill="rgb(246,225,4)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="719.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="98.7342%" y="693" width="0.0745%" height="15" fill="rgb(248,102,6)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="703.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="98.7342%" y="677" width="0.0745%" height="15" fill="rgb(232,6,21)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="687.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="98.7342%" y="661" width="0.0745%" height="15" fill="rgb(221,179,22)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="671.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="98.7342%" y="645" width="0.0745%" height="15" fill="rgb(252,50,20)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="655.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="98.7342%" y="629" width="0.0745%" height="15" fill="rgb(222,56,38)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="639.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.7342%" y="613" width="0.0745%" height="15" fill="rgb(206,193,29)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="623.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.7342%" y="597" width="0.0745%" height="15" fill="rgb(239,192,45)" fg:x="1326" fg:w="1"/><text x="98.9842%" y="607.50"></text></g><g><title>test3`std::map&lt;unsigned int,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt; &gt; &gt;::map&lt;unsigned int,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="853" width="0.0745%" height="15" fill="rgb(254,18,36)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="863.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="837" width="0.0745%" height="15" fill="rgb(221,127,11)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="847.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt; &gt;,0&gt; &gt;::insert&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="821" width="0.0745%" height="15" fill="rgb(234,146,35)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="831.50"></text></g><g><title>test3`std::_Tree&lt;std::_Tmap_traits&lt;unsigned int,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt;,std::less&lt;unsigned int&gt;,std::allocator&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt; &gt;,0&gt; &gt;::_Emplace_hint&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="805" width="0.0745%" height="15" fill="rgb(254,201,37)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="815.50"></text></g><g><title>test3`std::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::_Tree_temp_node&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="789" width="0.0745%" height="15" fill="rgb(211,202,23)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="799.50"></text></g><g><title>test3`std::_Default_allocator_traits&lt;std::allocator&lt;std::_Tree_node&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt;,void * __ptr64&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt;,std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="773" width="0.0745%" height="15" fill="rgb(237,91,2)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="783.50"></text></g><g><title>test3`std::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator&lt;unsigned int&gt; &gt; &gt;::pair&lt;unsigned int const ,std::vector&lt;unsigned int,std::allocator (1 samples, 0.07%)</title><rect x="98.8086%" y="757" width="0.0745%" height="15" fill="rgb(226,228,36)" fg:x="1327" fg:w="1"/><text x="99.0586%" y="767.50"></text></g><g><title>test3`std::_Container_proxy_ptr12&lt;std::allocator&lt;std::_Container_proxy&gt; &gt;::_Container_proxy_ptr12&lt;std::allocator (1 samples, 0.07%)</title><rect x="98.8831%" y="821" width="0.0745%" height="15" fill="rgb(213,63,50)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="831.50"></text></g><g><title>test3`std::allocator&lt;llvm::rdf::NodeAddr (1 samples, 0.07%)</title><rect x="98.8831%" y="805" width="0.0745%" height="15" fill="rgb(235,194,19)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="815.50"></text></g><g><title>test3`std::_Allocate (1 samples, 0.07%)</title><rect x="98.8831%" y="789" width="0.0745%" height="15" fill="rgb(207,204,18)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="799.50"></text></g><g><title>test3`std::_Default_allocate_traits::_Allocate (1 samples, 0.07%)</title><rect x="98.8831%" y="773" width="0.0745%" height="15" fill="rgb(248,8,7)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="783.50"></text></g><g><title>test3`operator new (1 samples, 0.07%)</title><rect x="98.8831%" y="757" width="0.0745%" height="15" fill="rgb(223,145,47)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="767.50"></text></g><g><title>ucrtbased`malloc (1 samples, 0.07%)</title><rect x="98.8831%" y="741" width="0.0745%" height="15" fill="rgb(228,84,11)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="751.50"></text></g><g><title>ucrtbased`malloc_dbg (1 samples, 0.07%)</title><rect x="98.8831%" y="725" width="0.0745%" height="15" fill="rgb(218,76,45)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="735.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.8831%" y="709" width="0.0745%" height="15" fill="rgb(223,80,15)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="719.50"></text></g><g><title>ucrtbased`calloc_base (1 samples, 0.07%)</title><rect x="98.8831%" y="693" width="0.0745%" height="15" fill="rgb(219,218,33)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="703.50"></text></g><g><title>ucrtbased`recalloc (1 samples, 0.07%)</title><rect x="98.8831%" y="677" width="0.0745%" height="15" fill="rgb(208,51,11)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="687.50"></text></g><g><title>ntdll`RtlLeaveCriticalSection (1 samples, 0.07%)</title><rect x="98.8831%" y="661" width="0.0745%" height="15" fill="rgb(229,165,39)" fg:x="1328" fg:w="1"/><text x="99.1331%" y="671.50"></text></g><g><title>test3`compiler_builtins::int::mul::__muloti4::__muloti4 (148 samples, 11.02%)</title><rect x="88.4587%" y="869" width="11.0201%" height="15" fill="rgb(241,100,24)" fg:x="1188" fg:w="148"/><text x="88.7087%" y="879.50">test3`compiler_b..</text></g><g><title>test3`std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,unsigned int&gt;&lt;char const (&amp; __ptr64)[8],enum llvm::ELF:: (8 samples, 0.60%)</title><rect x="98.8831%" y="853" width="0.5957%" height="15" fill="rgb(228,14,23)" fg:x="1328" fg:w="8"/><text x="99.1331%" y="863.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (8 samples, 0.60%)</title><rect x="98.8831%" y="837" width="0.5957%" height="15" fill="rgb(247,116,52)" fg:x="1328" fg:w="8"/><text x="99.1331%" y="847.50"></text></g><g><title>test3`std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator (7 samples, 0.52%)</title><rect x="98.9576%" y="821" width="0.5212%" height="15" fill="rgb(216,149,33)" fg:x="1329" fg:w="7"/><text x="99.2076%" y="831.50"></text></g><g><title>test3`std::_Narrow_char_traits (7 samples, 0.52%)</title><rect x="98.9576%" y="805" width="0.5212%" height="15" fill="rgb(238,142,29)" fg:x="1329" fg:w="7"/><text x="99.2076%" y="815.50"></text></g><g><title>test3`pre_cpp_initialization (1 samples, 0.07%)</title><rect x="99.4788%" y="869" width="0.0745%" height="15" fill="rgb(224,83,40)" fg:x="1336" fg:w="1"/><text x="99.7288%" y="879.50"></text></g><g><title>test3`__scrt_set_unhandled_exception_filter (1 samples, 0.07%)</title><rect x="99.4788%" y="853" width="0.0745%" height="15" fill="rgb(234,165,11)" fg:x="1336" fg:w="1"/><text x="99.7288%" y="863.50"></text></g><g><title>KernelBase`SetUnhandledExceptionFilter (1 samples, 0.07%)</title><rect x="99.4788%" y="837" width="0.0745%" height="15" fill="rgb(215,96,23)" fg:x="1336" fg:w="1"/><text x="99.7288%" y="847.50"></text></g><g><title>KernelBase`SetUnhandledExceptionFilter (1 samples, 0.07%)</title><rect x="99.4788%" y="821" width="0.0745%" height="15" fill="rgb(233,179,26)" fg:x="1336" fg:w="1"/><text x="99.7288%" y="831.50"></text></g><g><title>ntdll`NtQueryVirtualMemory (1 samples, 0.07%)</title><rect x="99.4788%" y="805" width="0.0745%" height="15" fill="rgb(225,129,33)" fg:x="1336" fg:w="1"/><text x="99.7288%" y="815.50"></text></g><g><title>ucrtbased`initterm (152 samples, 11.32%)</title><rect x="88.3098%" y="885" width="11.3179%" height="15" fill="rgb(237,49,13)" fg:x="1186" fg:w="152"/><text x="88.5598%" y="895.50">ucrtbased`initterm</text></g><g><title>test3`std::sys::windows::c::NtOpenFile::init (1 samples, 0.07%)</title><rect x="99.5532%" y="869" width="0.0745%" height="15" fill="rgb(211,3,31)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="879.50"></text></g><g><title>KernelBase`GetProcAddressForCaller (1 samples, 0.07%)</title><rect x="99.5532%" y="853" width="0.0745%" height="15" fill="rgb(216,152,19)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="863.50"></text></g><g><title>ntdll`LdrGetProcedureAddressForCaller (1 samples, 0.07%)</title><rect x="99.5532%" y="837" width="0.0745%" height="15" fill="rgb(251,121,35)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="847.50"></text></g><g><title>ntdll`LdrGetProcedureAddressForCaller (1 samples, 0.07%)</title><rect x="99.5532%" y="821" width="0.0745%" height="15" fill="rgb(210,217,47)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="831.50"></text></g><g><title>ntdll`RtlVirtualUnwind (1 samples, 0.07%)</title><rect x="99.5532%" y="805" width="0.0745%" height="15" fill="rgb(244,116,22)" fg:x="1337" fg:w="1"/><text x="99.8032%" y="815.50"></text></g><g><title>test3`__scrt_file_policy::set_commode (1 samples, 0.07%)</title><rect x="99.6277%" y="853" width="0.0745%" height="15" fill="rgb(228,17,21)" fg:x="1338" fg:w="1"/><text x="99.8777%" y="863.50"></text></g><g><title>ucrtbased`_p__commode (1 samples, 0.07%)</title><rect x="99.6277%" y="837" width="0.0745%" height="15" fill="rgb(240,149,34)" fg:x="1338" fg:w="1"/><text x="99.8777%" y="847.50"></text></g><g><title>test3`mainCRTStartup (727 samples, 54.13%)</title><rect x="45.6441%" y="933" width="54.1325%" height="15" fill="rgb(208,125,47)" fg:x="613" fg:w="727"/><text x="45.8941%" y="943.50">test3`mainCRTStartup</text></g><g><title>test3`__scrt_common_main (726 samples, 54.06%)</title><rect x="45.7185%" y="917" width="54.0581%" height="15" fill="rgb(249,186,39)" fg:x="614" fg:w="726"/><text x="45.9685%" y="927.50">test3`__scrt_common_main</text></g><g><title>test3`__scrt_common_main_seh (726 samples, 54.06%)</title><rect x="45.7185%" y="901" width="54.0581%" height="15" fill="rgb(240,220,33)" fg:x="614" fg:w="726"/><text x="45.9685%" y="911.50">test3`__scrt_common_main_seh</text></g><g><title>ucrtbased`initterm_e (2 samples, 0.15%)</title><rect x="99.6277%" y="885" width="0.1489%" height="15" fill="rgb(243,110,23)" fg:x="1338" fg:w="2"/><text x="99.8777%" y="895.50"></text></g><g><title>test3`pre_c_initialization (2 samples, 0.15%)</title><rect x="99.6277%" y="869" width="0.1489%" height="15" fill="rgb(219,163,46)" fg:x="1338" fg:w="2"/><text x="99.8777%" y="879.50"></text></g><g><title>test3`__scrt_narrow_argv_policy::configure_argv (1 samples, 0.07%)</title><rect x="99.7022%" y="853" width="0.0745%" height="15" fill="rgb(216,126,30)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="863.50"></text></g><g><title>ucrtbased`configure_narrow_argv (1 samples, 0.07%)</title><rect x="99.7022%" y="837" width="0.0745%" height="15" fill="rgb(208,139,11)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="847.50"></text></g><g><title>ucrtbased`get_wpgmptr (1 samples, 0.07%)</title><rect x="99.7022%" y="821" width="0.0745%" height="15" fill="rgb(213,118,36)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="831.50"></text></g><g><title>ucrtbased`get_wpgmptr (1 samples, 0.07%)</title><rect x="99.7022%" y="805" width="0.0745%" height="15" fill="rgb(226,43,17)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="815.50"></text></g><g><title>ucrtbased`get_wpgmptr (1 samples, 0.07%)</title><rect x="99.7022%" y="789" width="0.0745%" height="15" fill="rgb(254,217,4)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="799.50"></text></g><g><title>ucrtbased`ismbblead (1 samples, 0.07%)</title><rect x="99.7022%" y="773" width="0.0745%" height="15" fill="rgb(210,134,47)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="783.50"></text></g><g><title>ucrtbased`ismbbkana (1 samples, 0.07%)</title><rect x="99.7022%" y="757" width="0.0745%" height="15" fill="rgb(237,24,49)" fg:x="1339" fg:w="1"/><text x="99.9522%" y="767.50"></text></g><g><title>KernelBase`SwitchToThread (1 samples, 0.07%)</title><rect x="99.7766%" y="885" width="0.0745%" height="15" fill="rgb(251,39,46)" fg:x="1340" fg:w="1"/><text x="100.0266%" y="895.50"></text></g><g><title>ntdll`ZwYieldExecution (1 samples, 0.07%)</title><rect x="99.7766%" y="869" width="0.0745%" height="15" fill="rgb(251,220,3)" fg:x="1340" fg:w="1"/><text x="100.0266%" y="879.50"></text></g><g><title>all (1,343 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(228,105,12)" fg:x="0" fg:w="1343"/><text x="0.2500%" y="991.50"></text></g><g><title>ntdll`RtlUserThreadStart (786 samples, 58.53%)</title><rect x="41.4743%" y="965" width="58.5257%" height="15" fill="rgb(215,196,1)" fg:x="557" fg:w="786"/><text x="41.7243%" y="975.50">ntdll`RtlUserThreadStart</text></g><g><title>kernel32`BaseThreadInitThunk (783 samples, 58.30%)</title><rect x="41.6977%" y="949" width="58.3023%" height="15" fill="rgb(214,33,39)" fg:x="560" fg:w="783"/><text x="41.9477%" y="959.50">kernel32`BaseThreadInitThunk</text></g><g><title>test3`std::sys::windows::thread::impl$0::new::thread_start (3 samples, 0.22%)</title><rect x="99.7766%" y="933" width="0.2234%" height="15" fill="rgb(220,19,52)" fg:x="1340" fg:w="3"/><text x="100.0266%" y="943.50"></text></g><g><title>test3`ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h69e88658388516abE (3 samples, 0.22%)</title><rect x="99.7766%" y="917" width="0.2234%" height="15" fill="rgb(221,78,38)" fg:x="1340" fg:w="3"/><text x="100.0266%" y="927.50"></text></g><g><title>test3`ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h230be59721b6b1a9E (3 samples, 0.22%)</title><rect x="99.7766%" y="901" width="0.2234%" height="15" fill="rgb(253,30,16)" fg:x="1340" fg:w="3"/><text x="100.0266%" y="911.50"></text></g><g><title>test3`ZN87_$LT$crossbeam_channel..channel..Receiver$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9b32c357d204ea3aE (2 samples, 0.15%)</title><rect x="99.8511%" y="885" width="0.1489%" height="15" fill="rgb(242,65,0)" fg:x="1341" fg:w="2"/><text x="100.1011%" y="895.50"></text></g></svg></svg>